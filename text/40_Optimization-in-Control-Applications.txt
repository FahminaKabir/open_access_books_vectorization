Mathematical
and Computational
Applications

Optimization
in Control
Applications
Edited by

Guillermo Valencia-Palomo and Francisco Ronay López-Estrada
Printed Edition of the Special Issue Published in
Mathematical and Computational Applications

www.mdpi.com/journal/mca

Optimization in Control Applications

Optimization in Control Applications

Special Issue Editors
Guillermo Valencia-Palomo
Francisco Ronay López-Estrada

MDPI • Basel • Beijing • Wuhan • Barcelona • Belgrade

Special Issue Editors
Guillermo Valencia-Palomo

Francisco Ronay López-Estrada

Instituto Tecnológico de

Instituto Tecnológico de Tuxtla

Hermosillo

Gutiérrez

Mexico

Mexico

Editorial Ofﬁce
MDPI
St. Alban-Anlage 66
4052 Basel, Switzerland

This is a reprint of articles from the Special Issue published online in the open access journal
Mathematical and Computational Applications (ISSN 2297-8747) in 2018 (available at: https://www.
mdpi.com/journal/mca/special issues/optimization in control)

For citation purposes, cite each article independently as indicated on the article page online and as
indicated below:
LastName, A.A.; LastName, B.B.; LastName, C.C. Article Title. Journal Name Year, Article Number,
Page Range.

ISBN 978-3-03897-447-5 (Pbk)
ISBN 978-3-03897-448-2 (PDF)

c 2018 by the authors. Articles in this book are Open Access and distributed under the Creative

Commons Attribution (CC BY) license, which allows users to download, copy and build upon
published articles, as long as the author and publisher are properly credited, which ensures maximum
dissemination and a wider impact of our publications.
The book as a whole is distributed by MDPI under the terms and conditions of the Creative Commons
license CC BY-NC-ND.

Contents
About the Special Issue Editors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vii
Preface to ”Optimization in Control Applications” . . . . . . . . . . . . . . . . . . . . . . . . . .

ix

Chahid Kamel Ghaddar
Rapid Solution of Optimal Control Problems by a Functional Spreadsheet Paradigm: A Practical
Method for the Non-Programmer
Reprinted from: Math. Comput. Appl. 2018, 23, 54, doi:10.3390/mca23040054 . . . . . . . . . . . .

1

Chahid Kamel Ghaddar
Novel Spreadsheet Direct Method for Optimal Control Problems
Reprinted from: Math. Comput. Appl. 2018, 23, 6, doi:10.3390/mca23010006 . . . . . . . . . . . . . 29
Imane Abouelkheir, Fadwa El Kihal, Mostafa Rachik and Ilias Elmouki
Time Needed to Control an Epidemic with Restricted Resources in SIR Model with Short-Term
Controlled Population: A Fixed Point Method for a Free Isoperimetric Optimal Control Problem
Reprinted from: Math. Comput. Appl. 2018, 23, 64, doi:10.3390/mca23040064 . . . . . . . . . . . . 52
Ellina Grigorieva and Evgenii Khailov
Optimal Strategies for Psoriasis Treatment
Reprinted from: Math. Comput. Appl. 2018, 23, 45, doi:10.3390/mca23030045 . . . . . . . . . . . . 70
Segun Isaac Oke, Maba Boniface Matadi and Sibusiso Southwell Xulu
Optimal Control Analysis of a Mathematical Model for Breast Cancer
Reprinted from: Math. Comput. Appl. 2018, 23, 21, doi:10.3390/mca23020021 . . . . . . . . . . . . 100
Dibyendu Biswas, Suman Dolai, Jahangir Chowdhury, Priti K. Roy and Ellina V. Grigorieva
Cost-Effective Analysis of Control Strategies to Reduce the Prevalence of Cutaneous
Leishmaniasis, Based on a Mathematical Model
Reprinted from: Math. Comput. Appl. 2018, 23, 38, doi:10.3390/mca23030038 . . . . . . . . . . . . 128
Fadwa El Kihal, Imane Abouelkheir, Mostafa Rachik and Ilias Elmouki
Optimal Control and Computational Method for the Resolution of Isoperimetric Problem in a
Discrete-Time SIRS System
Reprinted from: Math. Comput. Appl. 2018, 23, 52, doi:10.3390/mca23040052 . . . . . . . . . . . . 157
Johanna Pyy, Anssi Ahtikoski, Alexander Lapin and Erkki Laitinen
Solution of Optimal Harvesting Problem by Finite Difference Approximations of
Size-Structured Population Model
Reprinted from: Math. Comput. Appl. 2018, 23, 22, doi:10.3390/mca23020022 . . . . . . . . . . . . 171
Raheleh Jafari and Sina Razvarz
Solution of Fuzzy Differential Equations Using Fuzzy Sumudu Transforms
Reprinted from: Math. Comput. Appl. 2018, 23, 5, doi:10.3390/mca23010005 . . . . . . . . . . . . . 186
Lizeth Torres, Javier Jiménez-Cabas, José Francisco Gómez-Aguilar and Pablo Pérez-Alcazar
A Simple Spectral Observer
Reprinted from: Math. Comput. Appl. 2018, 23, 23, doi:10.3390/mca23020023 . . . . . . . . . . . . 201
v

Sasitorn Kaewman, Tassin Srivarapongse, Chalermchat Theeraviriya and
Ganokgarn Jirasirilerd
Differential Evolution Algorithm for Multilevel Assignment Problem: A Case Study in Chicken
Transportation
Reprinted from: Math. Comput. Appl. 2018, 23, 55, doi:10.3390/mca23040055 . . . . . . . . . . . . 215
José-Roberto Bermúdez, Francisco-Ronay López-Estrada, Gildas Besançon, Guillermo
Valencia-Palomo, Lizeth Torres, Héctor-Ricardo Hernández
Modeling and Simulation of a Hydraulic Network for Leak Diagnosis
Reprinted from: Math. Comput. Appl. 2018, 23, 70, doi:10.3390/mca23040070 . . . . . . . . . . . . 234

vi

About the Special Issue Editors
Guillermo Valencia-Palomo was born in Merida, Yucatan, Mexico, in 1980.

He received an

Engineering degree in Electronics from the Instituto Tecnológico de Mérida, Mexico, in 2003;
an M.Sc. in Automatic Control from the National Center of Research and Technological Development
(CENIDET), Mexico, in 2006; and a Ph.D. degree in Automatic Control and Systems Engineering
from The University of Shefﬁeld, U.K., in 2010. Since 2010, Dr. Guillermo Valencia-Palomo has
been a full-time professor at Tecnológico Nacional de México/Instituto Tecnológico de Hermosillo
(Mexico). He is the author/co-author of more than 80 research papers published in ISI-Journals and
international conferences. As a product of his research, he has one patent in commercial exploitation.
He has led a number of funded research projects, and these grants’ income represents a mixture of
sole investigator funding, collaborative grants, and funding from industry. His research interests
include predictive control, descriptor systems, linear parameter varying systems, fault detection,
fault tolerant control systems, and their applications to different physical systems.
Francisco-Ronay López-Estrada received his Ph.D. in Automatic Control from the University of
Lorraine, France, in 2014. He has been with Tecnológico Nacional de México/Instituto Tecnológico
de Tuxtla Gutiérrez, Mexico, as a lecturer since 2008. He received his M.Sc. degree in Electronic
Engineering in 2008 from the National Center of Research and Technological Development
(CENIDET), Mexico. He has led several funded research projects. His research interests are descriptor
systems, TS systems, fault detection, fault-tolerant control, and their applications to unmanned
vehicles and pipeline leak detection systems.

vii

Preface to ”Optimization in Control Applications”
Mathematical optimization is the selection of the best element in a set with respect to a
given criterion. Optimization has become one of the most used tools in modern control theory
for computing the control law, adjusting the controller parameters (tuning), model ﬁtting, ﬁnding
suitable conditions in order to fulﬁll a given closed-loop property, etc. In the simplest case,
optimization consists of maximizing or minimizing a function by systematically choosing input
values from a valid input set and computing the function value. To solve optimization problems,
researchers can use algorithms that end in a ﬁnite number of steps, or iterative methods that converge
to a solution (in some speciﬁc class of problems), or heuristics that can provide approximate solutions
to some problems (although their iterations do not necessarily converge). In practice, real-world
control systems need to comply with several conditions and physical and product-quality constraints
that have to be taken into account in the problem formulation. These represent challenges in the
application/implementation of the optimization algorithms, particularly when the solutions of these
optimization problems have to be computed in a constrained time window and/or in an embedded
platform.
This Special Issue provides a forum for high-quality peer-reviewed papers that broaden the
awareness and understanding of advanced optimization techniques and their applications in control
engineering. This topic encompasses many algorithms and process ﬂows and tools, including:
optimal control of nonlinear systems; optimal control of complex systems; optimal observer design;
numerical optimization; evolutionary optimization; and constrained optimization; among others.
Speciﬁcally, this Special Issue gathers twelve papers that contribute to this topic by presenting: rapid
solutions of optimal control problems by a functional spreadsheet paradigm; a novel spreadsheet
direct method for optimal control problems; a ﬁxed point method for a free isoperimetric optimal
control problem to control an epidemic with restricted resources in an SIR model with a short-term
controller population; optimal strategies for psoriasis treatment; an optimal control analysis of a
mathematical model for breast cancer; a cost-effective analysis of control strategies to reduce the
prevalence of cutaneous leishmaniasis based on a mathematical model; an optimal control and
computation method for the solution of an isoperimetric problem in a discrete-time SIRS system;
a solution of an optimal harvesting problem by ﬁnite difference approximations of a size-structured
population model; a solution of fuzzy differential equations using fuzzy Summudu transformations;
the development of a spectral observer for the reconstruction of a time signal via state estimation and
its frequencies decomposition; a differential evolution algorithm for a multilevel assignment problem;
and the modelling and simulation of a hydraulic network for leak diagnosis and optimal control.
We believe that the papers in this Special Issue reveal an exciting area which can be expected
to continue to grow in the very near future—namely, the use of advanced optimization strategies in
engineering applications. The pursuit of work in this area requires expertise in control engineering
as well as in systems design and numerical analysis. We hope that this issue helps to bring these
communities into closer contact with each other, as the fruitfulness of collaboration across these areas
becomes clear.
Guillermo Valencia-Palomo, Francisco Ronay López-Estrada
Special Issue Editors

ix

Mathematical
and Computational
Applications

Article

Rapid Solution of Optimal Control Problems by a
Functional Spreadsheet Paradigm: A Practical
Method for the Non-Programmer
Chahid Kamel Ghaddar
ExcelWorks LLC, Sharon, MA 02067, USA; cghaddar@excel-works.com; Tel.: +1-781-626-0375
Received: 29 August 2018; Accepted: 26 September 2018; Published: 28 September 2018

Abstract: We devise a practical and systematic spreadsheet solution paradigm for general optimal
control problems. The paradigm is based on an adaptation of a partial-parametrization direct solution
method which preserves the original mathematical optimization statement, but transforms it into a
simpliﬁed nonlinear programming problem (NLP) suitable for Excel NLP solver. A rapid solution
strategy is implemented by a tiered arrangement of pure elementary calculus functions in conjunction
with Excel NLP solver. With the aid of the calculus functions, a cost index and constraints are
represented by equivalent formulas that fully encapsulate an underlining parametrized dynamical
system. Excel NLP solver is then employed to minimize (or maximize) the cost index formula,
by varying decision parameters, subject to the constraints formulas. The paradigm is demonstrated
for several ﬁxed and free-time nonlinear optimal control problems involving integral and implicit
dynamic constraints with direct comparison to published results obtained by fundamentally different
methods. Practically, applying the paradigm involves no more than deﬁning a few formulas using
basic Excel spreadsheet skills.
Keywords: optimal control; dynamic optimization; mathematical programming; differential
equations; parameter estimation; Excel spreadsheet; calculus functions

1. Introduction
Many researchers and academics often need to solve optimal control problems that are frequently
postulated in various engineering, social, and life sciences [1–3]. An optimal control problem is
concerned with ﬁnding control functions, (or policies), that achieve optimal trajectories for a set of
controlled differential state variables. The optimal trajectories are determined by solving a constrained
dynamical optimization problem, such that a cost index is minimized (or maximized), subject to
constraints on state variables and control functions. Mathematically, an optimal control problem may
be stated generally as follows (bold symbols indicate vector-valued functions):
Find control functions u(t) = (u1 (t), u2 (t), . . . , um (t)) and corresponding state variables
x(t) = ( x1 (t), x2 (t), . . . , xn (t)), t ∈ [t0 , t F ] which minimize (or maximize) the cost index
J = H (x( T ), T ) +

 tF
t0

.

..

.

G (x(t), x(t), x(t), u(t), u(t), t) dt,

(1)

subject to
M

dx
= F (x( t ), u( t ), t ),
dt

(2)

with initial conditions
x ( 0 ) = x0 ,

Math. Comput. Appl. 2018, 23, 54; doi:10.3390/mca23040054

1

(3)

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 54

and end conditions and bounds


Q(x( T ), T ) = 0,
.

.



S x(t), u(t), x(t), u(t) ≤ 0.

(4)
(5)

In the formulation (1)–(5), the generally nonlinear H, and G are scalar functions, whereas F, Q and
S are vector valued functions. Typically, either H or Q are speciﬁed but not both in the same problem.
Common forms of Q and S are end conditions on the state variables, x( T ) = xT , and bound constraints
on the controls, umin ≤ u(t) ≤ umax respectively. More general forms of S considered in this paper
include algebraic and integral constraints involving derivatives. The matrix M in (2) offers an optional
coupling of states’ temporal derivatives by a mass matrix which may be singular. If M is singular,
the equation system (2) is differential algebraic, or DAE. For uncoupled derivatives, M is the identity
matrix which can be omitted. Furthermore, t F , which denotes the ﬁnal time, may be ﬁxed or free.
Numerical solution strategies for (1)–(5) can be classiﬁed into two approaches: indirect and direct
methods. Indirect methods employ Pontryagin’s minimum principle to transform the problem into an
augmented Hamiltonian system requiring the solution of a boundary value problem which may be
hard to solve [4,5]. On the other hand, direct method approaches transform the original optimal control
problem into a nonlinear programming problem which can be solved by various established NLP
packages. The transformation is carried out via a discretization of the control and the state functions
on a time grid using some form of a collocation method [4,6,7]. Complete discretization of the state
and control functions eliminate the need to iteratively solve the inner initial value problem (IVP) (2) but
at the expense of a large numbers of decision variables for the NLP solver. Other direct approaches
rely only on a partial parametrization for the control functions using piecewise constant or higher
order polynomial approximations [8]. In this approach, the inner IVP must be solved repeatedly by
the outer NLP algorithm while searching for the optimal parameter vector. Except for the most trivial
cases, optimal control problems are inherently nontrivial to solve. They typically require a level of
programming ﬂuency, in addition to a good understanding of the general structure of the solution
strategy, and the various solvers required to implement it [9].
In [10], the author introduced a practical spreadsheet method for solving a class of optimal control
problems using basic spreadsheet skills. The method utilized two elementary calculus functions: an
initial value problem solver and a discrete data integrator from an available Excel calculus Add-in [11]
in conjunction with Excel intrinsic NLP solver to formulate a partial-parametrization direct solution
strategy. With the aid of the calculus functions, a cost index was represented by an equivalent
formula that fully encapsulated a control-parametrized inner IVP (2)–(3). Excel NLP solver was
employed next for minimizing (or maximizing) the cost index formula, by varying a decision parameter
vector, subject to bounds constraints on state and control variables. The method proved effective at
solving several nonlinear optimal control problems reproduced from Elnagar and Kazemi [6] who
employed a full-parametrization direct method using pseudo-spectral approximation and NLPQL
optimization software.
This research paper aims at generalizing the method introduced in [10] for more general
formulations of optimal control than previously considered. More speciﬁcally, this paper demonstrates
a systematic solution strategy formulated by the aid of various elementary calculus functions,
for optimal control problems involving one or more of the following conditions: dependence on
higher order derivatives of state or control variables in the cost index and constraints; integral and
algebraic dynamic constraints; as well as implicit inner IVP. In addition, this paper investigates
convergence and error control of the method, and provides direct comparison of optimal trajectories
with published solutions obtained by fundamentally different methods.
It should be noted that the solution strategy formulation pursued in this research, although
founded on a common approach, follows closely the original mathematical problem statement,
and thus implementation of the strategy varies according to the given problem. Therefore, the paper
gives considerable emphasis on the application of the method using four representative problems

2

Math. Comput. Appl. 2018, 23, 54

selected from various applications. Results presented in Section 3 are remarkable, in terms of
convergence, agreement with published solutions, and notably, the minimal effort required to obtain
them with basic spreadsheet formulas.
In view of traditional spreadsheet applications, the devised solution strategy represents a leap
in the utilization of the spreadsheet for solving general optimal control problems. The strategy
departs markedly from prior spreadsheet approaches [12,13] by shifting the effort from a low-level
detailed algorithmic implementation to a high-level problem modeling. Prior approaches utilized
the spreadsheet explicitly as the computational grid for the discretization and solution of the inner
IVP. This effectively constrained the scope to rather simple problems that can be easily discretized
with an explicit differencing scheme suitable for the spreadsheet. In contrast, we employ a set of
pure calculus functions for computing integrals, derivatives and solving differential equations as the
building blocks for a direct solution method. The calculus functions, described in Appendix A, utilize
adaptive algorithms which are independent of the spreadsheet grid and thus suitable for a general
class for nonlinear stiff problems. The calculus functions are utilized in formulas just like intrinsic
math functions based on a simple input/output model. In essence, the calculus functions represent
a natural extension of the built-in spreadsheet math functions with the allowance that some of their
input arguments are functions themselves and not just static values.
The reminder of this paper is organized as follows: In the next section, we present an outline of
the general steps required to implement the direct spreadsheet solution strategy, and discuss sources of
errors that impact convergence and accuracy of the solution as well as possible remedies. In Section 3,
we apply the method for solving four different optimal control problems selected to demonstrate
the various conditions outlined earlier. Direct comparisons of optimal trajectories obtained by the
method versus published solutions obtained by fundamentally different approaches are also provided.
In addition, effects of parametrization order and error control are investigated in some problems.
Section 4 presents concluding remarks as well as directions for future research. Detailed descriptions
of the various calculus functions utilized in this work are included in Appendix A.
2. Mechanics of Spreadsheet Direct Method
The solution strategy is based on an adaptation of the control-parametrization direct approach [4,8]
by an analogous spreadsheet functional formulation. The building blocks of the functional formulation
are a set of calculus spreadsheet functions [11,14] which integrate with the spreadsheet, like intrinsic
pure math functions, but also accept formulas as a new type of argument for solving problems in
integral, algebraic, and differential calculus. For example, an integration function accepts a formula
and limits as inputs, and it outputs an accurate integral value much like an intrinsic math function
accepts a number and computes its square root. Speciﬁcally, we make use of the following functions
from a calculus Add-in [11]:

•
•
•
•

Initial value problem solver, IVSOLVE, using RADAU5 an implicit 5th-order Runge-Kutta
algorithm with adaptive time step [15].
Discrete data Integrator, QUADXY, using cubic splines [16].
Discrete data differentiator, DERIVXY, using cubic splines [16].
Formula integrator, QUADF, using Gauss quadrature with adaptive error control [17].

The functions are utilized in combination with Excel NLP solver, which is based on the Generalized
Reduced Gradient algorithm based on Lasdon and Waren [18]. A detailed description of the calculus
functions usage, and respective algorithms are given in Appendix A. The critical characteristic of
the calculus functions which permits their seamless utilization with the NLP solver in a functional
paradigm, is the mathematical purity property. The calculus functions do not modify their inputs,
and produce no side effects in the spreadsheet. They only compute and display a solution result in
their allocated spreadsheet memory cells. The authority to modify the inputs to the calculus functions,
via changes to the decision parameter vector, is conﬁned to the outer NLP solver command.
3

Math. Comput. Appl. 2018, 23, 54

Below, we describe the main elements of the solution strategy introduced originally in [10] but
generalized in this work for solving general optimal control problem (1)–(5) with the aim of supporting
the various conditions outlined earlier.
2.1. Solution Strategy
The strategy comprises three ordered steps which are implemented by the aid of calculus functions:
In the ﬁrst step, we obtain an initial solution to the inner IVP (2)–(3), based on suitable
parametrization for the control functions with initial guesses for the unknown parameters and a
ﬁnal time for free-time problems. The unknown parameters and the ﬁnal time constitute the decision
variables for the ﬁnal optimization step by the outer NLP solver. Any prior information about the
controls should be incorporated in the speciﬁed parametrization. Absent any information, a low-order
polynomial is often an adequate choice. The initial IVP solution is obtained by the calculus function
IVSOLVE which displays the state variables, x(t), in an allocated array of the spreadsheet at uniform
output time points. It should be noted that output time grid is determined by the number of rows
in the allocated output array but is, otherwise, unrelated to the accuracy of the computed solution.
To display a ﬁner output time grid, a larger output array should be allocated. However, the resolution
of the output time grid affects the accuracy of the computed integrals for the cost index and any
integral constraints which is discussed in Section 2.2. Optional parameters to IVSOLVE could also be
used to control or specify the output time points.
In the second step, we construct an analogous formula for the cost index (1) dependent on
the initial solution outputted by IVSOLVE. The cost index may depend on x(t), the control values,
u(t), as well as ﬁrst and higher order derivatives of the state variables and controls. Values for u(t),
.
u(t) and higher derivatives are readily generated using the speciﬁed parametrized formula for a
control u(t). The spreadsheet is particularly suited for such computations using its AutoFill feature.
.
..
On the other hand, values for the state variables derivatives x(t), and x(t) are not readily available
and must be approximated by differentiating x(t) values obtained by IVSOLVE. We accomplish
this task by the aid of a discrete data differentiator calculus function DERIVXY which computes
derivatives using cubic splines to model the best function described by x(t). With all the necessary
values obtained, we proceed to deﬁning an analogous formula for the cost index, which is typically
deﬁned as a continuous time integral of an algebraic integrand. The devised method is to sample the
integrand expression using the obtained values for the states, controls and their derivatives, followed
by employing a discrete data integrator calculus function QUADXY to integrate a cubic-spline ﬁt
function through the sampled integrand. Depending on a particular problem formulation, it may be
necessary to deﬁne additional formulas to represent constraints equations (5) that may be present.
Such formulas can often be constructed in a similar way to the cost index formula using appropriate
calculus functions. In particular, we shall demonstrate in Section 3 using an additional formula
integrator function QUADF to deﬁne an integral constraint formula.
Figure 1 illustrates the aforementioned steps applied to an optimal control problem with one
control and two state variables. An initial IVP solution, which is dependent on a decision parameters
vector, is obtained with IVSOLVE in an array (Figure 1a). Values for the control, u(t), and any
..
needed state derivatives such as x1 (t), are generated in additional columns (Figure 1b,c) at the time
values of the IVP solution. Next, the cost index integrand expression is sampled at the IVP solution
times (Figure 1d), and the sample is then integrated to deﬁne the cost index formula (Figure 1e).
The generated values interdependence hierarchy ensures that any change to the decision parameters
vector, such as by an outer NLP solver, will trigger reevaluation of the cost index formula in the proper
order shown in the ﬁgure. The cost index formula thus fully encapsulates the inner IVP problem.
In the last step, we conﬁgure Excel NLP solver to minimize (or maximize) the cost index formula
by varying the decision parameters vector subject to bounds, end conditions and other present
constraints. Bound constraints on x(t), as well as end point constraints on x( T ), are imposed directly
on the corresponding values in the IVP solution array. More general constraints are imposed on

4

Math. Comput. Appl. 2018, 23, 54

additional formulas constructed in step 2 as needed. The three steps are demonstrated on several
examples in the next section.
ȱ
(a)ȱȱ
ȱ
IVPȱsolutionȱarrayȱobtainedȱwithȱIVSOLVEȱ
ȱ
ȱ
(b)ȱ
ȱ
(c)ȱ
Controlȱvaluesȱ
ȱ
ȱ
ȱ
ȱ
ȱȱ
ȱ
1ȱ
2ȱ
3ȱ
4ȱ
100ȱ
101ȱ
102ȱ

generatedȱfromȱ

‫ݔ‬ሷ ଵ ሺ‫ݐ‬ሻȱ generatedȱ

parameterizedȱ

usingȱDERIVXYȱ

formulaȱ

(d)ȱ

(e)ȱ

Costȱintegrandȱ

Costȱindexȱformulaȱ

sampledȱusingȱ

definedȱbyȱintegratingȱ

columnsȱAȱtoȱFȱ

(e)ȱusingȱQUADXYȱ

Aȱ
Bȱ Cȱ Dȱ Eȱ
Fȱ
Gȱ
Hȱ
Iȱ
tȱ
X1ȱ X2ȱ ȱ
u(t)ȱ X1’’(t)ȱ ȱ
Integrand(t)ȱ CostȱIndexȱ
0ȱ
#ȱ
#ȱ
ȱ
#ȱ
#ȱ
ȱ
#ȱ
#ȱ
0.05ȱ #ȱ
#ȱ
ȱ
#ȱ
#ȱ
ȱ
#ȱ
ȱ
0.1ȱ
#ȱ
#ȱ
ȱ
#ȱ
#ȱ
ȱ
#ȱ
ȱ
4.9ȱ
#ȱ
#ȱ
ȱ
#ȱ
#ȱ
ȱ
#ȱ
ȱ
4.95ȱ #ȱ
#ȱ
ȱ
#ȱ
#ȱ
ȱ
#ȱ
ȱ
5ȱ
#ȱ
#ȱ
ȱ
#ȱ
#ȱ
ȱ
#ȱ
ȱ

Figure 1. Illustration of the ordered steps to deﬁne an analog formula for the cost index (1) which
encapsulates the inner IVP (2)–(3).

2.2. Convergence and Error Control
Two sources of errors are introduced by the spreadsheet method with respect to the original
problem. The ﬁrst error is introduced by restricting the space of admissible control functions to a
ﬁnite-dimensional space, for example, variable-order polynomials up to a ﬁxed degree. For some
problems, it may not be possible to ﬁnd a solution if the optimal control, in fact, lies outside the
admissible space. The second source of error is introduced by the calculus numerical algorithms.
This error can be further split into two sources. The error associated with solution of the inner IVP,
and the error associated with integration (or differentiation) of discrete data sets generated from the
IVP solution. The ﬁrst error is bounded by the tolerances speciﬁed for IVSOLVE algorithm. The second
error impacts the accuracy of the computed integral for the cost index. Under the assumption that
the discrete data describe a smooth curve, the computed integral by QUADXY using cubic splines is
generally quite accurate. However, it may be further improved by any of the following acts.

•
•

•

Increasing the size of the data set by increasing the number of rows of the allocated IVP solution
array to output a ﬁner time grid.
Supplying optional slopes at the end points of the curve to the calculus function when available.
The slopes may be derived analytically from the integrand expression and can improve the
accuracy of the spline ﬁt near the curve edges.
Using nonuniform output time points clustered near rapidly-varying regions of the state
trajectories. This can be controlled via optional arguments to IVSOLVE including supplying
exact values for the output time points.

In practice, we have found that the parametrization order and the starting guess for unknown
parameters to be the most important factors inﬂuencing convergence. We have generally used
polynomials up to 5th order which have performed reasonably well. On the other hand, increasing
the output array for IVP solution beyond a reasonable size, on the order of 100 uniform subdivisions
for the time interval, has not generally resulted in a consistent or signiﬁcant improvement of the
result. In the examples in the next section, we shall demonstrate the effects of both increasing the
parametrization order and reducing the output time interval.
5

Math. Comput. Appl. 2018, 23, 54

3. Illustrative Optimal Control Problems
In the following subsections we apply the method to four different optimal control problems
representing various engineering applications and compare the optimal trajectories with published
solutions. The computations were carried out on a standard laptop computer with an Intel i7 four-core
processor at 2.70 GHz running Microsoft Windows 10 and Excel 2016 with ExceLab calculus add-in [11],
which enables the calculus function in Excel. A supplementary Excel workbook containing the solved
examples is available for downloading from the publisher.
3.1. Minimum Energy Shape: Hanging Chain
The ﬁrst example is concerned with ﬁnding the shape u(t) of a chain of length L suspended
between two points, such that its total energy is minimized. We state the problem as described in [19]
with L = 4, below:
Find u(t) which minimizes the total energy cost index
J=

 1
0

u(t)



.

1 + u(t)2 dt,

(6)

subject to the chain length constraint
 1
0

.

1 + u(t)2 dt = 4,

(7)

u(0) = 1,

(8)

u(1) = 3.

(9)

and the end conditions

Note that in this problem formulation, the inner IVP is implicitly deﬁned by the integral
constraint (7). Dolan et al. [19] reformulated the problem, via variable substitution, as a standard
optimal control problem subject to a system of explicit differential equations and solved it by a
direct approach. Discretization was done using a uniform time step and the trapezoidal rule for the
integration. Results for the AMPL implementation were reported using several solvers including
KNITRO and LOQO. The best cost index was found at 5.06852 starting from a quadratic approximation
and using a grid of 800 nodes. Our spreadsheet solution below is formulated based on the original
problem statement (6)–(9).
3.1.1. Solution by Direct Spreadsheet Method
Referring to Figure 2, we setup problem (6)–(9) in Excel using named variables with labels listed
in column A. The shape function u(t) was parametrized using a 3rd order polynomial with unknown
coefﬁcients c_0, c_1, c_2 and c_3 as shown by formula B7. In B15 and B16, formulas for the initial and
ﬁnal values, u(0) and u(1) were deﬁned by evaluating B7 at time equal zero and one (these formulas are
used later to impose the constraints (8)–(9)). An additional formula was deﬁned in B8, (named udot),
.
for the shape function derivative, u(t) by differentiating B7 with respect to time. Next, we deﬁned the
cost index integral (6), by using the integration
 calculus function QUADF as shown in B11. The ﬁrst
.

parameter to QUADF is the integrand u(t) 1 + u(t)2 which is deﬁned by the equivalent formula
in B10. The 2nd parameter is the variable of integration t, and the 3rd and 4th parameters are the
integration limits. Likewise, with the aid of QUADF, we deﬁned the constraint integral (7) as shown in
B14 (named I_c). This completed the model needed to run Excel NLP solver.
3.1.2. Results and Analysis

Excel NLP solver is invoked from the Data tab on Excel Ribbon and displays a dialog to enter
the problem objective, variables and constraints. Figure 3 shows the inputs for problem 3.1 in which
6

Math. Comput. Appl. 2018, 23, 54

the objective J (B11), was selected to be minimized, by varying the parameters c_0, c_1, c_2 and c_3,
subject to the three constraints: I_c = 4, corresponding to (7); u_0 = 1, corresponding to (8); and u_1 = 3,
corresponding to (9).

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

A
B
t
Parametrized chain shape function
c_0
0
c_1
0
c_2
0
c_3
0
u
=c_0+c_1*t+c_2*t^2+c_3*t^3
udot
=c_1+2*c_2*t+3*c_3*t^2
Cost Index
=u*(SQRT(1+udot^2))
J
=QUADF(B10,t,0,1)
Constraints definitions
=SQRT(1+udot^2)
I_c
=QUADF(B13,t,0,1)
u_0
=c_0
u_1
=c_0+c_1+c_2+c_3

Figure 2. Spreadsheet parametrized model for problem 3.1.

Figure 3. Input to Excel solver for problem 3.1 based on the spreadsheet model in Figure 2.

7

Math. Comput. Appl. 2018, 23, 54

The solver converged, starting from a zero guess for the parameters in less than a second to the
result shown in Figure 4 with a ﬁnal cost index of 5.0751. The optimal shape function u(t) is plotted in
Figure 5 together with digitally-read values from the plot published in [19].

Figure 4. Answer report generated by Excel solver using 3rd order parametrization for problem 3.1.

Figure 5. Optimal u(t) computed using 3rd order parametrization for problem 3.1. Reported values by
Dolan et al. are also shown.
8

Math. Comput. Appl. 2018, 23, 54

The difference between the value reported by Dolan et al. [19] and our computed value using a
cubic approximation for u(t) is approximately 0.13%. We have tried a quadratic approximation and
obtained a slightly higher cost index of 5.078412. It is likely that the small difference originated from
integration error in [19] using a trapezoidal rule, whereas the integration in our solution by QUADF
calculus function is based on an adaptive Gauss-quadrature scheme [17] which is accurate to machine
precision for a smooth polynomial integrand.
To demonstrate the effect of control parametrization order on the result, next we tried a 5th-order
polynomial approximation to the shape function u(t), but also appended the problem with one
additional constraint:
u(t) ≥ 0.
(10)
Incorporating (10) into the spreadsheet model was accomplished as follows. In a new column, a vector
of time values from 0 to 1 in increment of 0.1 was generated using Excel AutoFill feature, along with a
corresponding vector for the parametrized shape formula as shown in Figure 6. To impose (10), it is
sufﬁcient to demand that the minimum value of the shape vector, as computed in F13 of Figure 6,
be greater than or equal to zero. Running the NLP solver with the added constraint yielded a cost
index of 4.654 as shown in Figure 7 and plotted in Figure 8. The higher-order approximation to the
shape function has resulted in a considerably lower cost index, by more than 8.3%, compared to that
reported by Dolan et al. [19].

1
2
3
4
5
6
7
8
9
10
11
12
13

E
t
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
min(u)

F
u(t)
1
1.11111
1.24992
1.42753
1.65984
1.96875
2.38336
2.94117
3.68928
4.68559
6
1

=c_0+c_1*E2+c_2*E2^2+c_3*E2^3+c_4*E2^4+c_5*E2^5

=MINA(F2:F12)

Figure 6. Parametrized u(t) function is sampled with AutoFill to provide a handle on its minimum
value for the purpose of imposing constraint (10).

9

Math. Comput. Appl. 2018, 23, 54

Figure 7. Answer report generated by Excel solver using a 5th order parametrization for problem 3.1
with the added constrained (10).

Figure 8. Optimal u(t) computed by using 5th order parametrization for problem 3.1. The higher-cost
solution with 3rd order parametrization and reported values by Dolan et al. are also shown.

3.2. Quadratic Control Problem with Integral Constraint
The following problem which involves an integral dynamic constraint was studied by
Lim et al. [20], who showed the that the optimal control can be calculated by solving an optimal
10

Math. Comput. Appl. 2018, 23, 54

parameter selection problem together with an unconstrained LQ problem. The optimal control
problem is stated as follows:
Find u1 (t), u2 (t), t ∈ [0, 1] which minimize the cost index
J = 0.5 x1 (1)2 + 0.5
subject to

 1
0


x1 2 + u1 2 + u2 2 dt,

.

(11)

x1 = 3x1 + x2 + u1 ,

(12)

x2 = − x1 + 2x2 + u2 ,

(13)

x1 (0) = 4, x2 (0) = −4,

(14)

.

with initial conditions
and integral bounds constraint (There appears to be a typographical error in [20] where (15) is stated
as less than 8. The actual value appears to be 80 since 8 would clearly violate the constraint at the
reported optimal solution in [20].)
0.5 x2 (1)2 + 0.5

 1
0


x1 2 + u1 2 + u2 2 dt ≤ 80.

(15)

Lim et al. [20] calculated, with aid of control software MISER 3.1, an optimal cost index J of 62.66103.
3.2.1. Solution by Direct Spreadsheet Method
Referring to Figure 9 and working with named variables shown in column A, both u1 (t) and u2 (t)
were parametrized using 3rd-order polynomials as shown in B10 and B11, and the IVP equations (12)
and (13) were deﬁned by equivalent formulas in B13 and B14. The state variables x1 and x2 are assigned
the initial conditions as shown in B3 and B4. Next, an initial solution to the underlining IVP (12)–(14)
was obtained by evaluating the formula
=IVSOLVE(B13:B14, B2:B4, {0,1})

(16)

in an allocated array E1:G102. IVSOLVE was passed the IVP equations B13:B14, the IVP variables B2:B4,
and the time interval [0, 1] and computed a formatted result shown partially in Figure 10. Here we
have allocated 102 rows for the result array to display the solution at uniform time steps of 0.01.
To deﬁne an equivalent formula for the cost index (11), we proceeded by sampling the controls
formulas, and the cost index integrand as shown in columns I, J and K of Figure 10 by starting from the
initial formulas shown in the ﬁgure and using AutoFill to generate the values. (Note the hierarchical
interdependence of the generated columns on the IVP solution). Next, we deﬁned the cost index
formula in which the discrete data integrator calculus function QUADXY was employed to integrate
the sampled integrand as shown in B16 of Figure 9. Similarly, we deﬁned an analog formula for the
integral constraint (15) as shown in B18 of Figure 9, and thus prepared all the input needed to run
Excel NLP solver next.

11

Math. Comput. Appl. 2018, 23, 54

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

A
B
ODE variables with initial conditions
t
x_1
4
x_2
-4
Parametrized controls with starting guess
c_0
0
c_1
0
c_2
0
c_3
0
u_1
=c_0+c_1*t+c_2*t^2+c_3*t^3
u_2
=d_0+d_1*t+d_2*t^2+d_3*t^3
ODE rhs equations
x1dot =3*x_1+x_2+u_1
x2dot =-x_1+2*x_2+u_2
Cost Index
J
=0.5*F102^2+0.5*QUADXY(E2:E102,K2:K102)
Constraint
con
=0.5*G102^2+0.5*QUADXY(E2:E102,K2:K102)

C

D

d_0
d_1
d_2
d_3

0
0
0
0

Figure 9. Spreadsheet parametrized model for problem 3.2. The colored ranges are inputs for IVSOLVE
formula (16).

Figure 10. Partial display of IVP (12)–(14) solution obtained by IVSOLVE formula (16), and dependent
generated columns for the parametrized controls formulas, and the integrand expression for the cost
index (11).

3.2.2. Results and Analysis
Excel solver was conﬁgured to minimize the cost index B16, by varying the controls coefﬁcients
B6:B9 and D6:D9, subject to the integral constraint B18 being smaller than or equal to 80. Excel solver
converged in approximately eight seconds to the solution shown in Figure 11 and plotted in Figure 12.
The obtained cost index at 59.1471 was lower than reported by Lim et al. [20] at 62.66103 using an

12

Math. Comput. Appl. 2018, 23, 54

indirect approach with MISER 3.1. Figure 13 provides direct comparisons for x1 (t), u1 (t) and u2 (t)
trajectories obtained by the current method and digitized plot values from [20]. The plots show good
agreement despite fundamentally different solution strategies.

Figure 11. Answer report generated by Excel solver for problem 3.2.

Figure 12. Optimal trajectories computed by the spreadsheet method for problem 3.2.

13

Math. Comput. Appl. 2018, 23, 54

Figure 13. Direct comparison of spreadsheet solution with reported solution obtained by Lim et al. [20]
for problem 3.2.

To investigate the effect of numerical integration error on the result, we increased the output array
for IVSOLVE from 102 to 502 rows which reduced output time increment from 0.01 to 0.002. However,
this has resulted in only minor improvement of the cost index to 59.1429, with otherwise insigniﬁcant
change to the original solution which indicated the initial output time step of .01 was sufﬁcient for
accurate integration.
3.3. Robot Motion Planning: Obstacle Avoidance
The third problem is concerned with planning a 2D motion for a robot from point A (0, 0) to
point B (1, 1), to avoid two circular obstacles of radius R2 = 0.1, centered at (0.4, 0.5) and (0.8, 1.5),
while using the least amount of energy. The two controls for the robot motion are the constant speed,
v, and the variable angle (direction), θ (t) of the motion. The corresponding optimal control problem
has the following form [21]:
Find v, θ (t), t ∈ [0, 1] which minimize the energy cost index
 1
..

J=
subject to

0

..

x (t)2 + y(t)2 dt,

.

x (t) = v ∗ cos(θ ),
.

(17)

(18)

y(t) = v ∗ sin(θ ),

(19)

x (0) = 0, y(0) = 0,

(20)

x (1) = 1.2, y(1) = 1.6,

(21)

with initial conditions
end conditions
and trajectory constraints which model the circles to be avoided

( x (t) − 0.4)2 + (y(t) − 0.5)2 ≥ 0.1,

14

(22)

Math. Comput. Appl. 2018, 23, 54

( x (t) − 0.8)2 + (y(t) − 1.5)2 ≥ 0.1.

(23)

Note that the cost index in this example depends on the second derivatives of the state variables.
3.3.1. Solution by Direct Spreadsheet Method
Referring to Figure 14, the speed was parametrized using the named variable v for B6 with
initial value of 1, and the angle (named theta in B13) was parametrized with a ﬁfth order polynomial.
Using the named variable t, x and y, the IVP formulas (18) and (19) were deﬁned in B15 and B16.
An initial IVP solution was obtained by evaluating IVSOLVE formula (24) in array D1:F102 shown
partially in Figure 15.
=IVSOLVE(B15:B16, B2:B4, {0,1})
(24)
The next task was to deﬁne an analog formula for the cost index (17). The integrand for the cost
..
..
..
..
index depends on x (t), and y(t) which we needed to generate. Although x (t), and y(t) can be derived
analytically for this particular problem by differentiating (18) and (19), we elected to compute them
numerically using the discrete data differentiator calculus function DERIVXY as shown in columns H
..
and I of Figure 15. For example, to compute x (t), we started from the formula
=DERIVXY($D$2:$D$102, $E$2:$E$102, D2, 2)

(25)

in H2 passing in, respectively, the time and x vectors from the IVP solution array, the point of
differentiation, and the order of the x derivative to compute. Next, the AutoFill was used to generate
values for all the points in the time vector. Note that the ﬁrst two arguments in (25) were locked using
Excel $ operator to prevent these values from being incremented during the AutoFill, allowing only D2
..
..
to be incremented. Values for the integrand expression x (t)2 + y(t)2 were then readily generated in a
new column L and integrated with respect to the time vector by using the calculus function QUADXY
as shown in B18 of Figure 14.

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

A
B
ODE system variables with initial conditions
t
x
0
y
0
Parametrized controls with starting guess
v
1
c_0
1
c_1
0
c_2
0
c_3
0
c_4
0
c_5
0
theta
=c_0+c_1*t+c_2*t^2+c_3*t^3+c_4*t^4+c_5*t^5
ODE system equations
dxdt
=v*COS(theta)
dydt
=v*SIN(theta)
Cost Index
J
=QUADXY(D2:D102,J2:J102)
Path constraint helpers
min(c1) =MINA(L2:L102)
min(c2) =MINA(M2:M102)

Figure 14. Spreadsheet parametrized model for problem 3.3. The colored ranges are inputs for
IVSOLVE formula (24).

15

Math. Comput. Appl. 2018, 23, 54

=DERIVXY($D$2:$D$102,ȱ$F$2:$F$102,ȱD2,ȱ2)ȱ
=DERIVXY($D$2:$D$102,ȱ$E$2:$E$102,ȱD2,ȱ2)ȱ

=(E2Ȭ0.4)^2+(F2Ȭ0.5)^2ȱ

=IVSOLVE(B15:B16,B2:B4,{0,1})ȱ

ȱ
1ȱ

Dȱ
tȱ

Eȱ

Fȱ

xȱ

=H2^2+I2^2ȱ

Gȱ
ȱ

yȱ

=(E2Ȭ0.8)^2+(F2Ȭ1.5)^2ȱ

Hȱ

Iȱ

d2xdt2ȱ

Jȱ

d2ydt2ȱ

Kȱ

Jȱintegrandȱ ȱ

Lȱ
c1ȱ

Mȱ
c2ȱ

ȱ 3.33EȬ14ȱ 2.66EȬ13ȱ

7.21EȬ26ȱ

ȱ

3ȱ

0.01ȱ 0.005403ȱ 0.008415ȱ

ȱ

Ȭ9.3EȬ15ȱ

0ȱ

8.56EȬ29ȱ

ȱ 0.397363ȱ 2.856211ȱ

4ȱ

2ȱ

0ȱ

0ȱ

0ȱ

0.41ȱ

2.89ȱ

0.02ȱ 0.010806ȱ 0.016829ȱ

ȱ

Ȭ5.2EȬ14ȱ

Ȭ2.7EȬ13ȱ

7.37EȬ26ȱ

ȱ 0.384926ȱ 2.822622ȱ

101ȱ 0.99ȱ 0.534899ȱ 0.833056ȱ

ȱ

Ȭ9.9EȬ13ȱ

Ȭ2.4EȬ12ȱ

6.87EȬ24ȱ

ȱ 0.129124ȱ 0.515092ȱ

102ȱ

ȱ

Ȭ7.7EȬ12ȱ

Ȭ9.1EȬ12ȱ

1.42EȬ22ȱ

ȱ 0.136287ȱ 0.501103ȱ

1ȱ 0.540302ȱ 0.841471ȱ

Figure 15. Partial display of the IVP (18)–(20) solution obtained by IVSOLVE formula (24), and
dependent generated values needed to deﬁne the cost index and constraints formulas of problem 3.3.

The remaining task to complete the input for Excel NLP solver was to deﬁne formulas for the
circle avoidance constraints. Using x and y values from the IVP solution, values for the constraints
equations (22) and (23) were generated as shown in columns L and M of Figure 15. To impose the
bounds, it was sufﬁcient to require that the minimum values of columns L and M, as computed in B20
and B21 of Figure 14, be greater than or equal to the speciﬁed bound.
3.3.2. Results and Analysis
Excel solver was conﬁgured to minimize the cost index, J (B18), by varying the speed v (B6),
and theta polynomial coefﬁcients (B7:B12), subject to the constraints:
v >= 0,
E102 = 1.2, corresponding to (21)
F102 = 1.6, corresponding to (21)
B20 >= 0.1, corresponding to (22)
B21 >= 0.1, corresponding to (23).
The solver converged to the expected low-energy solution shown in Figure 16b in approximately
18 s, with the result shown in Figure 17. The initial trajectory for the robot based on our starting guess
for the controls is shown in Figure 16a. The cost index was found at approximately 8.02.

16

Math. Comput. Appl. 2018, 23, 54

(a)

(b)

Figure 16. Initial (a) and optimal (b) trajectories for problem 3.3.

Figure 17. Answer report generated by Excel Solver for problem 3.3.

To make the problem more interesting, we added a 3rd circle obstacle by appending the additional
path constraint to the problem:

( x (t) − 1.0)2 + (y(t) − 0.8)2 ≥ 0.1.

17

(26)

Math. Comput. Appl. 2018, 23, 54

The new conﬁguration and initial trajectory are shown in Figure 18a. The incorporation of the 3rd
constraint into the model setup is straight forward and the solver converged to the higher energy
trajectory shown in Figure 18b at a cost index of approximately 22.69; the results are shown in Figure 19.

(a)

(b)

Figure 18. Initial (a) and optimal (b) trajectories for problem 3.3 with additional constraint (26).

Figure 19. Answer report generated by Excel Solver for problem 3.3 with additional constraint (26).

18

Math. Comput. Appl. 2018, 23, 54

3.4. Nonlinear Bioprocess Optimization: Batch Production
The 4th problem considers the optimal control of a fed-batch reactor for the production of
ethanol [8]. The goal is to maximize the yield of ethanol using the feed rate as the control. This problem
has highly nonlinear dynamic constraints and a free terminal time t F , which is also an unknown design
variable. The mathematical statement of the free end time problem is given below:
Find the ﬂowrate u(t), t ∈ [0, t F ], and the terminal time t F to maximize the cost index

subject to

J = x3 ( t F ) x4 ( t F ),

(27)

x1
,
x4

(28)

.

x 1 = g1 x 1 − u

150 − x2
,
x4
.
x3
x 3 = g2 x 1 − u ,
x4

.

x2 = −10g1 x1 + u

.

x4 = u,
where



0.408
1 + x3 /16

(30)
(31)



x2
,
0.22 + x2


x2
1
,
g2 =
1 + x3 /71.5
0.44 + x2
g1 =

(29)

(32)
(33)

with Initial conditions
x1 (0) = 1, x2 (0) = 150, x3 (0) = 0, x4 (0) = 10,

(34)

0 ≤ u ≤ 12,

(35)

0 ≤ x4 (t F ) ≤ 200.

(36)

and bounds constraints

This problem was solved by Banga et al. [8] using a two-phase (stochastic-deterministic) hybrid
(TPH) approach to overcome convergence difﬁculties reported by previous published attempts.
Their best reported results found the maximum cost index J at 20839, and the terminal time t F
at 61.17 h.
3.4.1. Solution by Direct Spreadsheet Method
Following the procedure in the previous examples, the control u(t) was parameterized using a
2nd order polynomial as shown in B11 of Figure 20, and the IVP equations were deﬁned in terms of
the named variables as shown in B18:B21. Note that the terminal time has been assigned the variable
B14 (named tF) with initial value of 50. The IVP solution was obtained with IVSOLVE formula
=IVSOLVE(B18:B21, B2:B6, B13:B14)

(37)

in array D1:H102 as shown partially in Figure 21. Note that the ﬁnal time is now a variable for
IVSOLVE which was passed in the 3rd parameter B13:B14. The cost index formula for this problem is
simple and was deﬁned by formula B23 which references x3 (t F ) and x4 (t F ) of the IVSOLVE solution
array. To impose the bound constraint (35), we sampled the control formula in column J at the solution
output time points as shown in Figure 21 and demanded that the maximum and minimum values of
the control vector as computed by formulas B25 and B26 satisfy the appropriate bounds.

19

Math. Comput. Appl. 2018, 23, 54

1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

A
B
ODE system variables with initial conditions
t
0
x_1
1
x_2
150
x_3
0
x_4
10
Parametrized controllers with starting guess
c_0
3
c_1
0
c_2
0
u
=c_0+c_1*t+c_2*t^2
ODE time domain with final time guess
ts
0
tF
50
ODE system equations
g1_
=(0.408/(1+x_3/16))*(x_2/(0.22+x_2))
g2_
=(1/(1+x_3/71.5))*(x_2/(0.44+x_2))
x1dot
=g1_*x_1-u*x_1/x_4
x2dot
=-10*g1_*x_1+u*(150-x_2)/x_4
x3dot
=g2_*x_1-u*x_3/x_4
x4dot
=u
Cost Index
J
=G102*H102
Constraints helpers
max(u) =MAXA(J2:J102)
min(u) =MINA(J2:J102)

Figure 20. Spreadsheet parametrized model for problem 3.4. The colored ranges are inputs for
IVSOLVE formula (37).

=c_0+c_1*D2+c_2*D2^2
=IVSOLVE(B18:B21,B2:B6,B13:B14)

D

E

F

x_1

G

x_2

H

x_3

x_4

I

J

1

t

u

2

0

1

150

0

10

3

0.5

1.062808

148.0676

0.478626388

11.5

3

4

1

1.142691

146.2653

0.936035562

13

3

100

49

15.05587

0.078212

73.9061806

157

3

101

49.5

15.05539

0.077045

73.75951155

158.5

3

102

50

15.05491

0.07591

73.61434682

160

3

3

Figure 21. Partial display of IVP (28)–(34) solution obtained by IVSOLVE formula (37), and generated
values for the parametrized control of problem 3.4.

20

Math. Comput. Appl. 2018, 23, 54

3.4.2. Results and Analysis
Excel solver was run starting from the initial guess for the unknown control coefﬁcients and
terminal time shown in Figure 20. The cost index J (B23) was selected to be maximized by varying the
terminal time tF (B14), and the coefﬁcients c_0, c_1 and c_2, (B8:B10) subject to the constraints:
B25 <= 12, corresponding to (35)
B26 >= −12, corresponding to (35)
H102 <= 200, corresponding to (36).
Excel NLP solver converged in approximately 29 s to the result shown in Figure 22, and plotted
in Figure 23. A partial listing of the converged control values and IVP solution reﬂecting the new
terminal time is shown in Figure 24.

Figure 22. Answer report generated by Excel solver for problem 3.4.

21

Math. Comput. Appl. 2018, 23, 54

Figure 23. Optimal trajectories computed by the spreadsheet method for problem 3.4.

D
1

E

t

F

x_1

G

x_2

H

x_3

I

x_4

J
u

2

0

1

150

0

10

3

0.616388

1.313316

147.1366

0.712647865

9.737328

-0.44065
-0.41144

4

1.232776

1.702539

143.5086

1.64960033

9.49305

-0.38097

100

60.40604

14.84059

2.12186

102.2278477

189.4647

8.393491

101

61.02243

14.88833

1.630308

102.4917196

194.6852

8.545821

102

61.63882

14.925

1.25

102.6127698

200

8.699408

Figure 24. Partial listing of the converged IVP solution and control values of problem 3.4.

The achieved maxima for the cost index was at 20522.5 and the terminal time t F was found at
approximately 61.64. These values are in very good agreement with the best results reported by
Banga et al. [8] at 20839, and 61.17 h. Figure 25 shows direct comparison of the states and control
trajectories with digitized plot values from Banga et al. The agreement is quite good for the most
part despite fundamentally different control parametrization and algorithms employed by the two
methods. In particular, the control parametrization in [8] is approximated by connected line segments,
whereas our control is a continuous parabola.

22

Math. Comput. Appl. 2018, 23, 54

Figure 25. Direct comparison of spreadsheet solution with reported solution obtained by Banga et al.
for problem 3.4.

4. Conclusions
We devised a practical and systematic spreadsheet solution strategy for solving general optimal
control problems. The strategy is based on an adaptation of the partial-parametrization direct
solution method which preserves the structure of the original mathematical optimization statement,
but transforms it into a simpliﬁed NLP problem suitable for Excel NLP solver. The solution strategy
is formulated by the aid of several elementary calculus functions from an available Excel calculus
Add-in [11] for solving differential equations, computing integrals and derivatives. The calculus
functions are employed as building blocks in a hierarchical functional paradigm implemented by
standard Excel formulas in conjunction with Excel built-in NLP solver to carry out a dynamic
optimization program.
Results were obtained for four representative problems selected to illustrate modeling of several
conditions including dependence on higher order derivatives of state and controls as well as implicit
IVP problems and integral constraints. The results were compared with published solutions obtained
by other methods, and in some cases, were shown to be better by the measure of the cost index.
The performance of the method is also notable with computing times on the order of seconds to
a minute on a standard laptop. As has been illustrated by the solution procedure, applying the
technique involves no more than deﬁning a few formulas that parallel the original mathematical
equations. No special programming skill is needed beyond basic familiarity with the common
spreadsheet operation. The minimal problem setup effort, in combination with the ubiquity of
23

Math. Comput. Appl. 2018, 23, 54

Excel spreadsheet, present reasons to explore the method as an alternative, simpler educational tool
for rather complex problems.
The success of the devised strategy for optimal control of ordinary differential equations supports
future research for extending the strategy to optimal control of partial differential equations. In [22],
the author demonstrated an analogous formulation combing the NLP solver with a PDE solver from
the same Add-in [11] for parameter estimation of partial differential algebraic equations, and it may be
feasible that certain formulations of optimal control of partial differential equations are solvable in the
spreadsheet by a similar strategy. On the other hand, it is worth investigating devising an alternative
strategy based on the indirect solution method [4,5] for optimal control problems. The indirect method
requires solving a boundary value problem which could be solved by the aid of a boundary value
problem solver function also available in the Excel calculus Add-in [11].
Supplementary Materials: An Excel workbook containing the solved problems in this paper is available online
at http://www.mdpi.com/2297-8747/23/4/54/s1.
Funding: This research received no external funding.
Conﬂicts of Interest: The author of the manuscript is the founder of ExcelWorks LLC of Massachusetts, USA
supplying the Excel calculus Add-in [11], utilized in this research work.

Appendix A
The following subsections present brief descriptions of the calculus functions utilized in this
work. The functions are enabled as an extension of Excel math functions by installing ExceLab calculus
Add-in [11]. For more detailed descriptions of the functions, the reader is referred to [11].
Appendix A.1 IVSOLVE: Initial Value Problem Solver
The worksheet function IVSOLVE solves an initial value differential algebraic equation system in
the interval t ∈ ts , t f
M dx
dt = F (x( t ), t )
x(t0 ) = x0

(A1)

x(t) = ( x1 (t), x2 (t), . . . , xn (t)), and M is an optional mass matrix which may be singular. IVSOLVE
uses by default RADUA5 an implicit 5th-order Runge-Kutta scheme with adaptive time step [15],
and at minimum, requires three input parameters to describe the ODE system:
1.
2.
3.

Reference to the right-hand side formulas corresponding to the vector-valued function
F (x(t), t) = ( f 1 (x(t), t), f 2 (x(t), t), . . . , f n (x(t), t)).
Reference to the system variables in the speciﬁc order (t, x1 , x2 , . . . , xn ).
The integration time interval end points.

Additional optional parameters include specifying a mass matrix as well as algorithmic controls.
IVSOLVE is run as an array formula in an allocated array of cells. It evaluates to an ordered tabular
result where the time values are listed in the ﬁrst column, and the corresponding state variables’ values
are listed in adjacent columns. By default, IVSOLVE reports the output at uniform intervals according
to the allocated number of rows for the output array. Custom output formats can be achieved via the
optional parameters including specifying custom divisions or exact points. We demonstrate IVSOLVE
for the following DAE problem (reproduced from [14]):
dy1
4
dt = −0.04y1 + 10 y2 y3 , t ∈ [0, 1000]
dy2
4
7 2
dt = 0.04y1 − 10 y2 y3 − 3 ∗ 10 y2

0 = y1 + y2 + y3 − 1
y1 (0) = 1, y2 (0) = 0, y3 (0) = 0

24

(A2)

Math. Comput. Appl. 2018, 23, 54

Referring to Figure A1, the system RHS formulas are deﬁned in cells A1:A3 using cell T1 for the
time variable and Y1, Y2, Y3 for the state variables which are assigned the initial conditions as shown
in the ﬁgure.

Figure A1. Spreadsheet model for equation system (A2).

To solve the system, we execute the array formula
=IVSOLVE (A1:A3, (T1,Y1:Y3), {0,1000}, 1)
in an allocated array, (e.g., C1:F22) by pressing the 3 keys Control+Shift+Enter simultaneously.
IVSOLVE computes and displays the solution shown Figure A2. Here we have used the 4th optional
parameter to specify that the last equation, (A3) is an algebraic equation.

Figure A2. Partial listing of the result computed by IVSOLVE (left) for system (A2), and a plot of the
trajectories (right).

Appendix A.2 QUADF: Formula Integrator Function
The spreadsheet function QUADF computes deﬁnite and improper one-dimensional integrals
f ( x )dx. QUADF utilizes QUADPACK numerical integration algorithms [17] suitable for smooth,
irregular, and integrands with known singularities. By default, it uses QAG, an adaptive algorithm
using Gauss-Kronrod 21-point integration rule. We demonstrate QUADF by computing the following
integral (reproduced from [14]):
b
a

1
0

ln x
√ dx = −4
x

(A3)

Referring to Figure A3, the integrand formula is deﬁned in cell A1 using X1 as dummy variable for the
integration. The QUADF integration formula
=QUADF (A1, X1, 0, 1)
is deﬁned in A2 passing in the integrand formula, the variable of integration, and values for the limits.
Evaluating A2 yields the result.

25

Math. Comput. Appl. 2018, 23, 54

Figure A3. Demonstration of QUADF for computing integral (A3) in Excel.

Using recursion, multiple integrals of any order can be computed by direct nesting of QUADF,
as demonstrated by the following volume integral example:
3
2 3− 2 x 6−3x−2y

1 − x dz dy dx = 3

0

0

(A4)

0

To compute (A4), we construct a simple program consisting of three nested calls of QUADF as shown
in Figure A4. Using X1, Y1 and Z1 as dummy variables, the integrand formula is deﬁned in A1, and the
inner, middle, and outer integrals formulas are deﬁned in A2, A3 and A4 respectively, with each inner
QUADF formula serving as the integrand for the next outer QUADF formula. Evaluating the outer
integral in A4 computes the triple integral value.

Figure A4. Demonstration of QUADF for computing multiple integral (A4) in Excel.

Appendix A.3 QUADXY: Discrete Data Integrator
The spreadsheet function QUADXY computes the integral of a curve passing through the set of
data pairs ( xi , yi ( xi )), i = 0.. n. The integration interval is deﬁned by the endpoints [ x0 , xn ]. QUADXY
computes the integral by the aid of cubic (default) or linear splines ﬁt to the data [16]. Start and end
point slope information may be speciﬁed in the 3rd optional parameter to enhance accuracy near the
end points. The slope data is deﬁned by a reference to a key/value array as illustrated in Figure A5.

Figure A5. Optional input format to QUADXY for endpoints boundary conditions.

For example, the formula
=QUADXY(X1:X20, Y1:Y20, C1:D2)
computes an integral value of 20 data pairs in columns X1 and Y1 with supplied optional end points
slope values shown in Figure A5.
Appendix A.4 DERIVXY: Discrete Data Differentiator
The spreadsheet function DERIVXY employs cubic splines to compute the dth derivative of a
curve passing through a set of data pairs ( xi , yi ( xi )), i = 0..n at a speciﬁed point x = p. Similar to

26

Math. Comput. Appl. 2018, 23, 54

QUADXY, optional start and or endpoint slope information may be speciﬁed to enhance accuracy near
the end points. For example, the formula
=DERIVXY(X1:X20, Y1:Y20, 5, 2)
computes the second derivative for a curve passing through 20 points in columns X1 and Y1 at the
point x = 5.
When using DERIVXY with Excel AutoFill feature to differentiate a given data set at multiple
points, it is necessary to lock the parameters except for the variable point (parameter 3) so they are not
incremented during the AutoFill. For example, the following formula is safe to use with AutoFill to
generate derivatives at points stored in Z1, Z2, Z3, etc.
=DERIVXY($X$1:$X$20, $Y$1:$Y$20, Z1)
References
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.

15.
16.
17.
18.
19.

Geering, H.P. Optimal Control with Engineering Applications; Springer: Berlin, Germany, 2007.
Sethi, S.P. Optimal Control Theory: Applications to Management Science and Economics, 3rd ed.; Springer: Berlin,
Germany, 2019.
Aniţa, S.; Arnăutu, V.; Capasso, V. An Introduction to Optimal Control Problems in Life Sciences and Economics:
From Mathematical Models to Numerical Simulation with MATLAB; Birkhäuser: Basel, Switzerland, 2011.
Betts, J.T. Practical Methods for Optimal Control and Estimation Using Nonlinear Programming, 2nd ed.; Advances
in Design and Control; Society for Industrial and Applied Mathematics: Philadelphia, PA, USA, 2009.
Böhme, T.J.; Frank, B. Indirect Methods for Optimal Control. In Hybrid Systems, Optimal Control and Hybrid
Vehicles. Advances in Industrial Control; Springer: Cham, Switzerland, 2017.
Elnagar, G.; Kazemi, M.A. Pseudospectral Chebyshev Optimal Control of Constrained Nonlinear Dynamical
Systems. Comput. Optim. Appl. 1998, 11, 195–217. [CrossRef]
Böhme, T.J.; Frank, B. Direct Methods for Optimal Control. In Hybrid Systems, Optimal Control and Hybrid
Vehicles. Advances in Industrial Control; Springer: Cham, Switzerland, 2017.
Banga, J.R.; Balsa-Canto, E.; Moles, C.G.; Alonso, A.A. Dynamic optimization of bioprocesses: Efﬁcient and
robust numerical strategies. J. Biotechnol. 2003, 117, 407–419. [CrossRef] [PubMed]
Rodrigues, H.S.; Torres Monteiro, M.T.; Torres, D.F.M. Optimal Control and Numerical Software: An
Overview. arXiv, 2014; arXiv:1401.7279.
Ghaddar, C.K. Novel Spreadsheet Direct Method for Optimal Control Problems. Math. Comput. Appl. 2018,
23, 6. [CrossRef]
ExcelWorks LLC, MA, USA. ExceLab Calculus Add-in and Reference Manual. Available online: https:
//excel-works.com (accessed on 22 September 2018).
Nævdal, E. Solving Continuous Time Optimal Control Problems with a Spreadsheet. J. Econ. Educ. 2003,
34, 2. [CrossRef]
Weber, E.J. Optimal Control Theory for Undergraduates Using the Microsoft Excel Solver Tool. Comput. High.
Educ. Econ. Rev. 2007, 19, 4–15.
Ghaddar, C. Unconventional Calculus Spreadsheet Functions. World Academy of Science, Engineering
and Technology, International Science Index 112. Int. J. Math. Comput. Phys. Electr. Comput. Eng. 2016,
10, 194–200.
Hairer, E.; Wanner, G. Solving Ordinary Differential Equations II: Stiff and Differential-Algebraic Problems; Springer
Series in Computational Mathematics; Springer: Berlin, Germany, 1996.
De Boor, C. A Practical Guide to Splines (Applied Mathematical Sciences); Springer: Berlin, Germany, 2001.
Piessens, R.; de Doncker-Kapenga, E.; Ueberhuber, C.W.; Kahaner, D.K. Quadpack: A Subroutine Package for
Automatic Integration; Springer: Berlin, Germany, 1983.
Lasdon, L.S.; Waren, A.D.; Jain, A.; Ratner, M. Design and Testing of a Generalized Reduced Gradient Code
for Nonlinear Programming. ACM Trans. Math. Softw. 1978, 4, 34–50. [CrossRef]
Dolan, E.D.; More, J.J. Benchmarking Optimization Software with Cops; Technical Report; Argonne National
Laboratory: Argonne, IL, USA, 2001.

27

Math. Comput. Appl. 2018, 23, 54

20.
21.
22.

Lim, A.E.B.; Liu, Y.Q.; Teo, K.L.; B, M.J. Linear-quadratic optimal control with integral quadratic constraints.
Optim. Control Appl. Methods 1999, 20, 79–92. [CrossRef]
Bhattacharya, R. OPTRAGEN 2.0: A MATLAB Toolbox for Optimal Trajectory Generation; Texas A & M
University: College Station, TX, USA, 2013.
Ghaddar, C.K. Rapid Modeling and Parameter Estimation of Partial Differential Algebraic Equations by a
Functional Spreadsheet Paradigm. Math. Comput. Appl. 2018, 23, 39. [CrossRef]
© 2018 by the author. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

28

Mathematical
and Computational
Applications

Article

Novel Spreadsheet Direct Method for Optimal
Control Problems
Chahid Kamel Ghaddar
ExcelWorks LLC, Sharon, MA 02067, USA; cghaddar@excel-works.com; Tel.: +1-781-626-0375
Received: 26 December 2017; Accepted: 23 January 2018; Published: 25 January 2018

Abstract: We devise a simple yet highly effective technique for solving general optimal control
problems in Excel spreadsheets. The technique exploits Excel’s native nonlinear programming
(NLP) Solver Command, in conjunction with two calculus worksheet functions, namely, an initial
value problem solver and a discrete data integrator, in a direct solution paradigm adapted to the
spreadsheet. The technique is tested on several highly nonlinear constrained multivariable control
problems with remarkable results in terms of reliability, consistency with pseudo-spectral reported
answers, and computing times in the order of seconds. The technique requires no more than deﬁning
a few analogous formulas to the problem mathematical equations using basic spreadsheet operations,
and no programming skills are needed. It introduces an alternative, simpler tool for solving optimal
control problems in social and natural science disciplines.
Keywords: optimal control; dynamical optimization; parameter estimation; differential equations;
spreadsheet; Excel Solver

1. Introduction
Optimal control problems are commonly encountered in engineering and life sciences, as well as
social studies such as economics and ﬁnance [1–3]. An optimal control problem is typically concerned
with ﬁnding optimal control functions (or policies) that achieve optimal trajectories for a set of
controlled differential state variables. The optimal trajectories are decided by a constrained dynamical
optimization problem, such that a cost functional is minimized or maximized subject to certain
constraints on state variables and the control functions. Mathematically, an optimal control problem
may be stated as follows:
Find the control functions u(t) = (u1 (t), u2 (t), . . . , um (t)) and the corresponding state variables
x(t) = ( x1 (t), x2 (t), . . . , xn (t)), t ∈ [0, T ] which minimize (or maximize) the functional
J = H (x( T ), T ) +

T

G (x(t), u(t), t) dt,

(1)

0

subject to
M

dx
= F (x( t ), u( t ), t ),
dt

(2)

with initial conditions
x ( 0 ) = x0 ,

(3)

Q(x( T ), T ) = 0,

(4)

S(x(t), u(t)) ≤ 0.

(5)

and optional ﬁnal conditions and bounds

Math. Comput. Appl. 2018, 23, 6; doi:10.3390/mca23010006

29

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 6

In the formulation (1)–(5), the generally nonlinear H and G are scalar functions, whereas F, Q,
and S are vector-valued functions. Typically, either H or Q are speciﬁed but not both in the same
problem. Common forms of Q and S are x( T ) = xT and umin ≤ u(t) ≤ umax , respectively. We have
.
..
chosen not to include x(t) and x(t) in the formulation because a higher-order explicit differential
equation system can be restated as a ﬁrst-order system via variable substitution. The matrix M in (2)
offers an optional coupling of the states’ temporal derivatives by a mass matrix which may be singular.
If M is singular, the equation system (2) is differential algebraic, or DAE. For uncoupled derivatives,
M is the identity matrix which can be omitted. Furthermore, T, which denotes the ﬁnal time, may be
ﬁxed or free.
Numerical solution strategies of (1)–(5) fall into one of two approaches: an indirect method,
where Pontryagin’s minimum principle is employed to transform the problem into an augmented
Hamiltonian system requiring the solution of a boundary value problem [4]; and a direct method,
where the original system’s variables are approximated by parameterized appropriate functions
which, in turn, reduce the problem into a ﬁnite-dimensional nonlinear programming problem [5].
Direct methods can be further classiﬁed as full or partial parametrization methods. In the latter,
only the controls are parametrized, wherein the inner initial value problem (IVP) (2)–(3) is treated as
a separate dependent problem that must be solved repeatedly by the outer nonlinear programming
(NLP) algorithm [6].
Except for the most trivial cases, optimal control problems can be difﬁcult to solve, particularly
for those who are not inclined towards programming and numerical methods. Despite advances in
software programs, it remains a nontrivial task to utilize a standard package such as MATLAB to solve
optimal control problems. The student must have sufﬁcient programming skill, as well as a good
understanding of the general structure of the solution algorithm and the various solvers required to
implement it [7].
In this article, we present a systematic technique for solving optimal control problems in a
spreadsheet, modeled on partial parametrization direct methods. The technique is made possible,
on the one hand, by algorithmic advances [8,9] which enabled the introduction of mathematically pure
calculus worksheet functions to the spreadsheet [10,11]. A pure calculus function is evaluated as a
standard built-in math function; however, it accepts, via input parameters, formulas representing a
problem model and outputs a formatted solution result. Speciﬁcally, we make use of two calculus
functions described in Appendix A: an IVP solver, based on an implicit RADUA5 algorithm with
adaptive step control [12], which we employ for solving the inner IVP (2)–(3); and a discrete data
integrator, based on cubic spline approximations [13], which we employ to approximate the cost index
(1). On the other hand, Excel spreadsheets include a powerful NLP Solver Command based on the
Generalized Reduced Gradient Method (GRG) [14] which is compatible with the calculus functions.
We devise a direct control–parametrization method based on employing the calculus functions with
the NLP Solver in a dynamical optimization paradigm for the solution of (1)–(5).
Attempts to solve optimal control problems in spreadsheets are not new; however, to the best of
our knowledge, no prior work has presented a practical direct spreadsheet method aimed at solving
the general nonlinear multidimensional optimal control problem (1)–(5). The chief reason is that prior
approaches utilized the spreadsheet explicitly as the computational grid for the discretization and
solution of the underlining IVP. This limits the practical scope to rather simple problems that can be
easily discretized with an explicit differencing scheme suitable for the spreadsheet. For example,
Weber [15] demonstrated a direct approach to solving control problems in resource economics
involving simple one-dimensional IVPs, and direct summation of discrete values for the cost index.
Nævdal [16] demonstrated a basic implementation of the indirect method, with the aid of Visual Basic
for Applications (VBA) programming, to solve one-dimensional optimal control problems. The method
utilized Excel’s Solver in conjunction with an explicit difference scheme and a shooting algorithm to
solve the resulting boundary value problem. While Nævdal’s work provides educational insights into
the mechanics of the indirect solution method, its detail-intensive implementation makes it impractical

30

Math. Comput. Appl. 2018, 23, 6

to use or extend to higher dimensions or nonlinear stiff systems requiring adaptive implicit schemes.
Our devised direct spreadsheet method, on the other hand, differs fundamentally from prior work,
in that the algorithmic implementation for solving the IVP, and integrating the cost index, has been
decoupled from the spreadsheet grid and encapsulated in pure spreadsheet solver functions suitable
for seamless integration with the NLP Solver. The design of the solver functions, described in Section 2,
permits utilization of fully implicit and adaptive algorithms which make the method applicable to
a general class of nonlinear multivariable optimal control problems. Furthermore, by encapsulating
the tedious implementation details in standard pure math functions with a clear divide between
input and output, the method is applicable with little more than basic spreadsheet knowledge, and
without any programming skills. As demonstrated in Section 3, results obtained on several highly
nonlinear problems are remarkable, in terms of both the reliability and the computing time in the order
of seconds. The devised method extends the utility of the spreadsheet beyond what has been practical
or even feasible before.
The remainder of this paper is organized as follows: In the next section, we describe the basic steps
required to model and solve an optimal control problem using the adapted direct method technique.
In Section 3, we demonstrate the technique for solving four different control problems reproduced
from Elnagar and Kazemi [17] who used a pseudo-spectral direct method. The problems include:
1.
2.
3.
4.

A bang–bang control problem.
A highly nonlinear and coupled system.
A minimum swing container transfer problem involving multiple controls and constraints.
A minimum time orbit transfer control problem with free end time.

Section 4 provides some practical tips for applying the technique, followed by conclusions in
Section 5. Appendix A includes a description for the IVP solver, IVSOLVE, and the discrete data
integrator functions, QUADXY, both of which are essential for the technique. We also remark that our
main focus in this ﬁrst article is to introduce and illustrate the spreadsheet direct solution method rather
than formulate or study any speciﬁc optimal control problem. As such, we start from a mathematical
statement of a given problem and present a feasible solution obtained by the method with relevant
comparisons to the reported result in [17].
2. Spreadsheet-Adapted Direct Solution Method
The main enabling elements of the devised method are, in addition to the NLP Solver, the IVP
solver function, IVSOLVE, and the discrete data integrator, QUADXY. The IVSOLVE spreadsheet
function, described in Appendix A.1, is designed according to the ﬂowchart of Figure 1, wherein a
suitable highly accurate algorithm, such as RADUA5 [12], is fully shielded with a strict divide between
the IVP model input and the output solution results. The model input is represented by formulas that
are direct analogues to the IVP mathematical equations, and the output solution results are displayed in
a formatted tabular array of elective resolution which is easily adjusted to yield an accurate integration
of a dependent cost index. By design, IVSOLVE is a pure function which does not modify its input
but merely computes and displays the solution in its allocated spreadsheet array. QUADXY, on the
other hand, follows a standard spreadsheet User Deﬁned Function (UDF) implementation to integrate
a vector of ordered points, (t, y(t))i , i = 1, n. QUADXY performs the integration with the aid of
cubic splines ﬁt to the data. Under the assumption that the discrete data describe a smooth curve,
the computed integral is generally quite accurate and can be further improved by supplying optional
slopes at the end points of the curve when they are known or can be estimated. Likewise, QUADXY is
also a pure function which does not modify its inputs.
Below, we describe the general steps for employing IVSOLVE and QUADXY with the NLP Solver
for solving the optimal control problem (1)–(5). Some of these steps may or may not be required for a
given problem. To simplify the discussion, we shall assume a single control function, u(t). Extension to

31

Math. Comput. Appl. 2018, 23, 6

multiple controls is straightforward and is demonstrated by the examples. In practice, there are three
systematic tasks:
Task 1
The ﬁrst step is to obtain, with the IVP solver function, IVSOLVE, an initial solution for the
underlining IVP (2)–(3) using an appropriately parametrized formula for the control function and initial
guesses for the unknown parameters. A continuous control function can be parametrized, for example,
by a third-order polynomial with unknown coefﬁcients, such as ‘=c_0+c_1*t+c_2*tˆ2+c_3*tˆ3’. On the
other hand, a discontinuous control function can be modeled using the standard IF statement in Excel.
For example, a two-stage, constant controller can be deﬁned as follows: ‘=IF(t<=ts,value1,value2)’.
Here ts, value1, and value2 are unknown parameters that would be assigned initial guesses.
Task 2
In the second task we deﬁne an analogous objective formula for the cost functional (1).
Our strategy is to integrate, using QUADXY, a sampled vector of the integrand expression in (1)
using the solution values obtained in Task 1. To accomplish this, in a new column, we generate values
for the parametrized control formula evaluated at the solution’s output times and, in a second column,
we generate values for the integrand expression, using the solution’s state variables and generated
control values as needed. Both the control and integrand columns are easily generated using the
AutoFill feature of Excel. To deﬁne an analogous objective formula for the cost index (1), we employ
the discrete data integrator function, QUADXY, to integrate the generated integrand data column
versus the solution’s output times column. The ordered steps needed to deﬁne the objective formula
are summarized in Figure 2.
Task 3
The last task is to conﬁgure and run Excel’s NLP Solver. The NLP Solver can be conﬁgured
to minimize or maximize an objective formula by changing design variables, subject to deﬁned
constraints. The design variables are the unknown parameters which are assigned initial guesses
in Task 1. The constraints (4) and (5) are added directly in the Solver’s dialog. Simple equality end
conditions on state variables are added by referencing the corresponding cells in the solution output as
illustrated in Figure 2. Bound constraints on state variables or controls are easily imposed with the aid
of Excel’s MAXA() and MINA() math functions which compute the maximum and minimum values of
a vector. Concrete examples are presented in the next section.

Figure 1. Flowchart for the design of a mathematically pure spreadsheet solver function which accepts
formulas as input arguments. Enabling technology is described in [8,9].

32

Math. Comput. Appl. 2018, 23, 6

How It Works
Key to the successful operation of the adapted direct solution method are two attributes: the purity
of the IVP solver function, and the Automatic Calculation Mode of the spreadsheet. As described
earlier, the IVSOLVE function does not modify its inputs, and the authority to modify the inputs to
IVSOLVE via changes to the decision parameter vector is conﬁned to the outer NLP Solver command.
On the other hand, the spreadsheet maintains a dependency hierarchy, and updates all information
whenever a change occurs. Any modiﬁcation to the design parameters by the outer NLP Solver
triggers reevaluation of the inner IVSOLVE solution, the dependent control and integrand columns,
the objective, and any constraint formulas in the proper order. The NLP Solver always receives
up-to-date values for the objective and constraints whenever it alters the design variables’ values.

Figure 2. Illustration of the ordered steps for deﬁning an analogous objective formula to the cost index
functional (1). The illustration assumes a problem with two state variables and one control.

3. Illustrative Examples
In this section, we apply the spreadsheet method to solve four optimal control problems
reproduced from Elnagar and Kazemi [17], who used a pseudo-spectral high order Chebyshev
approximation scheme in conjunction with the general-purpose sequential programming software
package NLPQL. Relevant comparisons with reported results in [17] are included. The examples
are representative of various types of optimal control problems and intended to serve as a template
as well as validation for the effectiveness of the devised spreadsheet method. We recommend that
the reader review Appendix A prior to reading the examples. Also, some basic familiarity with the
spreadsheet operation is assumed, including naming variables, deﬁning formulas, and running the
NLP Solver command.
3.1. A Bang–Bang Control Problem
The ﬁrst example describes a bang–bang (two-stage) control problem. The mathematical problem
is stated as follows:
Minimize
J=
subject to

1
2

5

[ x (t)2 + y(t)2 ] dt

(6)

t ∈ [0, 5],

(7)

0

.

x ( t ) = y ( t ),
33

Math. Comput. Appl. 2018, 23, 6

.

y ( t ) = y ( t ) − x ( t ) + u ( t ),

(8)

x (0) = 0.231, y(0) = 1.126,

(9)

− 0.8 ≤ u(t) ≤ 0.8.

(10)

3.1.1. Spreadsheet Model
Working with named variables with adjacent labels shown in Column A of Figure 3,
we parametrized the two-stage control function, u(t), using a standard IF() statement, as shown
in B9. The unknown parameters switchT, stage1, and stage2 were assigned the initial guess values
0.1, 0, and 1. The right-hand sides of the IVP differential Equations (7) and (8) were represented by
the equivalent formulas B11 and B12, and the initial conditions (9) were assigned to the variables x
and y in B3 and B4. The colored ranges in Figure 3 represent the model input required to obtain the
initial solution for the IVP (7)–(9) using the IVSOLVE function. The initial solution was obtained by
evaluating the formula
=IVSOLVE(B11:B12,B2:B4,{0,5})
(11)
in an allocated array D2:F103. The result is shown partially in Figure 4, and the initial trajectories of
x(t), y(t), and u(t) are plotted in Figure 7a.
A

B

1 ODE variables
2 t

0

3 x

0.231

4 y

1.126

5 Parametrized control formula
6 switchT

0.1

7 stage1

0

8 stage2

1
=IF(t<=switchT,stage1,stage2)

9 u

10 ODE rhs formulas
11 xdot

=y

12 ydot

=uƺx+y

Figure 3. Spreadsheet model for IVP (7)–(9) with parametrized control function. The colored ranges
are input parameters for the IVSOLVE Formula (11).

D

E

1

IVP Solution

2

t

x

F

H
u

y

J
Integrand

L

M

Cost functional

3

0

0.231

1.126

0

1.321237 Objective

4

0.05

0.288414

1.170438

0

1.453107

246.0854

5

0.1

0.348032

1.21424

0

1.595504 Constraint formulas

6

0.15

0.411089

1.308339

1

1.880744 Max(u)

1

7

0.2

0.478891

1.403911

1

2.200301 Min(u)

0

102

4.95

ƺ12.9106

ƺ21.0491

1

609.7477

103

5

ƺ13.9717

ƺ21.3881

1

652.6612

Figure 4. Partial listing of computed results by Formula (11). Also shown are generated control and
integrand columns, and initial objective formula value. The associated formulas are listed in Table 1.

34

Math. Comput. Appl. 2018, 23, 6

In order to deﬁne the objective formula for the cost functional (6) as described in Task 2 of
Section 2, we ﬁrst generated, based on the obtained initial solution array, two new columns labeled
u and Integrand (see Figure 4) for the control function and the integrand expression. The control
column, u, was generated with the AutoFill feature of Excel, using the formula H3 shown in Table 1.
The integrand column was generated in a similar way using the formula J3 in Table 1. Here, we simply
evaluated the expression x (t)2 + y(t)2 using the corresponding output solution values for t, x, and y
from the IVSOLVE solution.
Table 1. Formula deﬁnitions used for solving optimal control problem (6)–(10).
Purpose

Cell

Formula

Initial value problem solution
AutoFill formula for control values
AutoFill formula for integrand values
Objective formula
Maximum value of control column
Minimum value of control column

D2:F103
H3
J3
M3
M6
M7

=IVSOLVE(B11:B12,B2:B4,{0,5})
=IF(D3<=switchT,stage1,stage2)
=E3ˆ2+F3ˆ2
=0.5*QUADXY(D3:D103,J3:J103)
=MAXA(H3:H103)
=MINA(H3:H103)

Next, we employed the discrete data integrator function QUADXY to integrate the generated
integrand column versus the solution output times column, as shown by formula M3 of Table 1.
The initial value of the objective formula was 246.0854, as shown in Figure 4. To impose the bound
constraint (10) on u(t), we deﬁned two aid formulas in M6 and M7 (see Table 1) which computed the
maximum and minimum of the generated control column values. We made use of these aid formulas
during the conﬁguration of the NLP Solver.
3.1.2. Results and Discussion
We invoked Excel’s Solver from the Data Tab which brings up a dialog as shown in Figure 5.
We conﬁgured the Solver to minimize the objective formula M3 by varying the control parameters
B6:B8 (corresponding to switchT, stage1 and stage2) subject to the constraints
M6 ≤ 0.8 corresponds to max(u) ≤ 0.8,

()

M7 ≥ −0.8 corresponds to min(u) ≥ −0.8,

()

which are needed impose (10). We unchecked the box which reads ‘Make Unconstrained Variables
Non-Negative’ to allow the variables to take on negative values as well. In the options for the GRG
Nonlinear solver, we switched the derivative scheme from the default Forward to Central, and then ran
the Solver, which reports a feasible solution in less than 3 s. By accepting the Solver’s solution, all the
values and plots in the spreadsheet were automatically updated to reﬂect the optimal result. The NLP
Solver also generates an optional Answer Report, as shown in Figure 6. The optimal trajectories
are plotted in Figure 7b. As shown in the Answer Report, the optimal switching time was found at
approximately 1.26 which is within 1% of the 1.25 value reported by Elnagar and Kazemi [17] using a
pseudo-spectral Chebyshev approximation of order 15. (In [17], the time domain was transformed
to [−1, 1], and the switching time was found at negative 0.5 which maps to 1.25 in the original [0, 5]
time domain.)

35

Math. Comput. Appl. 2018, 23, 6

Figure 5. Excel’s Solver dialog conﬁgured for optimal control problem (6)–(10).

Figure 6. Answer Report generated by Excel’s Solver for optimal control problem (6)–(10).

36

Math. Comput. Appl. 2018, 23, 6

(a)

(b)

Figure 7. (a) Initial trajectories for optimal control problem (6)–(10) based on the default values shown
in Figure 3; (b) Optimal trajectories found by Excel’s nonlinear programming (NLP) Solver.

3.2. Unconstrained Nonlinear Optimal Control Problem
The second example represents an unconstrained optimal control problem in the ﬁxed interval
t ∈ [−1, 1], but with highly nonlinear equations. The mathematical problem is stated as follows:
Minimize
J=

0.78
2

1

x1 (t)2 + x2 (t)2 + 0.1u(t)2 dt

(12)

−1

subject to
.

x1 (t) =
.



25x1 (t)
0.78
−2[ x1 (t) + 0.25] + [ x2 (t) + 0.5]exp
− [ x1 (t) + 0.25]u(t) ,
2
x1 ( t ) + 2

(13)



25x1 (t)
0.78
− [ x1 (t) + 0.25] ,
0.5 − x2 (t) − [ x2 (t) + 0.25]exp
2
x1 ( t ) + 2

(14)

x2 (t) =

x (−1) = 0.05, x2 (−1) = 0.0.

(15)

3.2.1. Spreadsheet Model
The spreadsheet model for the IVP (13)–(15) with a parametrized control function using a
third-order polynomial is shown in Figure 8. The initial solution to the IVP was obtained by evaluating
the formula
=IVSOLVE(B12:B13,B2:B4,{−1,1})
(16)
in an allocated array E2:G103, which is shown partially in Figure 9 and plotted in Figure 10a. Clearly,
our initial guess for the control coefﬁcients B6:B9 was not good, since the solution exhibits instabilities
at larger time values. The control and integrand vectors, needed to construct the objective formula for
the cost index (12), were generated based on the obtained initial solution using formulas I3 and K3,
listed in Table 2. The objective formula was deﬁned using the data integrator QUADXY as shown in
N3 of Table 2, with an initial value of 1.92 × 1018 , as shown in Figure 9.
Table 2. Formula deﬁnitions used for solving optimal control problem (12)–(15).
Purpose

Cell

Formula

Initial value problem solution
AutoFill formula for control values
AutoFill formula for integrand values
Objective

E2:G103
I3
K3
N3

=IVSOLVE(B12:B13,B2:B4,{−1,1})
=c_0+c_1*E3+c_2*E3ˆ2+c_3*E3ˆ3
=F3ˆ2+G3ˆ2+0.1*I3ˆ2
=0.78*QUADXY(E3:E103,K3:K103)/2

37

Math. Comput. Appl. 2018, 23, 6

A

B

1 ODE variables
2 t

-1

3 x_1

0.05

4 x_2

0

5 Parametrized control formula
6 c_0

1

7 c_1

0

8 c_2

0

9 c_3
10 u

0
=c_0+c_1*t+c_2*t^2+c_3*t^3

11 ODE rhs equations
12 x1dot =0.78*(ƺ2*(x_1+0.25)+(x_2+0.5)*EXP(25*x_1/(x_1+2))ƺ(x_1+0.25)*u)/2
13 x2dot =0.78*(0.5ƺx_2ƺ(x_2+0.25)*EXP(25*x_1/(x_1+2)))/2

Figure 8. Spreadsheet model for the IVP (13)–(15) with parametrized control function. The colored
ranges are input parameters for IVSOLVE Formula (16).

E

F

1

IVP Solution

2

t

G

x_1

K

u

Integrand

0

1

0.1025

ƺ0.98

0.050163 0.000305

1

0.102516

ƺ0.96

0.050341 0.000596

1

0.102535

0.94

3.59E+09

ƺ0.25

1

1.29E+19

101

0.96

3.64E+09

ƺ0.25

1

1.33E+19

102

0.98

3.7E+09

ƺ0.25

1

1.37E+19

103

1.00

3.75E+09

ƺ0.25

1

1.41E+19

3

ƺ1.00

4
5
100

x_2

H I J

0.05

L

M

N

Cost functional
Objective 1.92396E+18

Figure 9. Partial listing of computed results by Formula (16). Also shown are generated control and
integrand columns, and the initial objective formula value. The associated formulas are listed in Table 2.

(a)

(b)

Figure 10. (a) Initial trajectories for optimal control problem (12)–(15) based on the default values
shown in Figure 8; (b) Optimal trajectories found by Excel’s NLP Solver.

3.2.2. Results and Discussion
We ran Excel’s Solver to minimize the objective formula N3 by varying the control parameters in
B6:B9 with no added constraints. Despite the bad initial values for the control parameters, the Solver
38

Math. Comput. Appl. 2018, 23, 6

reported a feasible solution in about 2 seconds with the Answer Report shown in Figure 11. The optimal
trajectories for the system variables are plotted in Figure 10b.

Figure 11. Answer Report generated by Excel’s Solver for optimal control problem (12)–(15) based on
the initial guess values in Figure 8.

The reported objective in [17] is 0.026621417, which is better than the achieved objective value of
0.08919 found by Excel. To improve the result, we tried a different initial guess for the parameters (c_0,
c_1, c_2, c_3) by changing their values in Figure 8 to (1, 0, 1, 0). A second run of the Solver reported
the feasible solution shown in Figure 12. The new objective value was reduced by more than 50% to
0.040245. The new solution is plotted in Figure 13 and shows noticeably different trajectories for x_1
and x_2 than those obtained initially in Figure 10. This is expected, given the highly nonlinear and
unconstrained problem.

Figure 12. Answer Report for optimal control problem (12)–(15) using a different initial guess and
yielding improved minimum.

39

Math. Comput. Appl. 2018, 23, 6

Figure 13. Optimal trajectories for optimal control problem (12)–(15) found by Excel’s Solver starting
from a different initial guess, leading to a lower objective value.

3.3. Minimal Swing Container Transfer Problem
The third example represents the problem of transferring containers, driven by a hoist motor and
a trolley drive motor, from a ship to a cargo truck. The goal is to minimize the swing during and at the
end of the transfer. The mathematical optimal control problem is described by (17)–(29). The problem
is nonlinear with six state variables and two controllers subject to multiple ﬁnal and bound constraints.
Minimize
J = 4.5

1

[ x3 (t)2 + x6 (t)2 ] dt

(17)

0

subject to

.

x1 (t) = 9x4 (t),
.

x2 (t) = 9x5 (t),
.

(20)

x4 (t) = 9[u1 (t) + x3 (t)],

(21)

.

x5 (t) = 9u2 (t),
.

(19)

x3 (t) = 9x6 (t),
.

x6 (t) =

(18)

9(u1 (t) + 27.0756x3 (t) + 2x5 (t) x6 (t))
, t ∈ [0, 1].
x2 ( t )

(22)
(23)

Initial conditions:
x1 (0) = 0, x2 (0) = 22, x3 (0) = 0, x4 (0) = 0, x5 (0) = −1, x6 (0) = 0.

(24)

Final conditions:
x1 (1) = 10, x2 (1) = 14, x3 (1) = 0, x4 (1) = 2.5, x5 (1) = 0, x6 (1) = 0.

(25)

|u1 (t)| ≤ 2.83374,

(26)

− 0.80865 ≤ u2 (t) ≤ 0.71265,

(27)

Bounds:

40

Math. Comput. Appl. 2018, 23, 6

| x4 (t)| ≤ 2.5,

(28)

| x5 (t)| ≤ 1.0.

(29)

3.3.1. Spreadsheet Model
Following the same procedure as that in the previous examples, we prepared the spreadsheet
model for the IVP (18)–(24) using third-order parametrized polynomial control functions u1 (t) and
u2 (t), as shown in Figure 14. Initial values and guesses were assigned to the state variables and
unknown parametrization coefﬁcients as shown in the ﬁgure. Figure 15 shows a partial listing of the
initial solution obtained by evaluating the formula
=IVSOLVE(B17:B22,B2:B8,{0,1})

(30)

in array F2:L103, and the generated control columns, u_1, u_2, and the integrand expression column
using the corresponding formulas listed in Table 3. The initial system trajectories are plotted in
Figure 16.
A

B

C

D

1 ODE variables
2 t

0

3 x_1

0

4 x_2

22

5 x_3

0

6 x_4

0

7 x_5

о1

8 x_6

0

9 Parametrized controls formulas
10 c_0

1 d_0 1

11 c_1

1 d_1 1

12 c_2

о5 d_2 -5

13 c_3

о5 d_3 -5

14 u_1

=c_0+c_1*t+c_2*t^2+c_3*t^3

15 u_2

=d_0+d_1*t+d_2*t^2+d_3*t^3

16 ODE rhs equations
17 x1dot =9*x_4
18 x2dot =9*x_5
19 x3dot =9*x_6
20 x4dot =9*(u_1+x_3)
21 x5dot =9*u_2
22 x6dot =9*(u_1+27.0756*x_3+2*x_5*x_6)/x_2
Figure 14. Spreadsheet model for the IVP (18)–(24) with parametrized control functions. The colored
ranges are input parameters for IVSOLVE Formula (30).

Next, we deﬁned the objective formula, S3, corresponding to the cost index (17) as shown
in Table 3, in which the data integrator QUADXY was used to integrate the generated integrand
expression values. The objective formula evaluated to an initial value of 24,229.22793. Table 3 also lists
a number of aid formulas which compute the minimum and maximum values for the state variables

41

Math. Comput. Appl. 2018, 23, 6

x_4 and x_5 and the generated control columns. These aid formulas were used to deﬁne the bound
constraints for the NLP Solver.
F

G

H

I

J

K

L

M

N

O

P

1 IVP Solution
2 t
3

x_1
0

x_2
0

x_3
22

x_4
0

x_5
0

x_6
ƺ1

u_1
0

4 0.01 0.004063 21.91406 0.000185 0.09044 ƺ0.90957 0.00411

u_2
1

Integrand
1

0

1.009495 1.009495

1.69E-05

5 0.02 0.016305 21.8363 0.000742 0.181723 ƺ0.81832 0.008285

1.01796 1.01796

6.92E-05

6 0.03 0.036797 21.76679 0.001679 0.273786 ƺ0.72636 0.012569

1.025365 1.025365

0.000161

101 0.98 230.6731 15.34798 189.5472 205.5287 ƺ12.3527 147.8948

ƺ7.52796 ƺ7.52796

102 0.99 249.9267 14.20542 203.2503 222.511 ƺ13.0407 156.6717
103

1 270.7634

13 217.7568 240.7409

ƺ13.75 165.7417

57801.01

ƺ7.762

ƺ7.762

65856.72

-8

ƺ8

74888.35

Figure 15. Partial listing of computed result by Formula (30). Also shown are generated control and
integrand columns. The associated formulas are listed in Table 3.

Figure 16. Initial trajectories for optimal control problem (17)–(29) based on default values shown in
Figure 14.

Table 3. Formulas deﬁnitions used for solving optimal control problem (17)–(29).
Purpose

Cell

Formula

Initial value problem solution
AutoFill formula for u_1 control values
AutoFill formula for u_2 control values
AutoFill formula for integrand values
Objective Formula
u_1 column max value
u_1 column min value
u_2 column max value
u_2 column min value
x_4 column max value
x_4 column min value
x_5 column max value
x_5 column min value

F2:L103
N3
O3
P3
S3
S6
S7
S8
S9
S10
S11
S12
S13

=IVSOLVE(B17:B22,B2:B8,{0,1})
=c_0+c_1*F3+c_2*F3ˆ2+c_3*F3ˆ3
=d_0+d_1*F3+d_2*F3ˆ2+d_3*F3ˆ3
=I3ˆ2+L3ˆ2
=4.5*QUADXY(F3:F103,P3:P103)
=MAXA(N3:N103)
=MINA(N3:N103)
=MAXA(O3:O103)
=MINA(O3:O103)
=MAXA(J3:J103)
=MINA(J3:J103)
=MAXA(K3:K103)
=MINA(K3:K103)

3.3.2. Results and Discussion
We conﬁgured Excel’s Solver to minimize the objective formula S3 by varying the controls’
coefﬁcients B10:B14 and D10:D14 subject to the added constraints listed in Table 4. Here, we made use
42

Math. Comput. Appl. 2018, 23, 6

of the aid formulas listed in Table 3 to deﬁne the inequality bound constraints (26)–(29). The end point
equality constraints on the state variables (25) were imposed directly onto the corresponding cells at t
= 1 (last row) of the IVSOLVE solution array (see Figure 15). The Solver spun for a few seconds, then
reported that it did not ﬁnd a feasible solution when, in fact, it already had, judging by the best-found
solution results shown partially in Figure 17 and plotted in Figure 18. The solution indicates that
all constraints were satisﬁed within a reasonable tolerance of 1 × 10−5 , except for x_6(1), which was
satisﬁed within a tolerance of 1 × 10−3 . This is veriﬁed by the feasibility report generated by the
Solver, and shown in Figure 19. The report indicates that the Solver had difﬁculty satisfying end point
constraints for x_4 and x_6 at the Solver’s default tolerances, while all other constraints were satisﬁed.
Table 4. List of constraints added to the NLP Solver for optimal control problem (17)–(29) and their
corresponding equations. The bound constraints were deﬁned using aid formulas listed in Table 3.
Added Constraints

Purpose

G103 = 10

x1 (1) = 10

H103 = 14

x2 (1) = 14

I103 = 0

x3 (1) = 0

J103 = 2.5

x4 (1) = 2.5

K103 = 0

x5 (1) = 0

L103 = 2.5

x6 (1) = 0

S10 ≤ 2.5
S11 ≥ −2.5

(4.12)

S12 ≤ 1
S13 ≥ −1

(4.13)

S6 ≤ 2.83374
S7 ≥ −2.83374

(4.10)

S8 ≤ 0.71265
S9 ≥ −0.80865

(4.11)

Figure 17. Best-found solution obtained by Excel’s Solver for optimal control problem (17)–(29).

The reported objective in [17] is 0.005361, but the exact tolerances used for the NLPQL solver
are unknown. We note that in this problem, Excel’s Solver best-found solution has a much lower
minimum for the objective at 0.000805, as shown in Figure 17.
43

Math. Comput. Appl. 2018, 23, 6

(a)

(b)

Figure 18. (a) Optimal trajectories for all variables of optimal control problem (17)–(29); (b) Selected
optimal trajectories.
Microsoft Excel 16.0 Feasibility Report
Worksheet: [Examples.xlsx]Example 3
Report Created: 9/26/2017 6:43:45 PM
Constraints Which Make the Problem Infeasible
Cell Value

Formula

Status

Slack

$H$103
$J$103

Cell

Name
x_2
x_4

14.00000001
2.499994248

$H$103=14
$J$103=2.5

Binding
Violated

0
о5.75165E-06

$L$103

x_6

0.00072322

$L$103=0

Violated

о0.00072322

Figure 19. Feasibility Report generated by Excel’s Solver for optimal control problem (17)–(29).

3.4. Minimum Time Orbit Transfer Problem
The fourth example describes a minimum time orbit transfer problem. The goal is to minimize
the transfer time of a constant thrust rocket between the orbits of Earth and Mars, and to determine
the optimal thrust angle control. The original free-time mathematical problem is stated as follows:
Minimize
(31)
J = tF
subject to

.

x 1 ( t ) = x2 ( t ),
.

x2 (t) =
.

x3 (t) = −

(32)

2

x3 ( t )
γ
R sin u(t)
−
+ 0
,
.
x1 ( t )
m0 + m t
x1 ( t )2

x2 ( t ) x3 ( t )
R cos u(t)
, t ∈ [0, t F ],
+ 0
.
x1 ( t )
m0 + m t

(33)
(34)

with initial conditions
x1 (0) = 1, x2 (0) = 0, x3 (0) = 1,

(35)

x1 (t F ) = 1.525, x2 (t F ) = 0, x3 (t F ) = 0.8098.

(36)

and ﬁnal conditions
In [17], the original problem was transformed into a ﬁxed time domain [−1, 1]. The corresponding
value for the transfer time, t F , was reported at 3.31873 using ninth-degree Chebyshev polynomial
approximations. Here, we solve the original free-time problem as stated in (31)–(36).

44

Math. Comput. Appl. 2018, 23, 6

3.4.1. Spreadsheet Model
Referring to Figure 20, the IVP (32)–(35) was modeled using a third-order parametrized
polynomial approximation for u(t), with an initial guess of zero for each of the unknown coefﬁcients.
The differential equations in B21:B23 are deﬁned in terms of the system variables in B2:B5, the control
.
u in B19, and the constants γ, m0 , m, and R0 which are assigned corresponding names in the ﬁgure.
In this problem, the end time, t F , is a design variable and is therefore assigned its own variable tF
in B13 with an initial guess of 10. Figure 21 shows a partial listing of the initial solution obtained by
evaluating the IVSOLVE formula
=IVSOLVE(B21:B23,B2:B5,B12:B13)

(37)

in array E2:H103, along with the generated control column and the initial objective value.
The corresponding formulas are listed in Table 5, and the initial trajectories for the system states
and control are plotted in Figure 23a. Note that the third argument to the IVSOLVE formula is the
variable time domain [0, t F ] which is represented by the range B12:B13.
A

B

1 ODE variables
2 t

0

3 x_1

1

4 x_2

0

5 x_3

1

6 Parameters
7 gamma

1

8 R0

0.1405

9 m0

1

10 mdot

ƺ0.07487

11 Time Domain
12 t0

0

13 tF

10

14 Parametrized control formula
15 c_0

0

16 c_1

0

17 c_2

0

18 c_3
19 u

0
=c_0+c_1*t+c_2*t^2+c_3*t^3

20 ODE rhs equations
21 x1dot

=x_2

22 x2dot

=x_3^2/x_1ƺgamma/x_1^2+R0*SIN(u)/(m0+mdot*t)

23 x3dot

=ƺx_2*x_3/x_1+R0*COS(u)/(m0+mdot*t)

Figure 20. Spreadsheet model for the IVP (32)–(35) with parametrized control function. The colored
ranges are input parameters for IVSOLVE Formula (37).

Table 5. Formula deﬁnitions used for solving optimal control problem (31)–(36).
Purpose

Cell

Formula

Initial value problem solution
AutoFill formula for control values
Objective formula

E2:H103
J3
L3

=IVSOLVE(B21:B23,B2:B5,B12:B13)
=c_0+c_1*E3+c_2*E3ˆ2+c_3*E3ˆ3
=tF

45

Math. Comput. Appl. 2018, 23, 6

E

F

1

IVP Solution

2

t

G

x_1

H

x_2
1

I J

L

u Cost functional

x_3
0

K

3

0.00

1

4

0.10 1.000047 0.001413 1.014055

0

0 Objective

5

0.20 1.000378 0.005681 1.027927

0

6

0.30 1.001278 0.012807 1.041313

0

7

0.40 1.003034

0.02276 1.053905

0

100

9.70 8.305837 1.499819 1.391005

0

101

9.80 8.456923 1.521927 1.417734

0

102

9.90 8.610249 1.544573 1.445546

0

103 10.00 8.765865 1.567783 1.474497

0

10

Figure 21. Partial listing of computed result by Formula (37). Also shown are generated control column
and the initial objective formula value. The associated formulas are listed in Table 5.

3.4.2. Results and Discussion
We conﬁgured Excel’s Solver to minimize the objective formula L3 by varying the end time tF , B13,
and the control coefﬁcients B15:B18, subject to the end point equality constraints on the state variables
(36). The constraints were added directly into the Solver’s dialog by referencing the corresponding
cells in the last row of the IVSOLVE solution array in Figure 21. The Solver reported, in under 20 s,
the feasible solution shown in the Answer Report of Figure 22. The minimum orbit time, t F , was found
to be 3.58656. This compares reasonably well to the value reported in [17] at 3.31873 using ninth-degree
Chebyshev polynomial approximations. The optimal trajectories are plotted in Figure 23b. In Figure 24,
we show a partial listing of the updated IVSOLVE solution result reﬂecting the new end time, and the
decreased output time increment in comparison to the initial result shown in Figure 21.

Figure 22. Answer Report generated by Excel’s Solver for optimal control problem (31)–(36).

46

Math. Comput. Appl. 2018, 23, 6

(a)

(b)

Figure 23. (a) Initial trajectories for optimal control problem (31)–(36) based on default values shown
in Figure 20; (b) Optimal trajectories found by Excel’s NLP Solver.

E

F

1

IVP solution

2

t

3

G

x_1
0

H

x_2
1

I

x_3
0

J
u

1

0.03586 1.000018 0.001183 1.004922

0.273053

5

0.07173 1.000097 0.003406 1.009605

0.409846

6

0.10759 1.000274

0.537309

7

0.14346 1.000579 0.010605 1.017831

100 3.47899 1.524526

0.01056 0.792036

101 3.51482 1.524818 0.005901

Cost functional

0.655639
ƺ0.71564

0.79735

ƺ0.56733

102 3.55069 1.524962 0.002325 0.803313

ƺ0.40924

103 3.58555

ƺ0.24119

1.525 1.18E-06 0.809799

L

0.12673 Objective 3.586556

4

0.00658 1.013935

K

Figure 24. Partial listing of the updated initial result of Figure 21 which reﬂects the optimal ﬁnal time
and adjusted output time values in Column E.

4. Practical Tips
Successful nonlinear optimization is often the result of numerical experimentation. In this section,
we share a few practical tips for effective use of the presented spreadsheet optimization method.
4.1. Excel’s NLP Solver and Settings
The standard NLP Solver shipped with Excel uses the Generalized Reduced Gradient
algorithm [14], which has proved effective for smooth nonlinear problems. The standard Solver
also offers a simplex and evolutionary genetic algorithm options that may be suitable for linear or
nonsmooth problems. Nonetheless, it is possible to expand the available pool of NLP algorithms,
including sequential programming, interior point, and active set methods, by upgrading to a premium
version of the NLP Solver [18].
Perhaps the most important factor is the starting guess for the decision parameter vector which
may require a nonzero initial value for some problems. The author has found it generally quick to ﬁnd
a good initial guess interactively by trial and error in just a few attempts given the fast response of
the Solver. Excel Solver’s dialog offers a few settings, two of which have proved inﬂuential in aiding
the convergence for some problems. In particular, the ‘Derivatives’ scheme is recommended to be
47

Math. Comput. Appl. 2018, 23, 6

switched to Central from the default Forward, and the ‘Use Automatic Scaling’ option is recommended
to be left enabled (default setting).
4.2. Spreadsheet Tips

•

•
•

•

Naming spreadsheet variables (e.g., naming B1 as t) makes the formulas easier to read and spot
errors. However, it is also recommended to restrict the scope of a named variable to the speciﬁc
sheet it will be used on, and not the whole workbook. This prevents accidental interdependence
between multiple problems on different sheets sharing variables with the same name.
The shown layouts for the model setup with labels ensures that the Answer Report generated by
Excel’s Solver has proper descriptive names for the variables and constraints.
Excel gives precedence to the unary negation operator which may be confused with the binary
minus operator since they both use the same symbol. This can lead to hard-to-ﬁnd errors in
formulas. For example, Excel evaluates the formula ‘=−X1ˆ2’ as ‘=(−X1)ˆ2’. The intention may
have been to do ‘−(X1ˆ2)’ instead. A simple ﬁx is to either use parentheses when needed, or to use
the intrinsic POWER(X1,2) function instead of the operator ˆ. Also, when using the IF statement
in a formula, it is important to verify that the formula evaluates to a numeric value for all possible
conditions. Otherwise, the formula may evaluate to a nonnumeric Boolean condition, leading to a
solver error.
The calculus functions are designed to operate in two modes: a silent mode, where only standard
spreadsheet errors are returned like #VALUE!, and a verbose mode, where the function may
display an informative error or warning message alert in a popup window. It is recommended
to work in the verbose mode when setting up the problem, but switch to the silent mode before
running the NLP Solver. Switching between the two modes is triggered by evaluating the formula
‘=VERBOSE(TRUE)’ or ‘=VERBOSE(FALSE)’ in any cell in the workbook. For some problems,
the Solver may wander into illegal input space before it recovers and adjusts its search. The silent
mode blocks any occasional error alerts from the calculus functions.

4.3. Generalization to a Special Class of Control Problems
By restricting the space of admissible control functions to, for example, variable-order polynomials
up to a ﬁxed degree, it may not be always possible to ﬁnd a solution to a certain class of control problems
for which the optimal control, in fact, lies outside the admissible space. It is difﬁcult to know a priori
when an algorithm may or may not work, but this may arise in problems with a particularly long
time horizon. When all fails, it may well be that the only alternative is to use an indirect method and
maximize the Hamiltonian for a number of points, then use interpolation to construct the complete
control function(s). Nonetheless, we propose below a general idea that we have not tested but which
ﬁts within our presented direct method, and may offer a potential solution in certain cases.
The idea, effectively, is to enlarge the admissible space by stitching together different parametrized
control functions deﬁned over nonoverlapping subintervals of the time horizon. Both the interior end
points of the subintervals (stitching points), and the control functions’ parameters are unknown design
variables for the NLP Solver. The stitching is enforced by imposing additional constraints for the NLP
Solver that demand continuity of the control functions at the stitching points. A continuity condition
is easily derived algebraically by matching two parametrized functions’ values at a stitching point.
Excel NLP Solver poses no restriction on the number of design variables, although performance and
convergence will be impacted as the problem dimension grows.
5. Conclusions
We have demonstrated a practical technique which adapts the control parametrization direct
method for optimal control problems to the spreadsheet. The technique combines Excel’s NLP Solver
command with two calculus worksheet functions, an initial value problem solver, and a discrete data
integrator in a simple systematic procedure. The employed calculus functions are utilized from an
48

Math. Comput. Appl. 2018, 23, 6

Excel calculus Add-in library [19]. The technique has proved very effective on several highly nonlinear,
multivariable, constrained control problems, and produced results consistent with reported answers
obtained with highly accurate pseudo-spectral approximation and NLPQL optimization software
package using a full parametrization direct method. Excel’s Solver’s computing time has been in the
order of seconds to a minute on a laptop with an Intel 4-Core i7 CPU, which makes the technique
highly interactive for experimenting with different initial guesses and variations. As demonstrated
by the examples, using the devised method requires no more than deﬁning a few formulas with
basic knowledge of the spreadsheet and requires no programming skills, offering a simpler solution
approach to optimal control problems.
A slightly modiﬁed version of the technique can also be applied for parameter estimation of
initial value problems where the parameters may include initial conditions or coefﬁcients. In future
work, it may also be worth investigating a dual technique based on indirect methods for optimal
control problems. The indirect method requires the modeler to recast the problem in a different form
by applying Pontryagin’s maximum principle. However, the ensuing boundary value problem could
be solved with the aid of a boundary value problem solver function, BVSOLVE, also included in the
Excel calculus Add-in [19].
Supplementary Materials: An Excel workbook containing all the solved examples presented in this article is
available at www.mdpi.com/2297-8747/23/1/6/s1, (ﬁle Location to be determined.)
Acknowledgments: No funding has been received in support of this research work.
Conﬂicts of Interest: The author of the manuscript is the founder of ExcelWorks LLC of Massachusetts,
USA supplying the Excel calculus Add-in, ExceLab, utilized in this research work.

Appendix
Appendix A.1 Initial Value Problem Solver Spreadsheet Function
The spreadsheet function
=IVSOLVE(equations, variables, time_interval, mass_matrix, options)
is utilized from the calculus Add-in [19] to solve an initial value ordinary differential algebraic equation
system in the interval t ∈ [ts , te ]:
M dx
dt = F (x( t ), t ),
(A1)
x ( t s ) = xs ,
x(t) = ( x1 (t), x2 (t), . . . , xn (t)), and M is an optional mass matrix. If M is singular, the system is
differential algebraic. IVSOLVE implements several adaptive integration schemes [12,20], suitable for
stiff and smooth problems. By default, it uses the RADUA5 algorithm [12]. Algorithm selection and
control parameters, as well as the system analytic Jacobian can be supplied via optional arguments [19].
At minimum, IVSOLVE requires three arguments:
1.
2.
3.

Reference to the right-hand side formulas corresponding to the vector-valued function
F(x(t), t) = ( f1 (x(t), t), f2 (x(t), t), . . . , fn (x(t), t)). Any algebraic equations should be ordered last.
Reference to the system variables corresponding to t and x(t) in the speciﬁc order
(t, x1 , x2 , . . . , xn ).
The integration time interval end points.

IVSOLVE is run as a standard array formula in an allocated array of cells. It evaluates to an
ordered tabular result where the time values are listed in the ﬁrst column and the corresponding state
variables’ values are listed in adjacent columns. By default, IVSOLVE reports the output at uniform
intervals according to the allocated number of rows for the output array. Custom output formats can

49

Math. Comput. Appl. 2018, 23, 6

be achieved via the optional parameters, including specifying custom divisions or output points [19].
We demonstrate IVSOLVE for the following DAE example:
dy1
dt

= −0.04y1 + 104 y2 y3 , t ∈ [0, 1000],
= 0.04y1 − 104 y2 y3 − 3 ∗ 107 y22 ,
0 = y1 + y2 + y3 − 1,
y1 (0) = 1, y2 (0) = 0, y3 (0) = 0.

dy2
dt

(A2)

The system RHS formulas are deﬁned in cells A1:A3 using cell T1 for the time variable and Y1,
Y2, Y3 for the state variables with the speciﬁed initial conditions shown in Figure A1.

1
2
3

A
=-0.04*Y1+10000*Y2*Y3
=0.04*Y1-10000*Y2*Y3-30000000*Y2^2
= Y1+Y2+Y3-1

1
2
3

Y
1
0
0

Figure A1. Spreadsheet input model for equation system A2.

To solve the system, we evaluate in the array C1:F22 the formula
=IVSOLVE (A1:A3,(T1,Y1:Y3),{0,1000},1)

(A3)

which computes and displays the solution shown in Figure A2. Note that the fourth argument, 1,
instructs the solver that the last equation in A1:A3 is an algebraic equation.

(a)

(b)

Figure A2. (a) Partial listing of the computed solution by formula A3; (b) Plots of the trajectories.

Appendix A.2 Discrete Data Integrator Spreadsheet Function
The spreadsheet function
=QUADXY(x, y, options)
is utilized from the calculus Add-in [19] to integrate a set of discrete (x, y(x)) data points. The integration
limits are determined from the endpoints of the x vector. QUADXY performs the integration with the
aid of cubic (default) or linear splines [13]. The third optional argument allows the speciﬁcation of
boundary conditions for the data, including starting and end slopes. Options are speciﬁed by (key,
value) pairs as detailed in [19].

50

Math. Comput. Appl. 2018, 23, 6

References
1.
2.
3.
4.
5.
6.
7.

8.
9.
10.

11.

12.
13.
14.
15.
16.
17.
18.
19.
20.

La Torre, D.; Kunze, H.; Ruiz-Galan, M.; Malik, T.; Marsiglio, S. Optimal Control: Theory and Application to
Science, Engineering, and Social Sciences. Abstr. Appl. Anal. 2015, 2015, 890527. [CrossRef]
Geering, H.P. Optimal Control with Engineering Applications; Springer: Berlin/Heidelberg, Germany, 2007.
Aniţa, S.; Arnăutu, V.; Capasso, V. An Introduction to Optimal Control Problems in Life Sciences and Economics:
From Mathematical Models to Numerical Simulation with MATLAB; Birkhäuser: Basel, Switzerland, 2011.
Böhme, T.J.; Frank, B. Indirect Methods for Optimal Control. In Hybrid Systems, Optimal Control and Hybrid
Vehicles. Advances in Industrial Control; Springer: Cham, Switzerland, 2017.
Böhme, T.J.; Frank, B. Direct Methods for Optimal Control. In Hybrid Systems, Optimal Control and Hybrid
Vehicles. Advances in Industrial Control; Springer: Cham, Switzerland, 2017.
Banga, J.R.; Balsa-Canto, E.; Moles, C.G.; Alonso, A.A. Dynamic optimization of bioprocesses: Efﬁcient and
robust numerical strategies. J. Biotechnol. 2003, 117, 407–419. [CrossRef] [PubMed]
Rodrigues, H.S.; Monteiro, M.T.T.; Torres, D.F.M. Optimal Control and Numerical Software: An Overview.
This is a preprint of a paper whose ﬁnal and deﬁnite form will appear in the book. In Systems Theory:
Perspectives, Applications and Developments; Miranda, F., Ed.; Nova Science Publishers: Hauppauge, NY, USA,
2014. Available online: https://arxiv.org/abs/1401.7279 (accessed on 23 January 2018).
Ghaddar, C. Method, Apparatus, and Computer Program Product for Optimizing Parameterized Models
Using Functional Paradigm of Spreadsheet Software. U.S. Patent 9,286,286, 15 March 2016.
Ghaddar, C. Method, Apparatus, and Computer Program Product for Solving Equation System Models
Using Spreadsheet Software. U.S. Patent 15,003,848, 2018. in Press.
Ghaddar, C. Unconventional Calculus Spreadsheet Functions. World Academy of Science, Engineering
and Technology, International Science Index 112. Int. J. Math. Comput. Phys. Electr. Comput. Eng. 2016, 10,
194–200. Available online: http://waset.org/publications/10004374 (accessed on 23 January 2018).
Ghaddar, C. Unlocking the Spreadsheet Utility for Calculus: A Pure Worksheet Solver for Differential
Equations. Spreadsheets Educ. 2016, 9, 5. Available online: http://epublications.bond.edu.au/ejsie/vol9/
iss1/5 (accessed on 23 January 2018).
Hairer, E.; Wanner, G. Solving Ordinary Differential Equations II: Stiff and Differential-Algebraic Problems; Springer
Series in Computational Mathematics; Springer: Berlin/Heidelberg, Germany, 1996.
De Boor, C. A Practical Guide to Splines (Applied Mathematical Sciences); Springer: Berlin/Heidelberg,
Germany, 2001.
Lasdon, L.S.; Waren, A.D.; Jain, A.; Ratner, M. Design and Testing of a Generalized Reduced Gradient Code
for Nonlinear Programming. ACM Trans. Math. Softw. 1978, 4, 34–50. [CrossRef]
Weber, E.J. Optimal Control Theory for Undergraduates Using the Microsoft Excel Solver Tool. Comput. High.
Educ. Econ. Rev. 2007, 19, 4–15.
Nævdal, E. Solving Continuous Time Optimal Control Problems with a Spreadsheet. J. Econ. Educ. 2003, 34,
99–122. [CrossRef]
Elnagar, G.; Kazemi, M.A. Pseudospectral Chebyshev Optimal Control of Constrained Nonlinear Dynamical
Systems. Comput. Optim. Appl. 1998, 11, 195–217. [CrossRef]
FrontlineSolvers. Available online: https://www.solver.com/ (accessed on 23 January 2018).
ExcelWorks LLC; MA, USA. ExceLab Calculus Add-in for Excel and Reference Manual. Available online:
https://excel-works.com (accessed on 23 January 2018).
Hindmarsh, A.C. ODEPACK, A Systematized Collection of ODE Solvers. In Scientiﬁc Computing;
Stepleman, R.S., Carver, M., Peskin, R., Ames, W.F., Vichnevetsky, R., Eds.; North-Holland Publishing:
Amsterdam, The Netherlands, 1983; pp. 55–64.
© 2018 by the author. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

51

Mathematical
and Computational
Applications

Article

Time Needed to Control an Epidemic with Restricted
Resources in SIR Model with Short-Term Controlled
Population: A Fixed Point Method for a Free
Isoperimetric Optimal Control Problem
Imane Abouelkheir, Fadwa El Kihal , Mostafa Rachik and Ilias Elmouki *
Department of Mathematics and Computer Sciences, Faculty of Sciences Ben M’Sik, Hassan II University of
Casablanca, Casablanca 20000, Morocco; abouelkheir88@gmail.com (I.A.); fadwa.elkihal@gmail.com (F.E.K.);
m_rachik@yahoo.fr (M.R.)
* Correspondence: i.elmouki@gmail.com
Received: 10 October 2018; Accepted: 20 October 2018; Published: 22 October 2018

Abstract: In this paper, we attempt to determine the optimal duration of an anti-epidemic control
strategy which targets susceptible people, under the isoperimetric condition that we could not control
all individuals of this category due to restricted health resources. We state and prove the local
and global stability conditions of free and endemic equilibria of a simple epidemic compartmental
model devised in the form of four ordinary differential equations which describe the dynamics of
susceptible-controlled-infected-removed populations and where it is taken into account that the
controlled people cannot acquire long-lived immunity to move towards the removed compartment
due to the temporary effect of the control parameter. Thereafter, we characterize the sought optimal
control and we show the effectiveness of this limited control policy along with the research of the
optimal duration that is needed to reduce the size of the infected population. The isoperimetric
constraint is deﬁned over a ﬁxed horizon, while the objective function is deﬁned over a free horizon
present under a quadratic form in the payoff term. The complexity of this optimal control problem
requires the execution of three numerical methods all combined together at the same time, namely,
the forward–backward sweep method to generate the optimal state and control functions, the secant
method adapted to the isoperimetric restriction, and, ﬁnally, the ﬁxed point method to obtain the
optimal ﬁnal time.
Keywords: epidemic model; optimal control; isoperimetric constraint; free horizon; fixed point method

1. Introduction
1.1. Background
Many epidemiological models have been interested in the study of the dynamics of susceptible,
infected and removed individuals who belong to a sample of a population threatened by an infection.
Many theoretical models in epidemiology have been devised to show the effect of different
anti-epidemic control strategies when they are followed to prevent transmission of a particular type
of infection to the susceptible population. As examples of these control approaches, we can cite
Refs. [1,2] where the authors introduced an awareness control function in their models and which
aimed to prevent the susceptible people from Human Immunodeﬁciency Virus infection and Acquired
Immune Deﬁciency Syndrome (HIV/AIDS) epidemic. Roy et al. [3] treated the idea of awareness
control programs in HIV/AIDS prevention after the addition of a new variable in their models and
which deﬁnes the number of individuals in the aware class. Other examples of control models have
used vaccination of the susceptible individuals as a control policy, while considering the number
Math. Comput. Appl. 2018, 23, 64; doi:10.3390/mca23040064

52

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 64

of vaccinated people as additional compartment in their systems (see [3–7]). Most optimal control
strategies suggested for preventing an infection to spread consider a ﬁxed ﬁnal time. However, health
policy-makers need very often to know when it is appropriate to stop their anti-epidemic measures
as this information is important for managing their medical resources [8], and then, it becomes not
reasonable in such situations to study dynamics of an epidemic under control without an estimation of
the ﬁnal time. The present paper tries to ﬁnd the optimal value of this mentioned variable through
a free horizon optimal control approach applied to an epidemic model with four compartments, namely
classes of susceptible, controlled, infected and removed people.
1.2. Formulation of the Problem of Interest for this Investigation
Here, we devise a simple generalized model where the control utilized has only a temporary
effect on the immunity of the targeted population so the susceptible people under control do not
acquire long-lived immunity to move to the removed class, while taking into account the presence
of an equation which describes the evolution of the number of the controlled people. First, we study
the local and global stability of our epidemic model, which is devised in the form of four ordinary
differential equations, and wherein a control is introduced as a constant parameter; and, second,
we seek the optimal duration needed for reaching the goal of our strategy while determining the
optimal value of this control when it is changed to a function of time under the hypothesis that this
anti-epidemic preventive measure can reach only a speciﬁc fraction of susceptible people due to the
limited health resources. We should note that authors of [8,9] tried to ﬁnd the optimal ﬁnal time in
a ﬁrst case through their plots and checked the values where this optimal function veriﬁed the obtained
additional necessary condition, and in two other cases via discrete numerical schemes. We believe
this work is more interesting, as it provides a more precise numerical method. In fact, as the necessary
condition on ﬁnal time also represents here a ﬁxed point equation, the incorporation of the ﬁxed point
method better facilitates our task, as this technique seems more accurate and convincing since it meets
the theoretical aspect of the found condition.
1.3. Literature Survey
Zhou and Fan [10] discussed different forms of functions introduced in epidemic models to explore
the impact of limited medical resources in the transmission of infectious diseases. Abdelrazec et al. [11]
introduced, in a mathematical model of dengue fever, a function in place of the recovery rate for
similar purpose. More recently, Yu et al. proposed an optimal control approach to investigate the
optimal distribution policy of the limited vaccination resources based on the research of a parameter
introduced in their model and which minimizes the basic reproduction number [12].
1.4. Scope and Contribution of this Study
We present here an optimal control approach which treats the problem of limited resources
differently to the three above-mentioned references. In fact, our method considers a constraint,
so-called “isoperimetric”, which is used on the control function as done in [13] for the resolution of
a dosage problem, on the fraction of controlled variables as done in [14] in the case of an epidemic
model, or when adapted to a discrete-time SIRS epidemic model as in [15], and it supposes also that
the ﬁnal time or horizon of the objective function is free (non-ﬁxed) as used in many applications
(see, for example, Ref. [8], which discusses the problem of optimal duration needed for reaching
the intravesical therapy goal, and Ref. [9], where it is explained why such considerations are very
important to health-policy makers and managers in the health sector when there is an epidemic that is
controlled through awareness of the susceptible class).
1.5. Organization of the Paper
Based on the theory of mathematical epidemiology in [16], the spread of an epidemic can be
described mathematically by SIR models which in turn have been developed later to extended forms
53

Math. Comput. Appl. 2018, 23, 64

such as SEIR [17], SIRS [18], or SIS [19], where each letter refers to a class of individuals. A class
of controlled people can also be considered, as done in [20] where authors added a vaccination
compartment in a model of pertussis and tuberculosis, and in [21] where they studied nonfatal
diseases, and [22,23] in case of inﬂuenza. Sharomi and Malik [24] represented an other form of SIR
model with an additional equation corresponding to the vaccinated category in the case the vaccination
is not 100% effective; such considerations can also be found in [4]. Based on similar assumptions as in
the two last mentioned references, we devise our present model.
In the following parts of the paper, we start with the presentation of our mathematical model and
study its stability in cases of free and endemic equilibria. Furthermore, we seek the optimal value
of the free horizon considered in the objective function, along with the determination of the optimal
value of the control function. Finally, we discuss our numerical results.
2. The Mathematical Model and Stability
In this section, we consider a mathematical model with the four following main compartments:
•
•
•
•

S is the number of susceptible people to infection or who are not yet infected.
CS is the number of susceptible people who are temporarily controlled so they cannot move to
the removed class due to the limited effect of control.
I is the number of infected people who are capable of spreading the epidemic to those in the
susceptible and temporary controlled categories.
R is the number of removed people from the epidemic.

In our modeling approach, we choose to describe dynamics of variables S, CS , I and R at time t,
based on the following differential system
⎧
Ṡ(t)
⎪
⎪
⎪
⎪
⎪
⎨ C˙S (t)
⎪
İ (t)
⎪
⎪
⎪
⎪
⎩
Ṙ(t)

= Π(t) − βS(t) I (t) − aθS(t) − μS(t)
= aθS(t) − bβCS (t) I (t) − μCS (t)
=

β(S(t) + bCS (t)) I (t) − γI (t) − μI (t)

(1)

= γI (t) − μR(t)

with initial conditions S(0) > 0, CS (0) ≥ 0, I (0) ≥ 0 and R(0) ≥ 0, and where Π(t) = μN (t),
with N (t) = S(t) + CS (t) + I (t) + R(t) as the total population size, gives the newborn people
at time t; aθ (0 ≤ a ≤ 1) is the recruitment rate of susceptibles to the controlled class with
θ deﬁning the control parameter as a constant between 0 and 1 and “a” modeling the reduced
δ
chances of a susceptible individuals to be controlled; β =
with δ the infection transmission
N (t)
rate, μ the natural death rate, bθ (0 ≤ b ≤ 1) the recruitment rate of controlled people to the
infected class even in the presence of θ and “b” modeling the reduced chances of a temporarily
controlled individual to be infected; and γ is the recovery rate. We note that the population size is
constant because Ṅ (t) = Ṡ(t) + ĊS (t) + İ (t) + Ṙ(t) = 0. Hence, N (t) = N = a constant, and then,
Π(t) = Π = a constant.
For the sake of readability, hereafter, we use S, CS , I and R as notations of the time functions S(t),
CS (t), I (t) and R(t).
β
Recalling that R0 =
is the basic reproduction number of the standard SIR model (see [25]
μ+γ
where it is concluded that the disease free equilibrium E0 is global asymptotically stable if R0 ≤ 1,
and there exists a global asymptotically stable and unique endemic equilibrium E+ if R0 > 1).

54

Math. Comput. Appl. 2018, 23, 64

Since the two ﬁrst equations are independent of the last equation, we only study the stability of
the following differential system
⎧
Ṡ
⎪
⎪
⎨
C˙S
⎪
⎪
⎩
İ

= Π − βSI − aθS − μS
= aθS − bβCS I − μCS
=

(2)

β(S + bCS ) I − γI − μI

A disease free equilibrium in our case can be deﬁned as E0 = (S0 , CS0 , 0) where S0 and CS0 are
obtained based on the assumptions Ṡ = 0 and İ = 0 when there is no infection.
Π
Explicitly, we have Ṡ = 0 when I = 0, gives S0 =
. In addition, we have C˙S = 0 when
μ + aθ
aθΠ
I = 0, gives CS0 =
.
μ(μ + aθ )
If limt→+∞ CS (t) = 0 as a consequence of the case when θ = 0, we deﬁne the basic reproduction
number for our case by R0C which is the average new infections produced by one infected individual
during his life cycle when the population is at E0 .
1
Since I is the only infected compartment, then R0C = β(S0 + bCS0 ) ×
. Thus, we have
μ+γ
R0C =

βΠ
abβθΠ
βΠ(μ + abθ )
+
=
(μ + aθ )(μ + γ) μ(μ + aθ )(μ + γ)
μ(μ + aθ )(μ + γ)

(3)

Now, we try to ﬁnd the components of the endemic equilibrium E+ = (S+ , CS+ , I + ) where S+
and CS+ are obtained based on the assumptions Ṡ = 0 and C˙S = 0 when there is an infection.
Π
Explicitly, we have Ṡ = 0 when I > 0, which gives S+ =
. In addition, we have
μ + aθ + βI +
+
aθS
.
C˙S = 0 when I > 0, which gives CS+ =
μ + bβI +
On the other part, we have İ = 0 when I > 0, which gives
βS+ I + + bβCS+ I + − γI + − μI + = 0

⇒β

Π
abθS+
+β
= γ+μ
+
μ + aθ + βI
μ + bβI +

⇒ βΠ(μ + bβI + ) + abβθS+ (μ + aθ + βI + ) = (γ + μ)(μ + aθ + βI + )(μ + bβI + )
⇒ βΠ(μ + bβI + ) + abβθΠ = (γ + μ)(μ + aθ + βI + )(μ + bβI + )
⇒ bβ2 ΠI + + βΠ(μ + abθ ) = (γ + μ)(μ + aθ + βI + )(μ + bβI + )
⇒ (γ + μ)(μ + aθ ) R0C μ − (γ + μ)( aθμ + μ2 )
= bβ2 (γ + μ) I + + [(γ + μ)( βμ(1 + b) + abβθ ) − bβ2 Π] I +
2

Thus, we ﬁnd that I + is the root of the function f ( I + ) = α1 I + + α2 I + + (1 − R0C )α3 where α1 , α2
and α3 are constants.
In the following three theorems, we state and prove stability results on free and endemic equilibria.
2

Theorem 1. E0 always exists and is locally asymptotically stable if R0C < 1 (respectively, E0 is unstable
if R0C > 1).
Proof. The existence of E0 is trivial.

55

Math. Comput. Appl. 2018, 23, 64

For the stability of E0 , we deﬁne the Jacobian Matrix associated to the system in Equation (2) by
⎛
⎜
⎝

− βI − aθ − μ
0
aθ
−bβI − μ
βI
bβI

⎞
− βS
⎟
−bβCS
⎠
β(S + bCS ) − γ − μ

(4)

At E0 , (4) becomes
⎛

− aθ − μ 0
⎜
aθ
−μ
⎝
0
0

⎞
− βS0
⎟
−bβCS0
⎠
0
0
β(S + bCS ) − γ − μ

whose eigenvalues are
λ1 = −μ < 0,
λ2 = −(μ + aθ ) < 0
λ3 = β(S0 + bβCS0 ) − γ − μ = (γ + μ)( R0C − 1),
which imply the local asymptotic stability of E0 when R0C < 1, and its instability when R0C > 1.


aθS+
Π
,
, I+
μ + aθ + βI + μ + bβI +
unique positive equilibrium and which is asymptotically stable when it exists, if and only if R0C > 1.

Theorem 2. The differential system in Equation (2) admits E+ =

as the

Proof. First, we have
α1 = bβ2 (γ + μ) > 0,
α2 = [(γ + μ)( βμ(1 + b) + abβθ ) − bβ2 Π],
α3 = μ(γ + μ)(μ + aθ ) > 0
For the sufﬁciency of the existence and uniqueness of E+ , so we have α1 > 0 and since f (0) =
(1 − R0C )α3 < 0 if R0C > 1, then f ( I + ) has two real roots, one is positive and the other is negative.
For the necessity, let us assume that R0C ≤ 1 and prove that f ( I + ) has no positive roots. In this case,
the ﬁrst fraction in Equation (3) veriﬁes
βΠ ≤ (μ + γ)(μ + aθ )

⇒ α2 = (bβ(μ + aθ ) + μβ)(γ + μ) − bβ2 Π
≥ (bβ(μ + aθ ) + μβ)(γ + μ) − bβ(μ + aθ )(μ + γ) = μβ(γ + μ) > 0.
Thus, we have α1 > 0 and since f (0) = (1 − R0C )α3 ≥ 0, f ( I + ) is increasing and f ( I + ) > f (0) ≥ 0,
then we reach the non-positivity of the roots.
For the stability of E+ , at E+ , Equation (4) is deﬁned as
⎛
⎜
⎝

− βI + − aθ − μ
0
aθ
−bβI + − μ
βI +
bβI +

56

⎞
− βS+
⎟
−bβCS+
⎠
+
+
β(S + bCS ) − γ − μ

Math. Comput. Appl. 2018, 23, 64

⎛

Π
⎜ − S+
⎜
=⎜
⎜ aθ
⎝
βI +

0
aθS+
CS+
bβI +

−

⎞
− βS+ ⎟
⎟
⎟
−bβCS+ ⎟
⎠
0

whose characteristic equation is λ3 + σ1 λ2 + σ2 λ + σ3 and where
Π
aθS+
+ +
+
S
CS
aθΠ
σ2 = + + b2 β2 CS+ I + + β2 S+ I +
CS

σ1 =

σ3 = abβ2 θS+ I + +

b2 β2 ΠCS+ I +
aθβ2 S+ I +
+
.
+
S+
CS
2

Hence, we have
σ1 σ2 − σ3


Π aθΠ
2 + +
= +
+
β
S
I
S
CS+


aθS+ aθΠ
2 2 + +
+ +
+ b β CS I
− abβ2 θS+ I +
CS
CS+
aθΠ2
+ (Π + aθ + βI + ) β2 S+ I +
S+ CS+


aθS+ aθΠ
2 2 + +
+ +
+ b β CS I
− abβ2 θS+ I +
CS
CS+

=

=

aθΠ2
a2 θ 2 ΠS+
+ 2 + +
2
+ + ( Π + βI ) β S I +
+
S CS
CS+

+ aθS+ I + ( β − bβ)2 + abβ2 θS+ I +
>0

Finally, based on the Routh–Hurwitz Criterion, we deduce the local asymptotic stability of E+ .
Theorem 3. If R0C ≤ 1, then E0 is globally asymptotically stable. If R0C > 1, then E+ is globally
asymptotically stable.
Proof. We suppose that R0C ≤ 1 and we prove that E0 is globally asymptotically stable. Let us deﬁne
the Lyapunov function by
L0 = S − S0 − S0 ln

S
C
+ CS − CS0 − CS0 ln S0 + I.
S0
CS

Its derivative is then deﬁned by
Ṡ
C˙
L˙0 = Ṡ + C˙S + İ − S0 − CS0 S
S
CS

= Π − μS − μCS − μI − γI − S0

Π
aθS
+ μS0 + βS0 I + aθS0 − CS0
+ bβCS0 I + μCS0 .
S
CS

57

Math. Comput. Appl. 2018, 23, 64

Since μ =

aθS0
and Π = μS0 + aθS0 , then this derivative becomes
CS0
L˙0 = −μS + 2μS0 + 3aθS0 − (μ + γ − βS0 − bβCS0 ) I
aθCS0 S S0
aθS0 CS
− (μS0 + aθS0 ) −
CS
S
CS0

S
S0
= −μS0
+
−2
S
S0


CS0 S
CS
S0
0
− aθS
+
+
−3
S
CS S0
CS0

−

− (μ + γ)(1 − R0C ) I
CS0 S
S
S0
CS
S0
+
−
2
≥
0
and
+
+
− 3 ≥ 0 due to the fact that arithmetic
S
S
S0
CS S0
CS0
mean is larger than or equals to the geometric mean, and the equalities hold if S = S0 and CS = CS0 .
Thus, L˙0 ≤ 0 which implies the global asymptotic stability of E0 based on Lyapunov–LaSalle’s
invariance principle.
Similarly, we study the global asymptotic stability of E+ by considering the following
Lyapunov function
Now, we have

L+ = S − S+ − S+ ln

S
CS
I
+ CS − CS+ − CS+ ln +
+ I − I + − I + ln + .
S+
I
CS

The derivative is then deﬁned as
Ṡ
C˙
İ
L˙+ = Ṡ + C˙S + İ − S+ − CS+ S − I +
S
CS
I

= Π − μS − μCS − (μ + γ) I − Π
− βSI + − bβCS I + + (μ + γ) I +
Since μ + γ = βS+ + bβCS+ , μ =

C+
S+
+ μS+ + βS+ I + aθS+ − aθS S + bβCS+ I + μCS+
S
CS

aθS+ − bβCS+ I +

μCS+ + (μ + γ) I + , this derivative becomes
L˙+ = 2Π − μS −

− aθS

aθS+ − bβCS+ I +
CS+

CS+

and Π = μS+ + βS+ I + + aθS+ = μS+ +

CS − (μS+ + βI + S+ + aθS+ )

S+
+ aθS+
S

CS+
− βSI + − bβCS I +
CS
aθS+ CS
μS+
βS+ I +
+ aθS+ −
−
S
S
CS+
2

= 2(μS+ + βS+ I + + aθS+ ) − μS −
aθSCS+
aθS+
−
− βSI +
S
CS

S
S+
= −(μS+ + βS+ I + )
+
−2
S+
S


CS+ S
CS
S+
− aθS+
+ + S + C S+ − 3
CS
S
2

−

≤0

58

2

Math. Comput. Appl. 2018, 23, 64

which is the ﬁnal result, sought to prove for deducing that E+ is globally asymptotically stable.
3. Free Horizon Isoperimetric Optimal Control Approach
Now, we consider the mathematical model in Equation (1) with θ as a control function of time t.
Motivated by the desire to ﬁnd the optimal time needed to reduce the number of infected people
as much as possible while minimizing the value of the control θ (t) over a free (non-ﬁxed) horizon t f ,
our objective is to seek a couple (θ ∗ (t), t∗f ) such that
J (θ ∗ (t), t∗f ) =

min

(θ (t),t f )∈U × R+

J ( θ ( t ), t f )

(5)

where J is the functional deﬁned by
J (θ (t), t f ) = t2f +

 t 
f
0

a I (t) +

b 2
θ (t) dt
2

(6)

and where the control space U is deﬁned by the set
U = {θ (t)|0 ≤ θ (t) ≤ 1, θ (t) measurable, t ∈ [0, t f ], t f f ree}
where a and b represent constant severity weights associated to functions I and θ, respectively.
Alkama et al. treated three cases of the form of the free horizon t∗f in the ﬁnal gain function of their
objective function when applying a free ﬁnal time optimal control approach to a cancer model [9].
Here, we suppose that t∗f takes the quadratic form as formulated in Equation (6) to obtain a direct
formula which characterizes t∗f . In fact, if t∗f is taken linear or the ﬁnal gain function is zero, t∗f would
just be approximated numerically due to the nature of necessary conditions in these two cases (see [9]
for explanation).
Since managers of the anti-epidemic resources cannot well-predict whether their control strategy
will reach the entire susceptible population over a ﬁxed horizon T, we treat here an example where
the number of targeted people in the susceptible class is equal for example to only a constant
C = 3026 for T = 50 months. Hence, we try to ﬁnd (θ ∗ (t), t∗f ) under the deﬁnition of the following
isoperimetric restriction
 T
0

aθ (t)S(t)dt = C

(7)

In [13], the authors deﬁned an isoperimetric constraint on the control variable only to model the
total tolerable dosage amount of a therapy along the treatment period. In their conferences talks [26,27],
Kornienko et al. and De Pinho et al. introduced state constraints in an optimal control problem that
is subject to an S-Exposed-I-R differential system to model the situation of limited supply of vaccine
based on work in [14] and where the isoperimetric constraint is deﬁned on the product of the control
and state variables.
In our case, to take into account the constraint in Equation (7) for the resolution of the optimal
control problem in Equation (5), we consider a new variable Z deﬁned as
Z (t) =

 t
0

aθ (v)S(v)dv

59

(8)

Math. Comput. Appl. 2018, 23, 64

Then, we have Ż (t) = aθ (t)S(t). Using notations of the state variables in the previous section
and keeping θ as a notation of θ (t) and Z in place of Z (t), we study the differential system deﬁned
as follows
⎧
= Π − βSI − aθS − μS
Ṡ
⎪
⎪
⎪
⎪
⎪
⎪
C˙ = aθS − bβCS I − μCS
⎪
⎪
⎨ S
(9)
= β(S + bCS ) I − γI − μI
İ
⎪
⎪
⎪
⎪
=
γI
−
μR
Ṙ
⎪
⎪
⎪
⎪
⎩
Ż = aθS
instead of the model in Equation (1). We also note that, when the minimization problem in Equation (5)
is under the constraint in Equation (7), the application of Pontryagin’s Maximum Principle would not
be appropriate for this case, but the new variable Z has the advantage to convert Equations (5)–(7) to
a classical optimal control problem under one restriction which is the system in Equation (9) only [28].
If we follow most optimal control approaches in the literature, the objective function in Equation (6) will
be defined over a fixed time interval. However, t∗f is free here, and, to find the optimal duration needed
to control an epidemic, it would be advantageous to managers of medical or health resources to control
an epidemic before reaching the fixed time T for lesser costs. For this purpose, we need to assume that
0 ≤ t∗f ≤ T to guarantee the sufficient condition for an optimal θ ∗ in the case of a free horizon. This is
because θ ∗ exists for the minimization problem in Equation (5) when Equation (6) is defined over T based
on the verified properties of the sufficient conditions as stated in details in Theorem 4.1, pp. 68–69 of [29]
and that can easily be verified for many examples as ours, and this implies in our case that the existence
of an optimal control θ ∗ and associated optimal trajectories S∗ , CS∗ , I ∗ , R∗ and Z∗ comes directly from the
convexity of the integrand term in Equation (6) with respect to the control θ and the Lipschitz properties
of the state system with respect to state variables S, CS , I, R and Z. Then, it exists for any time in the
interval [0, T ] including t∗f . As regard the necessary conditions, we state and prove the following theorem.
Theorem 4. If there exist optimal control u∗ and optimal horizon t∗f which minimize Equation (6) along with the
optimal solutions S∗ , CS∗ , I ∗ and R∗ associated to the differential system in Equation (9), then there exist adjoint
variables λk , k = 1, 2, 3, 4, 5 as notations of λk (t) and which satisfy the following adjoint differential system
⎧
λ˙1
⎪
⎪
⎪
⎪
⎪
⎪
λ˙
⎪
⎪
⎨ 2
λ˙3
⎪
⎪
⎪
⎪
⎪
λ˙
⎪
⎪ 4
⎪
⎩ ˙
λ5

= λ1 ( βI ∗ + μ + aθ ∗ ) − aλ2 θ ∗ − βλ3 I ∗ − aθλ5
= λ2 (bβI ∗ + μ) − bλ3 βI ∗
= − a + λ1 βS∗ + bλ2 βCS∗ − λ3 ( β(S∗ + bCS∗ ) − μ − γ) − λ4 γ

(10)

= λ4 μ
= 0

with the transversality conditions λk (t∗f ) = 0, k = 1, 2, 3, 4 and λ5 (t∗f ) = constant which should be determined.
Furthermore, the sought optimal control is characterized by


aS∗ (λ1 − λ2 − λ5 )
θ ∗ = min max 0,
b

,1

(11)

while the sought optimal horizon is characterized by
t∗f = −

H (t∗f , S(t∗f ), CS (t∗f ), I (t∗f ), R(t∗f ), Z (t∗f ), λ1 (t∗f ), λ2 (t∗f ), λ3 (t∗f ), λ4 (t∗f ), λ5 (t∗f ), θ (t∗f ))
2

(12)

where H (t∗f , S(t∗f ), CS (t∗f ), I (t∗f ), R(t∗f ), Z (t∗f ), λ1 (t∗f ), λ2 (t∗f ), λ3 (t∗f ), λ4 (t∗f ), λ5 (t∗f ), θ (t∗f )) deﬁnes the
Hamiltonian function as the sum of the integrand term of Equation (6) and the term λ1 Ṡ + λ2 C˙S + λ3 İ +
λ4 Ṙ + λ5 Ż at t∗f .

60

Math. Comput. Appl. 2018, 23, 64

Moreover, t∗f is positive only when H (t∗f , S(t∗f ), CS (t∗f ), I (t∗f ), R(t∗f ), Z (t∗f ), λ1 (t∗f ), λ2 (t∗f ), λ3 (t∗f ),
λ4 (t∗f ), λ5 (t∗f ), θ (t∗f )) is negative.
Proof. Let H be a notation of the Hamiltonian function H (t, S(t), CS (t), I (t), R(t), Z (t), λ1 (t), λ2 (t),
λ3 (t), λ4 (t), λ5 (t), θ (t)) in all time t. Then, we have
H

b 2
θ + λ1 Ṡ + λ2 C˙S + λ3 İ + λ4 Ṙ + λ5 Ż
2
b
a I + θ 2 + λ1 (Π − βSI − aθS − μS) + λ2 ( aθS − bβCS I − μCS )
2
+λ3 ( β(S + bCS ) I − γI − μI ) + λ4 (γI − μR) + aθSλ5

= a I+
=

Using Pontryagin’s maximum principle [30], we have
∂H
= λ1 ( βI ∗ + μ + aθ ∗ ) − aλ2 θ ∗ − βλ3 I ∗ − aθλ5
∂S
∂H
−
= λ2 (bβI ∗ + μ) − bλ3 βI ∗
∂CS
∂H
−
= − a + λ1 βS∗ + bλ2 βCS∗ − λ3 ( β(S∗ + bCS∗ ) − μ − γ) − λ4 γ
∂I
∂H
−
= λ4 μ
∂R
∂H
−
=0
∂R

λ˙1

= −

λ˙2

=

λ˙3

=

λ˙4

=

λ˙5

=

while the transversality conditions deﬁned as minus the derivative of the ﬁnal gain function with
respect to the state variables S, CS , I and R. Since the ﬁnal gain function in Equation (6) does not
contain any term of these variables, then λk (t∗f ) = 0, k = 1, 2, 3, 4 and λ5 (t∗f ) is unknown but we

are sure it is a constant since λ̇5 (t) = 0 ∀t ∈ [0, t∗f ]. The solution of this problem is treated in the
next section.
∂H
= 0. Then, after setting S = S∗ , we have
The optimality condition at θ = θ ∗ implies that
∂θ
b θ − aSλ1 + aSλ2 + aSλ5 = 0 ⇒ θ =

aS(λ1 − λ2 − λ5 )
b

Taking into account the bounds of the control, we obtain,


aS∗ (λ1 − λ2 − λ5 )
θ ∗ = min max 0,
b

,1

Now, let us prove the necessary conditions on t∗f . As J (θ, t f ) reaches its minimum at θ ∗ and t∗f ,
we have




J θ ∗ , t∗f + h − J θ ∗ , t∗f
=0
lim
h
h →0

61

Math. Comput. Appl. 2018, 23, 64

with the consideration of the ﬁnal gain function φ that we deduce it is deﬁned in Equation (6) by
φ(t f , S(t f ), CS (t f ), I (t f ), R(t f ), Z (t f )) = t2f , while setting θ = θ ∗ and t f = t∗f , we obtain
⎡
1⎢
lim ⎣φ(t f + h, S(t f + h), CS (t f + h), I (t f + h), R(t f + h), Z (t f + h)) +
h →0 h


t

−φ(t f , S(t f ), CS (t f ), I (t f ), R(t f ), Z (t f )) −

f

kI
0

!

⇒ lim

h →0

1
+
h

⇒

t f + h



aI (t) +

0

b 2
θ (t) dt
2

⎤
b
⎥
aI (t) + θ 2 (t) dt⎦ = 0
2

φ(t f + h, S(t f + h), CS (t f + h), I (t f + h), R(t f + h), Z (t f + h)) − φ(t f , S(t f ), CS (t f ), I (t f ), R(t f ), Z (t f ))
h

t f + h



tf

⎤
b
⎥
aI (t) + θ 2 (t) dt⎦ = 0
2

∂φ
∂φ
∂φ
∂φ
∂φ
∂φ
b
(t ) +
(t )Ṡ(t f ) +
(t )C˙S (t f ) +
(t ) İ (t f ) +
(t ) Ṙ(t f ) +
(t ) Ż (t f ) + aI (t) + θ 2 (t) = 0
∂t f
∂S f
∂CS f
∂I f
∂R f
∂Z f
2

⇒ 2t f + H (t f , S(t f ), CS (t f ), I (t f ), R(t f ), Z (t f ), λ1 (t f ), λ2 (t f ), λ3 (t f ), λ4 (t f ), λ5 (t f ), θ (t f )) = 0
⇒ tf +

H (t f , S(t f ), CS (t f ), I (t f ), R(t f ), Z (t f ), λ1 (t f ), λ2 (t f ), λ3 (t f ), λ4 (t f ), λ5 (t f ), θ (t f ))
=0
2

Finally, we have
tf = −

H (t f , S(t f ), CS (t f ), I (t f ), R(t f ), Z (t f ), λ1 (t f ), λ2 (t f ), λ3 (t f ), λ4 (t f ), λ5 (t f ), θ (t f ))
2

Otherwise, the positivity of t∗f under the condition of negativity of
H (t∗f , S(t∗f ), CS (t∗f ), I (t∗f ), R(t∗f ), Z (t∗f ), λ1 (t∗f ), λ2 (t∗f ), λ3 (t∗f ), λ4 (t∗f ), λ5 (t∗f ), θ (t∗f ))
is trivial, but this is not a condition we should have necessarily for θ ∗ since the Hamiltonian could
change signs any time along the interval of study.
4. Numerical Simulations
Based on the formulation of Equation (8), we have Z (0) = 0 and Z (t f ) = C. Since the optimal
control problem consists to resolve the two-point boundary value problem deﬁned by the two systems
in Equations (2) and (10), the differential system in Equation (2) will be numerically resolved forward in
time because of its initial conditions and the value of Z(0) does not change, while the differential system
in Equation (10) will be numerically resolved backward in time because of its ﬁnal or transversality
conditions but with the condition that Z (t f ) varies depending on the value of k. Based on the numerical
approach in [13], we propose also here to deﬁne a real function g such that k → g(k) = Z̃ f − Z f and
where Z̃ f is the value of Z at t f for various values of k and Z f is the value ﬁxed by C. This leads
to the combination of the Forward–Backward–Sweep Method (FBSM) which resolves the two-point
boundary value problem in Equations (2)–(10), with the secant-method to ﬁnd the value of the root k
of the function g [31]. The necessary condition on t∗f deﬁned by the characterization in Equation (12),
which leads to seek a ﬁxed point of a real function F such that F (t∗f ) = t∗f . We choose to solve this
numerical problem differently to the method used in [8,9] using the ﬁxed point method. In brief,
the four steps of numerical calculus associated to the resolution of our free optimal control problem (5)
under isoperimetric constraint (7), are described in Algorithm 1.

62

Math. Comput. Appl. 2018, 23, 64

Algorithm 1: Resolution steps of the two-point boundary value optimal control problem (9) and (10).
Step 0:
Guess an initial estimation to θ and t f inal .
Step 1:
Use the initial condition S(0), CS (0), I (0), R(0) and Z (0) and the stocked values by θ and
tf .
Find the optimal states S∗ , CS∗ , I ∗ , R∗ and Z ∗ which iterate forward in the two-point
boundary value problem (2)–(10).
Step 2:
Use the stocked values by θ and the transversality conditions λk (t f ) for k = 1, 2, 3, 4 while
searching the constant λ5 (t f ) using the secant-method.
Find the adjoint variables λk for k = 1, 2, 3, 4, 5 which iterate backward in the two-point
boundary value problem (2)–(10).
Step 3:
Update the control utilizing new S, CS , I, R, Z and λk for k = 1, 2, 3, 4, 5 in the
characterization of θ ∗ as presented in (11) while searching the optimal time t∗f characterized
by (12) using the ﬁxed point method.
Step 4:
Test the convergence. If the values of the sought variables in this iteration and the ﬁnal
iteration are sufﬁciently small, check out the recent values as solutions. If the values are not
small, go back to Step 1.
Figure 1 depicts the SCS IRZ dynamics in the absence and presence of the control and we can
see that the number of susceptible people has increased linearly from its initial condition to a number
higher than 92.5 individuals when we choose θ = 0, while the optimal state S∗ increases during the
first months of the optimal control strategy and it decreases when we work with the characterization of
Equation (11). Simultaneously, the number of removed people increases to only a value close to eight
people while it reaches a value higher than this number with a maximal peak equaling to 17 when θ = 0.
As regards to the number of infected people, it decreases from its initial condition to a value close to
an important value of 30 individuals because of the natural death and recovery only, while it decreases
towards a value very close to zero after the introduction of the control θ. We can see the relationship
between the number of controlled people and the optimal values taken by θ so when this is increasing,
the optimal state CS∗ is also increasing. In fact, we can deduce that, with only small values of θ, we reach
our goal by minimizing I function, and maximizing R function while the total number of the susceptible
who received the control along T and which is represented by the function Z has not exceeded the
imposed constant C. The dashed lines introduced in this figure show the highest fixed point value
of the sought final time, and we can understand that, at this point, we have already reached our goal
which concerns the minimization of the number of infected people and maximization of the number of
removed people. The next figure gives more information about the obtained value of t∗f .

63

Math. Comput. Appl. 2018, 23, 64

when θ=0

when θ≠0

90

90

80

80

S

S

the optimal control

70

1
0.98

70

0.96
10

20
30
40
time (in months)
when θ=0

50

60

0

20

20

15

15

10

20
30
40
time (in months)
when θ≠0

0.94

50

0.92
θ*

0

0.9
0.88
0.86

10

R

R

60

10
0.84

5

5

0

0

20
30
40
time (in months)
when θ=0

50

40

I

I

35

30

25

0.8
0

10

20
30
40
time (in months)
when θ≠0

50

30

60

20

10

20
30
40
time (in months)

50

0

10

20
30
40
time (in months)

50

number of controlled people
80

10

0

0

40

S

10

C

0

0.82

40
20

0

10

20
30
40
time (in months)

50

0

0

10

20
30
40
time (in months)

50

Z

4000
2000
0

C=3026
0

5

10

15

20
25
30
time (in months)

35

40

45

50

Figure 1. SCS IRZ dynamics in the absence and presence of the control in the two cases θ = 0 and θ = 0.
Parameters values: Π = 6.45, a = 0.06, b = 0.001, β = 0.0003, and μ = 0.05, γ = 0.1. Initial conditions:
S(0) = 89, CS (0) = 0, I (0) = 40, and R(0) = 0. Severity weights constants: a = 1 and b = 50.

In Figure 2, we present dynamics of the functions S, I and R, and we can see the ﬁxed points t∗f in
the ﬁrst plot above. The solution of the equation F (t∗f ) = t∗f starts from an initial guess which equals
zero, and increases to values that are very close or sometimes equal to 26 months (we note that, even if
they appeared taking the value 26, this is not the case at all iterations but just because all values are very
close to 26 with a small precision of about 10−4 ). As noted in this ﬁgure, for instance, the highest value
of t∗f = 26.4081 found at iteration 292 among 1000. In the same ﬁgure, in the plot below, we observe
that, at t∗f indicated by the dashed purple line, the number of infected people has already taken the
direction towards zero values, while the number of removed people has already reached its positive
peak and started to decrease because of the decrease of the optimal control function θ ∗ , as shown in the
previous ﬁgure. This means that there is no need in this case to extend the optimal control approach
for other months since, at t∗f , Equation (5) has been almost realized.

64

Math. Comput. Appl. 2018, 23, 64

Fixed points satisfying t *=F(t*) with F(t*)=−H(t*)/2
f

f

f

f

30

highest value is 26.4081 (found at iteration 292)

f

All possible values of t*

25

20

15

10

5

0

0

100

200

300

400
500
600
Optimization steps

700

800

900

1000

90
S
I
R

80
70
60
50
40
30
20
10
0

0

5

10

15

20

25
30
time (in months)

35

40

45

50

Figure 2. SIR dynamics with the precision of the optimal horizon t∗f with the same parameters, initial
conditions and severity weights constants as in Figure 1.

In Figure 3, the ﬁxed points t∗f for different values of the control severity weight b suggest that,
as the value of b increases, t∗f increases. In fact, the bigger is b , the lesser is the optimal control θ ∗ ,
which is important, as we can deduce from the formulation in Equation (11), and this is reasonable
since, when θ ∗ is small, we need more time to control the epidemic. The obtained results in this ﬁgure
can be summarized as follows:
•
•
•

When b = 60: I (t∗f ) = 6.734 with θ (t∗f ) = 0.8658 (iteration 278), which implies that 83.165% of
infected people have left the I compartment.
When b = 70: I (t∗f ) = 6.0627 with θ (t∗f ) = 0.8624 (iteration 295), which implies that 84.84325% of
infected people have left the I compartment.
When b = 80: I (t∗f ) = 4.7619 with θ (t∗f ) = 0.8573 (iteration 332), which implies that 88.09525% of
infected people have left the I compartment.

65

Math. Comput. Appl. 2018, 23, 64

*

*

*

Fixed points satisfying tf*=F(tf ) with F(tf )=−H(tf )/2
45

highest value= 42.3728 (found at iteration 332)
40

highest value= 37.051 (found at iteration 295)
35

highest value= 31.9294 (found at iteration 278)

f

All possible values of t*

30

b’=60
b’=70
b’=80

25

20

15

10

5

0

0

200

400
600
Optimization steps

800

1000

Figure 3. t∗f for different values of b with the same parameters, initial conditions and severity weights
constants as in Figure 1.

In Figure 4, we show the impact of the initial condition of I function, namely I0 , on ﬁxed points t∗f ,
and we can deduce from the obtained optimal horizons that, as I0 increases, t∗f increases, and this
is reasonable since, when the number of infected people is important, the anti-epidemic measures
need longer time for controlling the situation. The obtained results in this ﬁgure can be summarized
as follows:
•
•
•

When I (0) = 50: I (t∗f ) = 8.4416 with θ (t∗f ) = 0.8758 (iteration 278), which implies that 83.1168%
of infected people have left the I compartment.
When I (0) = 60: I (t∗f ) = 5.7018 with θ (t∗f ) = 0.8662 (iteration 338), which implies that 90.497% of
infected people have left the I compartment.
When I (0) = 70: I (t∗f ) = 8.1909 with θ (t∗f ) = 0.8802 (iteration 310), which implies that 88.2987%
of infected people have left the I compartment.

66

Math. Comput. Appl. 2018, 23, 64

Fixed points satisfying tf*=F(t*f ) with F(t*f )=−H(t*f )/2
35

highest value= 34.1597 (found at iteration 310)
highest value= 32.8953 (found at iteration 338)
highest value= 31.7294 (found at iteration 278)

30

I(0)=50
I(0)=60
I(0)=70

All possible values of t*f

25

20

15

10

5

0

0

200

400
600
Optimization steps

800

1000

Figure 4. t∗f for different values of the initial condition I (0) with the same parameters, severity weights
constants and , initial conditions for S(0), CS (0), and R(0) as in Figure 1.

5. Conclusions
In this paper, we have determined the optimal duration needed for controlling an epidemic based
on a free horizon optimal control approach with an isoperimetric constraint and which has been applied
to a four-compartmental epidemic model where it is supposed that the controlled population does
not reach the removed class due to the temporary effect of the control. The isoperimetric restriction
which has been proposed to deﬁne the number of susceptible people who receive the control along the
anti-epidemic measures period, allowed us to ﬁnd the optimal horizon of the optimal control strategy
when there are limited resources devised to ﬁght against a disease. In the numerical simulations,
we used the ﬁxed point method since the necessary condition on the free horizon led to a ﬁxed point
equation. Our results prove their usefulness, since, at the obtained optimal horizons for different
values of parameters and initial conditions on infection, the infected population size has been reduced
and this presents an advantage of the followed control approach to managers of the health resources
even when these are limited.

67

Math. Comput. Appl. 2018, 23, 64

Author Contributions: All authors contributed equally to this work. All authors read and approved the ﬁnal
manuscript.
Acknowledgments: The authors would like to thank all Managing Editors and members of the Editorial Board
who were responsible for dealing with this paper, and the anonymous referees for their valuable comments and
suggestions, improving the content of this paper.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

References
1.
2.

3.
4.
5.
6.
7.
8.

9.

10.
11.
12.
13.
14.

15.

16.
17.
18.
19.

Zakary, O.; Rachik, M.; Elmouki, I. On the impact of awareness programs in HIV/AIDS prevention: An SIR
model with optimal control. Int. J. Comput. Appl. 2016, 133, 1–6. [CrossRef]
Zakary, O.; Larrache, A.; Rachik, M.; Elmouki, I. Effect of awareness programs and travel-blocking operations
in the control of HIV/AIDS outbreaks: A multi-domains SIR model. Adv. Differ Equ. 2016, 2016, 169.
[CrossRef]
Roy, P.K.; Saha, S.; Al Basir, F. Effect of awareness programs in controlling the disease HIV/AIDS: An optimal
control theoretic approach. Adv. Differ. Equ. 2015, 2015, 217. [CrossRef]
Rodrigues, H.S.; Monteiro, M.T.T.; Torres, D.F. Vaccination models and optimal control strategies to dengue.
Math. Biosci. 2014, 247, 1–12. [CrossRef] [PubMed]
Kumar, A.; Srivastava, P.K. Vaccination and treatment as control interventions in an infectious disease model
with their cost optimization. Commun. Nonlinear Sci. Numer. Simul. 2017, 44, 334–343. [CrossRef]
Liu, X.; Takeuchi, Y.; Iwami, S. SVIR epidemic models with vaccination strategies. J. Theor. Biol. 2008, 253, 1–11.
[CrossRef] [PubMed]
Nainggolan, J.; Supian, S.; Supriatna, A.K.; Anggriani, N. Mathematical model of tuberculosis transmission
with reccurent infection and vaccination. J. Phys. Conf. Ser. 2013, 423, 012059. [CrossRef]
Zakary, O.; Rachik, M.; Elmouki, I. How much time is sufﬁcient for beneﬁting of awareness programs
in epidemics prevention? A free ﬁnal time optimal control approach. Int. J. Adv. Appl. Math. Mech.
2017, 4, 26–40.
Alkama, M.; Larrache, A.; Rachik, M.; Elmouki, I. Optimal duration and dosage of BCG intravesical
immunotherapy: A free ﬁnal time optimal control approach. Math. Methods Appl. Sci. 2018, 41, 2209–2219.
[CrossRef]
Zhou, L.; Fan, M. Dynamics of an SIR epidemic model with limited medical resources revisited. Nonlinear Anal.
Real World Appl. 2012, 13, 312–324. [CrossRef]
Abdelrazec, A.; Bélair, J.; Shan, C.; Zhu, H. Modeling the spread and control of dengue with limited public
health resources. Math. Biosci. 2016, 271, 136–145. [CrossRef] [PubMed]
Yu, T.; Cao, D.; Liu, S. Epidemic model with group mixing: Stability and optimal control based on limited
vaccination resources. Commun. Nonlinear Sci. Numer. Simul. 2018, 61, 54–70. [CrossRef]
Elmouki, I.; Saadi, S. BCG immunotherapy optimization on an isoperimetric optimal control problem for the
treatment of superﬁcial bladder cancer. Int. J. Dyn. Control 2016, 4, 339–345. [CrossRef]
Neilan, R.M.; Lenhart, S. An Introduction to Optimal Control with an Application in Disease Modeling.
In Modeling Paradigms and Analysis of Disease Trasmission Models; Gumel, A.B., Lenhart, S., Eds.; American
Mathematical Society: Providence, RI, USA, 2010; pp. 67–82.
El Kihal, F.; Abouelkheir, I.; Rachik, M.; Elmouki, I. Optimal Control and Computational Method for the
Resolution of Isoperimetric Problem in a Discrete-Time SIRS System. Math. Comput. Appl. 2018, 23, 52.
[CrossRef]
Kermack, W.O.; McKendrick, A.G. A Contribution to the Mathematical Theory of Epidemics. Proc. R. Soc. A
1927, 115, 700–721. [CrossRef]
Korobeinikov, A. Lyapunov functions and global properties for SEIR and SEIS epidemic models. Math. Med.
Biol. J. IMA 2004, 21, 75–83. [CrossRef]
Gonçalves, S.; Abramson, G.; Gomes, M.F. Oscillations in SIRS model with distributed delays. Eur. Phys. J. B
2011, 81, 363. [CrossRef]
Gray, A.; Greenhalgh, D.; Mao, X.; Pan, J. The SIS epidemic model with Markovian switching. J. Math.
Anal. Appl. 2012, 394, 496–516. [CrossRef]

68

Math. Comput. Appl. 2018, 23, 64

20.
21.
22.
23.
24.
25.
26.
27.

28.
29.
30.
31.

Kribs-Zaleta, C.M.; Velasco-Hernández, J.X. A simple vaccination model with multiple endemic states.
Math. Biosci. 2000, 164, 183–201. [CrossRef]
Kribs-Zaleta, C.M.; Martcheva, M. Vaccination strategies and backward bifurcation in an age-since-infection
structured model. Math. Biosci. 2002, 177, 317–332. [CrossRef]
Alexander, M.E.; Bowman, C.; Moghadas, S.M.; Summers, R.; Gumel, A.B.; Sahai, B.M. A vaccination model
for transmission dynamics of inﬂuenza. SIAM J. Appl. Dyn. Syst. 2004, 3, 503–524. [CrossRef]
Shim, E. A note on epidemic models with infective immigrants and vaccination. Math. Biosci. Eng. 2006, 3, 557.
[CrossRef] [PubMed]
Sharomi, O.; Malik, T. Optimal control in epidemiology. Ann. Oper. Res. 2017, 251, 55–71. [CrossRef]
Hethcote, H.W. The mathematics of infectious diseases. SIAM Rev. 2000, 42, 599–653. [CrossRef]
Kornienko, I.; Paiva, L.T.; De Pinho, M.D.R. Introducing state constraints in optimal control for health
problems. Procedia Technol. 2014, 17, 415–422. [CrossRef]
De Pinho, M.D.R.; Kornienko, I.; Maurer, H. Optimal Control of a SEIR Model with Mixed Constraints
and L1 Cost. In Proceedings of the 11th Portuguese Conference on Automatic Control, Porto, Portugal,
21–23 July 2014; pp. 135–145.
Lenhart, S.; Workman, J.T. Optimal Control Applied to Biological Models; CRC Press: New York, NY, USA, 2007.
Fleming, W.H.; Rishel, R.W. Deterministic and Stochastic Optimal Control; Springer Science & Business Media:
New York, NY, USA, 2012.
Pontryagin, L.S. Mathematical Theory of Optimal Processes; CRC Press: New York, NY, USA, 1987.
Gumel, A.B.; Lenhart, S. Modeling Paradigms and Analysis of Disease Transmission Models; American
Mathematical Society: Providence, RI, USA, 2010.
c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

69

Mathematical
and Computational
Applications

Article

Optimal Strategies for Psoriasis Treatment
Ellina Grigorieva 1, * and Evgenii Khailov 2
1
2

*

TWU Department of Mathematics and Computer Science, Texas Woman’s University, Denton,
TX 76204, USA
MSU Faculty of Computational Mathematics and Cybernetics, Lomonosov Moscow State University,
Moscow 119992, Russia; khailov@cs.msu.su
Correspondence: egrigorieva@mail.twu.edu or egrigorieva@twu.edu; Tel.: +1-940-898-2452

Received: 1 August 2018; Accepted: 31 August 2018; Published: 4 September 2018

Abstract: Within a given time interval we consider a nonlinear system of differential equations describing
psoriasis treatment. Its phase variables define the concentrations of T-lymphocytes, keratinocytes and
dendritic cells. Two scalar bounded controls are introduced into this system to reflect medication dosages
aimed at suppressing interactions between T-lymphocytes and keratinocytes, and between T-lymphocytes
and dendritic cells. For such a controlled system, a minimization problem of the concentration of
keratinocytes at the terminal time is considered. For its analysis, the Pontryagin maximum principle is
applied. As a result of this analysis, the properties of the optimal controls and their possible types are
established. It is shown that each of these controls is either a bang-bang type on the entire time interval or
(in addition to bang-bang type) contains a singular arc. The obtained analytical results are confirmed by
numerical calculations using the software “BOCOP-2.0.5”. Their detailed analysis and the corresponding
conclusions are presented.
Keywords: psoriasis; nonlinear control system; optimal control; Pontryagin maximum principle;
switching function; Lie brackets; singular arc; chattering control

1. Introduction
Psoriasis is an immune-mediated inflammatory skin disease that affects 2–3% of the population
around the world [1]. The most characteristic features of the pathology are hyperproliferation and disrupted
epidermal differentiation, altered immunological and vascular skin profiles. Manifestations of psoriasis can
vary according to severity: from weak, when only a few characteristic psoriatic plaques are present on the
body of patients, to extremely severe ones, when the lesion affects almost the entire surface of the body and
joints. Disease can significantly reduce the standard of living and performance of patients [2]. There are
established links between psoriasis and other diseases: obesity, diabetes, cardiovascular diseases, metabolic
syndrome, and depression [3]. Molecular-genetic causes of the disease are still not fully established.
At the same time, various polymorphisms associated with psoriasis as well as several environmental
factors that can lead to the manifestation of this disease are identified [4]. To date, about 150 million people
around the world are suffering from psoriasis. In the USA the annual cost of treatment is about $12 billion,
while the existing therapies can only relieve symptoms and increase remission time. In addition, recent
studies have revealed the division of psoriasis into subtypes, depending on which patients may respond
differently to therapy. In some cases, despite costly and prolonged treatment, the patient’s condition may
not improve [5]. In recent years, studies have greatly expanded the understanding of the pathogenesis of
psoriasis and allowed the development of numerous therapies.
In psoriasis, mathematical models are effectively used to predict cellular behavior of the skin in
both normal and pathological conditions. Among all possible models [6], we highlight the models that
are described by systems of differential equations [6–15]. In turn, controlled mathematical models are
used to simulate the use of medication and dosage regimen, compare the effects of various drugs on

Math. Comput. Appl. 2018, 23, 45; doi:10.3390/mca23030045

70

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 45

the affected areas of the skin, and to determine the most effective methods of treatment. Within the
framework of a speciﬁc model, optimal control theory is used to ﬁnd the best strategies in one sense or
another for psoriasis treatment.
For mathematical models of psoriasis treatment, optimal control problems were considered in [15–17],
where the optimal treatment strategies minimizing the weighted sum of the total concentration of
keratinocytes and the total cost of the treatment were found numerically. This cost of psoriasis
treatment was expressed by an integral of the square of control, and these models were described using
systems of differential equations linear in control. After applying the Pontryagin maximum principle
as a necessary optimality condition, the corresponding optimal control problems were reduced to
two-point boundary value problems for the maximum principle, which were then solved numerically,
applying standard mathematical software. This was because the right-hand sides of the systems of
differential equations of such boundary value problems were Lipschitz functions of the phase and
adjoint variables.
In the optimal control problems for mathematical models of diseases and the spread of epidemics,
the total cost of treatment can also be expressed by an integral of control [18–21]. In this case, the models
are still described by systems of differential equations that are linear in control. Then, as shown
in [21,22], after applying the Pontryagin maximum principle to such problems, the corresponding
optimal controls can contain singular arcs on which these controls are not uniquely determined from
the maximum condition. After the existence of such singular arcs are established on appropriate
singular intervals, the corresponding optimality conditions are checked, and the concatenations of
singular and nonsingular intervals are found, the ﬁnding of speciﬁc optimal solutions in optimal
control problems is still performed only numerically. This paper shows that optimal controls can
contain singular arcs in the minimization problem for the mathematical model of psoriasis treatment
even in the absence of the controls in the integral terms of the functional to be minimized responsible
for the cost of this treatment.
This paper is organized as follows. Section 2 is devoted to the description of the mathematical
model of psoriasis treatment and the formulation of the corresponding optimal control problem for it.
Namely, we consider a nonlinear controlled system of three differential equations that presents the
process of treating this disease. Its phase variables determine the concentrations of T-lymphocytes,
keratinocytes, and dendritic cells. The interaction of these types of cells leads to the appearance
and development of psoriasis. There are two scalar bounded controls in the system that reﬂect all
types of psoriasis treatment: skin creams that prevent or inhibit the formation, development and
spread of psoriatic skin lesions, as well as pills and injections, also aimed at achieving similar results.
At the same time, skin creams suppress the interaction between T-lymphocytes and keratinocytes;
pills and injections weaken the interaction between T-lymphocytes and dendritic cells. All such
medications are aimed at achieving the main goal, which is to reduce the number of keratinocytes.
Therefore, for such a controlled system, at a given time interval the problem of minimizing the
concentration of keratinocytes at the end of the time interval is stated. An optimal solution for such a
problem, consisting of the optimal controls and the corresponding optimal solutions of the system,
is analyzed using the Pontryagin maximum principle. Its application to the considered minimization
problem is discussed in Section 3. Here, also possible types of the optimal controls are discussed:
whether they are only bang-bang functions, or they can contain singular arcs in addition to the
bang-bang intervals. A detailed analysis of the behavior of the optimal controls is given in Section 4.
Here, we study the properties of the corresponding switching functions, which are crucial in such
analysis. Using the Lie brackets of the geometric control theory allows us to obtain the Cauchy
problem for the switching functions. Such a Cauchy problem makes it possible to draw the conclusions
about possible singular arcs of the optimal controls. The ﬁrst one shows that these controls do not
simultaneously have singular arcs on the same singular intervals. The second of them is that when one
optimal control has a singular arc on some singular interval, the second optimal control is constant on
this interval and takes one of its boundary values. The next two sections, Sections 5 and 6, are devoted

71

Math. Comput. Appl. 2018, 23, 45

to a detailed analysis of singular arcs of each optimal control. In these sections it is shown that one
of them can have a singular arc of the order of two, and the other can contain a singular arc of order
one. Also, for each of these singular arcs the corresponding necessary optimality conditions are
checked (Kelly-Cope-Moyer condition and Kelly condition). Finally, the forms of concatenations of the
singular arcs of the optimal controls with nonsingular intervals on which such controls are bang-bang
functions are considered. Since, as previously mentioned, after discussing all such issues, ﬁnding the
speciﬁc optimal solutions is carried out numerically, then in Section 7 the results of the corresponding
numerical calculations and their discussion are presented. Section 8 contains our conclusions.
2. Mathematical Model and Optimal Control Problem
Let a time interval [0, T ] be given, which is the period of psoriasis treatment. We consider on
this interval a mathematical model that establishes the links between the concentrations l (t), k(t),
m(t) of T-lymphocytes, keratinocytes, and dendritic cells, respectively, because interactions between
these types of cells cause a disease such as psoriasis. Such a model is the nonlinear system of
differential equations:
⎧
⎪
⎨ l (t) = σ − δv(t)l (t)m(t) − γ1 u(t)l (t)k (t) − μl (t),
k (t) = ( β + δ)v(t)l (t)m(t) + γ2 u(t)l (t)k (t) − λk(t),
⎪
⎩ m (t) = ρ − βv(t)l (t)m(t) − νm(t),

(1)

with given initial values:
l (0) = l0 , k(0) = k0 , m(0) = m0 ; l0 , m0 , k0 > 0.

(2)

In System (1) we suppose that σ is the constant rate of accumulation for T-lymphocytes and
ρ is the constant accumulation rate of dendritic cells. The rate of activation of T-lymphocytes by
dendritic cells is δ and β is the activation rate of dendritic cells by T-lymphocytes. Also, we consider
that the removal rates of T-lymphocytes, keratinocytes and dendritic cells are denoted by μ, λ and ν,
respectively. Finally, we suppose that γ1 is the rate of activation of keratinocytes by T-lymphocytes
and growth of keratinocytes due to T-lymphocytes occurs at the rate γ2 .
Next, in System (1) two control functions u(t) and v(t) are introduced. The control u(t) is at the
places of interaction between T-lymphocytes and keratinocytes and reﬂects the medication dosage
to restrict the excessive growth of keratinocytes. In a similar way, the control v(t) is at the places
of interaction between T-lymphocytes and dendritic cells and reﬂects the medication dosage for the
restriction of the excessive growth of keratinocytes as well. The controls u(t) and v(t) subject to the
following restrictions:
(3)
0 < umin ≤ u(t) ≤ 1, 0 < vmin ≤ v(t) ≤ 1.
We consider that the set of all admissible controls Ω( T ) is formed by all possible pairs of Lebesgue
measurable functions (u(t), v(t)), which for almost all t ∈ [0, T ] satisfy Inequality (3).
Let us introduce a region:
#
"
Λ = (l, k, m) ∈ R3 : l > 0, k > 0, m > 0, l + k + m < M ,
where M is a positive constant that depends on the parameters σ, ρ, β, δ, μ, λ, ν, γ1 , γ2 of System (1)
and its initial values l0 , k0 , m0 from (2). Here R3 is the Euclidean space consisting of all column vectors
and the sign  means transposition.
Then, the boundedness, positiveness, and continuation of the solutions for System (1) is stated by
the following lemma.

72

Math. Comput. Appl. 2018, 23, 45

Lemma 1. Let the inclusion (l0 , k0 , m0 ) ∈ Λ be valid. Then, for any pair of admissible controls
(u(t), v(t)) the corresponding absolutely continuous solutions l (t), k(t), m(t) for System (1) are deﬁned
on the entire interval [0, T ] and satisfy the inclusion:

(l (t), k(t), m(t)) ∈ Λ, t ∈ (0, T ].

(4)

Remark 1. Relationship (4) implies that the region Λ is a positive invariant set for System (1). The proof of
Lemma 1 is fairly straightforward, and we omit it. Proofs of such statements are given, for example, in [16,23,24].
Now, let us consider for System (1) on the set of admissible controls Ω( T ) the following
minimization problem:
min
,
(5)
J (u(·), v(·)) = k( T ) →
(u(·),v(·))∈Ω( T )

which consists in minimizing the concentration of keratinocites at the ﬁnal moment T of psoriasis
treatment. As already noted in [25], the optimal control problem (5) differs from problems that
are typically considered in the literature on the control of psoriasis models [15–17,26] in that the
functional from (5) does not include an integral of the weighted sum of the squares of the controls
u(t) and v(t), which is responsible for the total cost of drug dosages. In psoriasis treatment, in most
cases, either a skin cream, or an oral medication are used. Both prescribed medications have regular
daily dosage and are not as harmful for patients as the drugs used in chemotherapy for cancer
treatment [21]. Therefore, the total cost of psoriasis treatment in the meaning “harm” to a patient and
that usually mathematically is described by an integral of the weighted sum of the squares of the
controls, can be ignored. Moreover, using the terminal functional from (5) instead of corresponding
integral functional [15–17,26] simpliﬁes the subsequent analytical arguments.
The existence in the minimization problem (5) of the optimal controls (u∗ (t), v∗ (t)) and the
corresponding optimal solutions l∗ (t), k ∗ (t), m∗ (t) for System (1) follows from Lemma 1 and
Theorem 4 ([27], Chapter 4).
Finally, based on the results from [17,23,26], we assume that the following assumption is true.
Assumption 1. Let the inequalities:
γ1 = γ2 ,

( β + δ)γ1 > δγ2 , λ > μ, λ > ν

(6)

be valid.
Let us introduce the constants:
α = γ1 γ2−1 ( β + δ) − δ,

= α ( λ − ν ) + δ ( λ − μ ).

By this assumption, it is easy to see that these constants are positive.
3. Pontryagin Maximum Principle
We apply the Pontryagin maximum principle [28] to analyze the optimal controls u∗ (t), v∗ (t) and
the corresponding optimal solutions l∗ (t), k ∗ (t), m∗ (t). Firstly, let us deﬁne the Hamiltonian:
H (l, m, k, u, v,ψ1 , ψ2 , ψ3 ) = (σ − δvlm − γ1 ulk − μl )ψ1

+ (( β + δ)vlm + γ2 ulk − λk)ψ2 + (ρ − βvlm − νm)ψ3 ,
where ψ1 , ψ2 , ψ3 are the adjoint variables.

73

Math. Comput. Appl. 2018, 23, 45

Secondly, we calculate the required partial derivatives:
Hl (l, m, k, u, v, ψ1 , ψ2 , ψ3 ) = uk(γ2 ψ2 − γ1 ψ1 )

+ vm(−δψ1 + ( β + δ)ψ2 − βψ3 ) − μψ1 ,
Hk (l, m, k, u, v, ψ1 , ψ2 , ψ3 ) = ul (γ2 ψ2 − γ1 ψ1 ) − λψ2 ,
Hm (l, m, k, u, v, ψ1 , ψ2 , ψ3 ) = vl (−δψ1 + ( β + δ)ψ2 − βψ3 ) − νψ3 ,
Hu (l, m, k, u, v, ψ1 , ψ2 , ψ3 ) = lk(γ2 ψ2 − γ1 ψ1 ),
Hv (l, m, k, u, v, ψ1 , ψ2 , ψ3 ) = lm(−δψ1 + ( β + δ)ψ2 − βψ3 ).
Then, in accordance with the Pontryagin maximum principle, for the optimal controls
u∗ (t), v∗ (t) and the optimal solutions l∗ (t), k ∗ (t), m∗ (t) there exists a vector-function ψ∗ (t) =
(ψ1∗ (t), ψ2∗ (t), ψ3∗ (t)) such that:
•

ψ∗ (t) is a nontrivial solution of the adjoint system:
⎧ ∗
ψ1 (t) = −u∗ (t)k ∗ (t)(γ2 ψ2∗ (t) − γ1 ψ1∗ (t))
⎪
⎪
⎪
⎪
⎪
−v∗ (t)m∗ (t)(−δψ1∗ (t) + ( β + δ)ψ2∗ (t) − βψ3∗ (t)) + μψ1∗ (t),
⎨
ψ2∗ (t) = −u∗ (t)l∗ (t)(γ2 ψ2∗ (t) − γ1 ψ1∗ (t)) + λψ2∗ (t),
⎪
⎪
⎪ ψ3∗ (t) = −v∗ (t)l∗ (t)(−δψ1∗ (t) + ( β + δ)ψ2∗ (t) − βψ3∗ (t)) + νψ3∗ (t),
⎪
⎪
⎩ ∗
ψ1 ( T ) = 0, ψ2∗ ( T ) = −1, ψ3∗ ( T ) = 0;

•

(7)

the controls u∗ (t) and v∗ (t) maximize the Hamiltonian
H (l∗ (t), k ∗ (t), m∗ (t), u, v, ψ1∗ (t), ψ2∗ (t), ψ3∗ (t))
with respect to variables u ∈ [umin , 1] and v ∈ [vmin , 1] for almost all t ∈ [0, T ], and therefore they
satisfy the relationships:
⎧
⎪
⎨ 1
u∗ (t) =
any u ∈ [umin , 1]
⎪
⎩ u
min

, if Lu (t) > 0,
, if Lu (t) = 0,
, if Lu (t) < 0;

(8)

⎧
⎪
⎨ 1
v∗ (t) =
any v ∈ [vmin , 1]
⎪
⎩ v
min

, if Lv (t) > 0,
, if Lv (t) = 0,
, if Lv (t) < 0;

(9)

where the functions:
Lu (t) = l∗ (t)k ∗ (t)(γ2 ψ2∗ (t) − γ1 ψ1∗ (t)),
Lv (t) = l∗ (t)m∗ (t)(−δψ1∗ (t) + ( β + δ)ψ2∗ (t) − βψ3∗ (t))

(10)

are the switching functions describing the behavior of the controls u∗ (t) and v∗ (t) in accordance
with Formulas (8) and (9), respectively.
Analysis of Formulas (8) and (9) shows possible types of the optimal controls u∗ (t) and v∗ (t).
They can only have a bang-bang type and switch between the corresponding values umin and 1,
vmin and 1. This occurs, when passing through the points at which the switching functions Lu (t) and
Lv (t) are zero, the sign of these functions changes. Or, in addition to intervals of a bang-bang type,
the controls u∗ (t) and v∗ (t) can also contain singular arcs [22,29]. This occurs when the switching
functions Lu (t) and Lv (t) individually or both simultaneously vanish identically on certain subintervals
of the interval [0, T ]. Furthermore, such subintervals we will call as singular intervals. The following
sections are devoted to a detailed study of singular arcs for the optimal controls u∗ (t) and v∗ (t).

74

Math. Comput. Appl. 2018, 23, 45

Now, we establish the important property of the controls u∗ (t) and v∗ (t). Namely, by Lemma 1,
the initial values of System (7), Formula (10), and the continuity of the switching functions Lu (t) and
Lv (t), the following lemma is valid.
Lemma 2. There exist such values tu , tv ∈ [0, T ) that the inequalities Lu (t) < 0 and Lv (t) < 0 hold for all t
from the corresponding intervals (tu , T ] and (tv , T ].
Corollary 1. Lemma 2 and Formulas (8) and (9) imply the following relationships for the optimal controls
u∗ (t) and v∗ (t):
v∗ (t) = vmin , t ∈ (tv , T ].
u∗ (t) = umin , t ∈ (tu , T ];
4. Differential Equations of the Switching Functions
Let us obtain differential equations for the switching functions Lu (t) and Lv (t). To do this,
we draw on the concepts and notations of geometric control theory from [21,22].
Again, we consider the Euclidean space R3 in which the value τ, s is the scalar product of its
elements. Let z = (l, k, m) ∈ R3 . Then, we rewrite System (1) as follows
z (t) = f (z(t)) + u(t) g(z(t)) + v(t)h(z(t)),
⎞
σ − μl
⎟
⎜
f (z) = ⎝ −λk ⎠ ,
ρ − νm
⎛

where

⎞
−γ1 lk
⎟
⎜
g(z) = ⎝ γ2 lk ⎠ ,
0
⎛

(11)

⎞
−δlm
⎟
⎜
h(z) = ⎝( β + δ)lm⎠
− βlm
⎛

(12)

with f (z) the drift and g(z), h(z) the control vector ﬁelds of this system. Here z(t) is the column vector
consisting of the solutions l (t), k (t), m(t) that correspond to the admissible controls u(t) and v(t),
that is z(t) = (l (t), k (t), m(t)) ∈ R3 . Let D f (z), Dg(z) and Dh(z) be the Jacobian matrices of the
vector functions f (z), g(z) and h(z), respectively. By Formula (12), we ﬁnd the following relationships:
⎛

−μ 0
⎜
D f (z) = ⎝ 0 −λ
0
0
⎛
−δm
⎜
Dh(z) = ⎝( β + δ)m
− βm

⎞
0
⎟
0 ⎠,
−ν
0
0
0

⎛

−γ1 k
⎜
Dg(z) = ⎝ γ2 k
0
⎞
−δl
⎟
( β + δ)l ⎠ .
− βl

−γ1 l
γ2 l
0

⎞
0
⎟
0⎠ ,
0

(13)

Then, using the introduced concepts and notations, it is easy to see that z∗ (t) =
(l∗ (t), k ∗ (t), m∗ (t)) is the optimal trajectory for System (11) corresponding to the optimal controls
u∗ (t) and v∗ (t); ψ∗ (t) = (ψ1∗ (t), ψ2∗ (t), ψ3∗ (t)) is the appropriate nontrivial solution for the adjoint
System (7), or in the new notations:
⎧


⎨
ψ∗ (t) = − D f (z∗ (t)) + u∗ (t) Dg(z∗ (t) + v∗ (t) Dh(z∗ (t)) ψ∗ (t),
(14)
⎩ ψ ( T ) = (0, −1, 0) .
∗

The Hamiltonian
H (t) = H (l∗ (t), k ∗ (t), m∗ (t), u∗ (t), v∗ (t), ψ1∗ (t), ψ2∗ (t), ψ3∗ (t))
takes the form:
H (t) = ψ∗ (t), f (z∗ (t)) + u∗ (t)ψ∗ (t), g(z∗ (t)) + v∗ (t)ψ∗ (t), h(z∗ (t)).

75

Math. Comput. Appl. 2018, 23, 45

The switching functions Lu (t) and Lv (t), deﬁned by Formula (10), become the scalar products of
the adjoint function ψ∗ (t) with the corresponding control ﬁelds g(z∗ (t)) and h(z∗ (t)):
Lu (t) = ψ∗ (t), g(z∗ (t)),

Lv (t) = ψ∗ (t), h(z∗ (t)).

(15)

Now, according to [21,22], we introduce for the drift and control vector ﬁelds f (z), g(z) and h(z)
the corresponding Lie brackets:

[ f , g](z) = Dg(z) f (z) − D f (z) g(z),

(16)

[ f , h](z) = Dh(z) f (z) − D f (z)h(z),

(17)

[ g, h](z) = Dh(z) g(z) − Dg(z)h(z).

(18)

Using (11) and (14)–(18), the derivatives of the switching functions Lu (t) and Lv (t) can be obtained
as follows
(19)
Lu (t) = ψ∗ (t), [ f , g](z∗ (t)) + v∗ (t)ψ∗ (t), [ h, g](z∗ (t)),
Lv (t) = ψ∗ (t), [ f , h](z∗ (t)) + u∗ (t)ψ∗ (t), [ g, h](z∗ (t)).

(20)

Now, using (12) and (13) in (16)–(18), we compute the Lie brackets [ f , g](z), [ f , h](z) and [ g, h](z).
As a result, we ﬁnd the formulas:
⎞
⎞
⎛
⎛
γ1 ( β + δ)l 2 m
−γ1 k(σ − λl )
⎟
⎟
⎜
⎜
[ f , g](z) = ⎝ γ2 k(σ − μl ) ⎠ , [ g, h](z) = ⎝−γ2 ( β + δ)l 2 m − αγ2 lkm⎠ ,
γ1 βlkm
0
⎛
⎞
(21)
−δ((ρl + σm) − νlm)
⎜
⎟
[ f , h](z) = ⎝( β + δ)((ρl + σm) + (λ − μ − ν)lm)⎠ .
− β((ρl + σm) − μlm)
Let us write these Lie brackets in a more convenient form for the subsequent analysis. For this,
we introduce the following linearly independent vectors:
⎞
−γ1
⎟
⎜
p = ⎝ γ2 ⎠ ,
0
⎛

⎞
−δ
⎟
⎜
q = ⎝ β + δ⎠ ,
−β
⎛

⎛ ⎞
1
⎜ ⎟
r = ⎝0⎠ .
0

It is easy to see that the following representations for the control vector ﬁelds g(z) and h(z)
are valid:
h(z) = lm · q.
g(z) = lk · p,
Using these relationships, Formula (15) for the switching functions Lu (t) and Lv (t) can be
rewritten as
(22)
Lu (t) = l∗ (t)k ∗ (t)ψ∗ (t), p, Lv (t) = l∗ (t)m∗ (t)ψ∗ (t), q.
Now, let us ﬁnd the decompositions of the Lie brackets [ f , g](z), [ f , h](z) and [ g, h](z),
deﬁned by (21), by the vectors p, q, r. As a result, we have the representations:

[ f , g](z) = k(σ − μl ) · p + γ1 (λ − μ)lk · r,

(23)

[ f , h](z) = γ2−1 ( β + δ)(λ − ν)lm · p + (ρl + σm − μlm) · q + lm · r,

(24)

[ g, h](z) = −lm(( β + δ)l − δk) · p − γ1 lkm · q.

(25)

76

Math. Comput. Appl. 2018, 23, 45

Next, let us introduce the auxiliary function G (t) = ψ∗ (t), r  = ψ1∗ (t), and deﬁne the following
absolutely continuous functions:
1
au (t) = l∗−1 (t)(σ − μl∗ (t)), av (t) = γ2−1 ( β + δ)(λ − ν)k−
∗ ( t ) m ∗ ( t ),
1
bv (t) = l∗−1 (t)m−
∗ ( t )( ρl∗ ( t ) + σm∗ ( t ) − μl∗ ( t ) m∗ ( t )),

cu (t) = γ1 (λ − μ)l∗ (t)k ∗ (t), cv (t) = l∗ (t)m∗ (t),

(26)

1
d(t) = k−
∗ ( t ) m∗ ( t )(( β + δ ) l∗ ( t ) − δk ∗ ( t )), e ( t ) = γ1 k ∗ ( t ).

It is easy to see that the functions cu (t) and cv (t) are positive on the interval [0, T ].
Finally, substituting (23)–(25) into (19), (20) and using (22), (26), we ﬁnd the required differential
equations for the switching functions Lu (t) and Lv (t):
Lu (t) = au (t) Lu (t) + cu (t) G (t) + v∗ (t)(d(t) Lu (t) + e(t) Lv (t)),
L v ( t ) = a v ( t ) L u ( t ) + bv ( t ) L v ( t ) + c v ( t ) G ( t )

− u∗ (t)(d(t) Lu (t) + e(t) Lv (t)).
We add to these equations the ﬁrst equation of System (7), written with use of the functions Lu (t),
L v ( t ), G ( t ):
G (t) = −u∗ (t)l∗−1 (t) Lu (t) − v∗ (t)l∗−1 (t) Lv (t) + μG (t),
as well as the corresponding initial values:
Lu ( T ) = −γ2 l∗ ( T )k ∗ ( T ), Lv ( T ) = −( β + δ)l∗ ( T )m∗ ( T ), G ( T ) = 0.
As a result, we obtain the Cauchy problem for the switching functions Lu (t), Lv (t) and the
function G (t):
⎧
Lu (t) = au (t) Lu (t) + cu (t) G (t) + v∗ (t)(d(t) Lu (t) + e(t) Lv (t)),
⎪
⎪
⎪
⎪
⎪
L
⎨ v ( t ) = a v ( t ) L u ( t ) + bv ( t ) L v ( t ) + c v ( t ) G ( t )
−u∗ (t)(d(t) Lu (t) + e(t) Lv (t)),
⎪
⎪
−1 ( t ) L ( t ) − v ( t ) l −1 ( t ) L ( t ) + μG ( t ),
⎪
(
t
)
=
−
u
(
t
)
l
G
∗
u
∗
v
⎪
∗
∗
⎪
⎩
Lu ( T ) = −γ2 l∗ ( T )k ∗ ( T ), Lv ( T ) = −( β + δ)l∗ ( T )m∗ ( T ), G ( T ) = 0,

(27)

which we will use to justify the properties of the functions Lu (t) and Lv (t).
Now, let us establish the properties of the switching functions Lu (t) and Lv (t).
Firstly, the following lemma is true.
Lemma 3. There is no subinterval of the interval [0, T ] at which both switching functions Lu (t) and Lv (t) are
identically zero.
Proof of Lemma 3. We suppose the contrary. Let there be the interval Δu,v ⊂ [0, T ] on which the
functions Lu (t) and Lv (t) identically equal to zero. Then, their derivatives Lu (t) and Lv (t) almost
everywhere on this subinterval also vanish. From the ﬁrst two differential equations of the Cauchy
problem (27) we ﬁnd that G (t) = 0 everywhere on the subinterval Δu,v . Hence, on this subinterval the
derivative G (t) is almost everywhere zero. Therefore, the third differential equation of the Cauchy
problem (27) is also satisﬁed. Using the deﬁnition of the function G (t), Lemma 1 and Formula (10),
we ﬁnd that the adjoint function ψ∗ (t) vanishes identically on the subinterval Δu,v . Since the system of
linear differential equations (7) is homogeneous, then ψ∗ (t) = 0 identically everywhere on the interval
[0, T ], which is contradictory. Hence, our assumption was wrong, and the subinterval Δu,v ⊂ [0, T ] on
which both switching functions Lu (t) and Lv (t) are identically zero, does not exist. This completes
the proof.

77

Math. Comput. Appl. 2018, 23, 45

Secondly, the following lemma holds.
Lemma 4. Let the subinterval Δu ⊂ [0, T ] be a singular interval of the optimal control u∗ (t).
Then, everywhere on this subinterval, the optimal control v∗ (t) is constant and takes one of the values {vmin ; 1}.
Proof of Lemma 4. On the subinterval Δu the switching function Lu (t) is identically zero, and its
derivative Lu (t) vanishes almost everywhere on this interval. Then, the ﬁrst differential equation of
the Cauchy problem (27) yields the equality:
cu (t) G (t) + v∗ (t)e(t) Lv (t) = 0,

t ∈ Δu .

(28)

Let us suppose that the switching function Lv (t) is zero at some point t0u ∈ Δu , that is
Lv (t0u ) = 0.

(29)

G (t0u ) = 0.

(30)

Then, (28) implies the equality:
The identical equality to zero of the function Lu (t) on the subinterval Δu and (29), (30) lead
us to the equality ψ∗ (t0u ) = 0. A further repetition of the corresponding arguments from Lemma 3
gives a contradiction. Hence, our assumption was wrong, and the switching function Lv (t) does
not vanish at any point of the subinterval Δu . Therefore, it is sign-deﬁnite on this subinterval,
and, by Formula (9), the optimal control v∗ (t) corresponding to it, is constant and takes one of
the values {vmin ; 1}. This completes the proof.
Furthermore, performing arguments similar to the arguments of Lemma 4, one can show that the
following lemma is valid.
Lemma 5. Let the subinterval Δv ⊂ [0, T ] be a singular interval of the optimal control v∗ (t).
Then, everywhere on this subinterval, the optimal control u∗ (t) is constant and takes one of the values {umin ; 1}.
Now, we strengthen the result obtained in Lemma 4. Namely, the following lemma holds.
Lemma 6. Let the subinterval Δu = (t1u , t2u ) ⊂ [0, T ], where t1u > 0, be a singular interval of the optimal
control u∗ (t). Then, there exists a number ε u > 0 such that on the interval (t1u − u , t2u + u ) the optimal
control v∗ (t) is constant and takes one of the values {vmin ; 1}.
Proof of Lemma 6. It sufﬁces to show that the ends of the subinterval Δu = (t1u , t2u ) cannot be zeros of
the switching function Lv (t), which is an absolutely continuous function. Indeed, if such a fact holds,
that is the inequalities:
Lv (t1u ) = 0, Lv (t2u ) = 0
are true, then Lemma 6 immediately follows from the Theorem on the stability of the sign of a
continuous function [30]. Therefore, for deﬁniteness, we consider the right end t2u of the subinterval
Δu . Let us suppose the contrary. This means that the equality:
Lv (t2u ) = 0

(31)

is valid. Then, for the function G (t) the following two cases are possible.
Case 1. Let G (t2u ) = 0. The deﬁnition of the function G (t), Lemma 1 and the second formula
of (10) imply the relationship:
( β + δ)ψ2∗ (t2u ) = βψ3∗ (t2u ).
(32)

78

Math. Comput. Appl. 2018, 23, 45

If ψ2∗ (t2u ) = 0, then (32) yields ψ3∗ (t2u ) = 0. This fact leads to contradictory equality ψ∗ (t2u ) = 0,
as the proofs of Lemmas 3 and 4 show. If ψ2∗ (t2u ) = 0, then again the deﬁnition of the function G (t),
Lemma 1 and the ﬁrst formula of (10) imply Lu (t2u ) = 0. The absolutely continuity of the function Lu (t)
and the Theorem on the stability of the sign of a continuous function [30] lead to the existence of a left
neighborhood of the point t2u at which the switching function Lu (t) is sign-deﬁnite. This contradicts
the fact that such a left neighborhood of the point t2u belongs to the subinterval Δu , which is a singular
portion of the optimal control u∗ (t). Thus, Case 1 is impossible.
Case 2. Let G (t2u ) = 0. For deﬁniteness, we consider that the inequality:
G (t2u ) > 0

(33)

is true. As it was already noted, Lv (t) and G (t) are the absolutely continuous functions. In Lemma 4
it was established that the control v∗ (t) is constant on the subinterval Δu , that is v∗ (t) = v∗ .
Therefore, by (31), (33) and the Theorem on the stability of the sign of a continuous function [30],
there exists the interval ($t2u , t2u ) ⊂ Δu on which the inequality:
cu (t) G (t) + v∗ e(t) Lv (t) > 0

(34)

is valid. Let $t0u be the midpoint of this interval. We rewrite the ﬁrst differential equation from the
Cauchy problem (27) as
Lu (t) = ( au (t) + v∗ d(t)) Lu (t) + (cu (t) G (t) + v∗ e(t) Lv (t)).
Then, we integrate this equation on the interval ($t2u , t2u ) with the initial value Lu ($t0u ) = 0.
As a result, the following formula can be found:
Lu (t) =

t

t

es

( au (ξ )+v∗ d(ξ ))dξ

(cu (s) G (s) + v∗ e(s) Lv (s)) ds.

(35)

$tu
0

By (34) and (35), we obtain the positivity of the function Lu (t) for t > $t0u and the negativity of this
function for t < $t0u on the interval ($t2u , t2u ). This is again contradictory. Hence, Case 2 is also impossible.
Thus, our assumption was wrong, and the switching function Lv (t) does not vanish at the point
t2u . This completes the proof.
Furthermore, carrying out arguments similar to the arguments of Lemma 6, we can show that the
following lemma holds, which strengthens the result of Lemma 5.
Lemma 7. Let the subinterval Δv = (t1v , t2v ) ⊂ [0, T ], where t1v > 0, be a singular interval of the optimal
control v∗ (t). Then, there exists a number ε v > 0 such that on the interval (t1v − v , t2v + v ) the optimal control
u∗ (t) is constant and takes one of the values {umin ; 1}.
Remark 2. From Lemmas 4–7 we conclude that when a singular arc occurs for one of the optimal controls,
u∗ (t) or v∗ (t), System (1) becomes on the corresponding singular interval a system with one control, because
the other control is constant.
Next, in Sections 5 and 6, we separately study the existence of singular arcs of the optimal
controls u∗ (t) and v∗ (t), applying the approach from [21]. It consists in the sequential differentiation
on a singular interval of the corresponding switching function. We carry out this differentiation
if the derivative of even order does not have a nonzero term containing control. If such a term
appears in a second order derivative, then we say that a singular arc is of the order of one. If it
occurs in a derivative of the fourth order, then it is considered that the singular arc is of the order

79

Math. Comput. Appl. 2018, 23, 45

of two. Then, the corresponding optimality condition of a singular arc is checked. If it is satisﬁed,
we ﬁnd the formulas of the optimal control and the corresponding optimal solutions of System (1)
on a singular interval corresponding to such a singular arc. Also, the type of concatenation of this
singular arc with non-singular intervals is studied, where the considered optimal control is bang-bang.
Finally, we demonstrate a singular arc of the optimal control through the results of a numerical solution
of the minimization problem (5), presented in Section 7.
5. Investigation of a Singular Arc of the Optimal Control u* (t)
Let us study the existence of a singular arc of the optimal control u∗ (t). According to [22,29],
this means the existence of a subinterval Δu ⊂ [0, T ] on which the corresponding switching function
Lu (t) identically vanishes. By Lemma 4, everywhere on this subinterval the optimal control v∗ (t) is a
constant function taking one of the values {vmin ; 1}, that is,
v∗ (t) = v∗ ∈ {vmin ; 1},

t ∈ Δu .

(1)

Then, Formula (19) of the ﬁrst derivative Lu (t) of the switching function Lu (t) is rewritten in
the form:
(1)
Lu (t) = ψ∗ (t), [ f + v∗ h, g](z∗ (t)), t ∈ Δu .
(36)
Let us transform the right-hand side of this formula. To do this, we rewrite (23) and (25) as

[ f , g](z) = θ f ,g (z) p + χ f ,g (z)r, [h, g](z) = θh,g (z) p + ηh,g (z)q,
where

(37)

θ f ,g (z) = (σ − μl )k, χ f ,g (z) = γ1 (λ − μ)lk,
θh,g (z) = lm(( β + δ)l − δk), ηh,g (z) = γ1 lkm.

Then, using (37), we can write the Lie bracket [ f + v∗ h, g](z) as follows

[ f + v∗ h, g](z) = θu (z) p + ηu (z)q + χu (z)r,
where

(38)

θu (z) = θ f ,g (z) + v∗ θh,g (z) = (σ − μl )k + v∗ lm(( β + δ)l − δk ),
ηu (z) = v∗ ηh,g (z) = γ1 v∗ lkm,
χu (z) = χ f ,g (z) = γ1 (λ − μ)lk.

Substituting (38) into the right-hand side of (36), we obtain the relationship:
(1)

Lu (t) = θu (z∗ (t))ψ∗ (t), p + ηu (z∗ (t))ψ∗ (t), q + χu (z∗ (t))ψ∗ (t), r ,

t ∈ Δu .

(39)

(2)

Now, differentiating (36), we ﬁnd the formula for the second derivative Lu (t) of the switching
function Lu (t):
(2)
Lu (t) = ψ∗ (t), [ f + v∗ h, [ f + v∗ h, g]](z∗ (t))
(40)
+ u∗ (t)ψ∗ (t), [ g, [ f + v∗ h, g]](z∗ (t)), t ∈ Δu .
Let us transform the terms of this formula. First, we consider the second term and its factor

ψ∗ (t), [ g, [ f + v∗ h, g]](z∗ (t)).

(41)

By analogy with (16)–(18), we have equality:

[ g, [ f + v∗ h, g]](z) = D [ f + v∗ h, g](z) g(z) − Dg(z)[ f + v∗ h, g](z),

80

(42)

Math. Comput. Appl. 2018, 23, 45

where D [ f + v∗ h, g](z) is the Jacobi matrix of the vector function [ f + v∗ h, g](z). Using (38), we ﬁnd
the relationship:
D [ f + v∗ h, g](z) = D (θu (z) p) + D (ηu (z)q) + D (χu (z)r )

= p(∇θu (z)) + q(∇ηu (z)) + r (∇χu (z)) ,

(43)

where ∇θu (z), ∇ηu (z), ∇χu (z) are the column gradients of the functions θu (z), ηu (z), χu (z),
respectively. In addition, the representations:
Dg(z) = p(τg (z)) ,

Dh(z) = q(τh (z))

(44)

are valid, where the vector functions τg (z), τh (z) are deﬁned as
⎛ ⎞
k
⎜ ⎟
τg (z) = ⎝ l ⎠ ,
0

⎛ ⎞
m
⎜ ⎟
τh (z) = ⎝ 0 ⎠ .
l

We substitute (43) and the ﬁrst representation of (44) into (42). After the necessary transformations,
the following relationship can be obtained:


[ g, [ f + v∗ h, g]](z) = ∇θu (z), g(z) − [ f + v∗ h, g](z), τg (z) p

+∇ηu (z), g(z)q + ∇χu (z), g(z)r.
Substituting this expression into (41), we ﬁnd the formula:

ψ∗ (t), [ g,[ f + v∗ h, g]](z∗ (t))


= ∇θu (z∗ (t)), g(z∗ (t)) − [ f + v∗ h, g](z∗ (t)), τg (z∗ (t)) ψ∗ (t), p

(45)

+ ∇ηu (z∗ (t)), g(z∗ (t))ψ∗ (t), q + ∇χu (z∗ (t)), g(z∗ (t))ψ∗ (t), r .
In (39) the function χu (z∗ (t)) is positive on the interval [0, T ]. Therefore, let us express the scalar
product ψ∗ (t), r  through the remaining terms as follows
(1)

1
−1
ψ∗ (t), r  = χ−
u ( z∗ ( t )) Lu ( t ) − χu ( z∗ ( t )) θu ( z∗ ( t )) ψ∗ ( t ), p 
1
− χ−
u ( z∗ ( t )) ηu ( z∗ ( t )) ψ∗ ( t ), q ,

(46)

and then, we substitute this expression into (45). After the necessary transformations, the following
relationship ﬁnally can be obtained:
(1)

1
ψ∗ (t), [ g, [ f + v∗ h, g]](z∗ (t)) = χ−
u ( z∗ ( t ))∇ χu ( z∗ ( t )), g ( z∗ ( t )) Lu ( t )
"
+ χu−1 (z∗ (t)) χu (z∗ (t))∇θu (z∗ (t)) − θu (z∗ (t))∇χu (z∗ (t)), g(z∗ (t))
#
− χu (z∗ (t))[ f + v∗ h, g](z∗ (t)), τg (z∗ (t)) ψ∗ (t), p

(47)

1
+ χ−
u ( z∗ ( t )) χu ( z∗ ( t ))∇ ηu ( z∗ ( t )) − ηu ( z∗ ( t ))∇ χu ( z∗ ( t )), g ( z∗ ( t )) ψ∗ ( t ), q .

On the subinterval Δu the switching function Lu (t) vanishes identically, that is
Lu (t) = l∗ (t)k ∗ (t)ψ∗ (t), p = 0,

81

(48)

Math. Comput. Appl. 2018, 23, 45

(1)

and therefore its ﬁrst derivative Lu (t) is also zero everywhere on this subinterval:
(1)

Lu (t) = 0.

(49)

Then, Formula (47) is simpliﬁed and takes the following form:

ψ∗ (t), [ g, [ f + v∗ h, g]](z∗ (t))
1
= χ−
u ( z∗ ( t )) χu ( z∗ ( t ))∇ ηu ( z∗ ( t )) − ηu ( z∗ ( t ))∇ χu ( z∗ ( t )), g ( z∗ ( t )) ψ∗ ( t ), q .

(50)

Let us calculate the right-hand side of this formula. For this, we consider the expression
(χu (z)∇ηu (z) − ηu (z)∇χu (z)). Calculating the column gradients ∇ηu (z), ∇χu (z) of the corresponding
functions ηu (z), χu (z), the following equality can be found:
⎛
⎞
0
⎜
⎟
(51)
χu (z)∇ηu (z) − ηu (z)∇χu (z) = γ1 (λ − μ)v∗ ⎝ 0 ⎠ .
l 2 k2
Multiplying this expression scalarly by the vector function g(z) from (12), we conclude that the
scalar product
χu (z)∇ηu (z) − ηu (z)∇χu (z), g(z)
is zero. Consequently, (50) has the form:

ψ∗ (t), [ g, [ f + v∗ h, g]](z∗ (t)) = 0, t ∈ Δu .

(52)

Now, let us consider the ﬁrst term on the right-hand side of (40):

ψ∗ (t), [ f + v∗ h, [ f + v∗ h, g]](z∗ (t)).

(53)

By analogy with (42), we have the equality:

[ f + v∗ h, [ f + v∗ h, g]](z) = D [ f + v∗ h, g](z)( f + v∗ h)(z) − D ( f + v∗ h)(z)[ f + v∗ h, g](z).

(54)

Let us ﬁnd the Jacobi matrix D ( f + v∗ h)(z). The Jacobi matrix Dh(z) of the vector function h(z) is
given by the second formula of (44). The use of direct calculations allows us to ﬁnd the representation
of the Jacobi matrix D f (z) from (13) in the following form:
⎛

⎛
⎛
⎞
⎞
⎞
0
0
−μ
⎜
⎜
⎜
⎟
⎟
⎟
D f (z) = p ⎝
−γ2−1 λ
⎠ + q ⎝ 0 ⎠ + r ⎝−γ1 γ2−1 λ⎠ .
−1 −1
−
1
−
1
β ν
−γ2 β ( β + δ)ν
− β αν

(55)

Then, we obtain the required representation of the Jacobi matrix D ( f + v∗ h)(z) as
D ( f + v∗ h)(z) = p(τpu ) + q(τqu (z)) + r (τru ) ,
where

⎛
⎜
τpu = ⎝

⎞
⎞
⎞
⎛
⎛
0
v∗ m
−μ
⎟
⎟
⎟
⎜
⎜
u
u
−γ2−1 λ
0
⎠ , τq (z) = ⎝
⎠ , τr = ⎝−γ1 γ2−1 λ⎠ .
−γ2−1 β−1 ( β + δ)ν
− β−1 αν
β −1 ν + v ∗ l

82

(56)

Math. Comput. Appl. 2018, 23, 45

We substitute (43) and (56) into (54). After the necessary transformations, the following formula
can be found:


[ f + v∗ h, [ f + v∗ h, g]](z) = ∇θu (z), ( f + v∗ h)(z) − [ f + v∗ h, g](z), τpu  p


+ ∇ηu (z), ( f + v∗ h)(z) − [ f + v∗ h, g](z), τqu (z) q


+ ∇χu (z), ( f + v∗ h)(z) − [ f + v∗ h, g](z), τru  r.
Substituting this formula into (53), we obtain the expression:

ψ∗ (t), [ f + v∗ h, [ f + v∗ h, g]](z∗ (t))


= ∇θu (z∗ (t)), ( f + v∗ h)(z∗ (t)) − [ f + v∗ h, g](z∗ (t)), τpu  ψ∗ (t), p


+ ∇ηu (z∗ (t)), ( f + v∗ h)(z∗ (t)) − [ f + v∗ h, g](z∗ (t)), τqu (z∗ (t)) ψ∗ (t), q


+ ∇χu (z∗ (t)), ( f + v∗ h)(z∗ (t)) − [ f + v∗ h, g](z∗ (t)), τru  ψ∗ (t), r .

(57)

Finally, let us substitute (46) into (57). After the necessary transformations, we find the relationship:

ψ∗ (t), [ f + v∗ h, [ f + v∗ h, g]](z∗ (t))
#
"
(1)
u
1
= χ−
u ( z∗ ( t )) ∇ χu ( z∗ ( t )), ( f + v∗ h )( z∗ ( t )) − [ f + v∗ h, g ]( z∗ ( t )), τr  Lu ( t )
"
1
+ χ−
u ( z∗ ( t ))  χu ( z∗ ( t ))∇ θu ( z∗ ( t )) − θu ( z∗ ( t ))∇ χu ( z∗ ( t )), ( f + v∗ h )( z∗ ( t ))
#
− [ f + v∗ h, g](z∗ (t)), χu (z∗ (t))τpu − θu (z∗ (t))τru  ψ∗ (t), p
"
1
+ χ−
u ( z∗ ( t ))  χu ( z∗ ( t ))∇ ηu ( z∗ ( t )) − ηu ( z∗ ( t ))∇ χu ( z∗ ( t )), ( f + v∗ h )( z∗ ( t ))
#
− [ f + v∗ h, g](z∗ (t)), χu (z∗ (t))τqu (z∗ (t)) − ηu (z∗ (t))τru  ψ∗ (t), q.

(58)

On the subinterval Δu Equalities (48) and (49) are valid. Then, Formula (58) is simpliﬁed and
takes the following form:

ψ∗ (t), [ f + v∗ h, [ f + v∗ h, g]](z∗ (t))
"
= χu−1 (z∗ (t)) χu (z∗ (t))∇ηu (z∗ (t)) − ηu (z∗ (t))∇χu (z∗ (t)), ( f + v∗ h)(z∗ (t))
#
− [ f + v∗ h, g](z∗ (t)), χu (z∗ (t))τqu (z∗ (t)) − ηu (z∗ (t))τru  ψ∗ (t), q.

(59)

Let us calculate the right-hand side of this formula. The expression (χu (z)∇ηu (z) − ηu (z)∇χu (z))
is given by (51). Multiplying this expression scalarly by the vector function ( f + v∗ h)(z), deﬁned by the
vector functions f (z) and h(z) from (12), we obtain the following formula for the ﬁrst term in braces:

χu (z)∇ηu (z) − ηu (z)∇χu (z), ( f + v∗ h)(z)
= γ12 (λ − μ)v∗ l 2 k2 (ρ − νm − βv∗ lm).
For the second term in braces, we ﬁrst ﬁnd the relationship:
⎛
⎜
χu (z)τqu (z) − ηu (z)τru = γ1 lk ⎝

⎞
λv∗ m
⎟
γ1 γ2−1 λv∗ m
⎠,
−
1
−
1
β (λ − μ)ν + (λ − μ)v∗ l + β ανv∗ m

83

(60)

Math. Comput. Appl. 2018, 23, 45

and then, by (38), obtain the representation:


⎞
γ1 (σ − μl )k + v∗ (( β + δ)l − δk)lm + γ1 (λ − μ)lk − γ1 δv∗ lkm
⎟
⎜


⎟.
[ f + v∗ h, g](z) = ⎜
γ2 (σ − μl )k + v∗ (( β + δ)l − δk)lm + γ1 ( β + δ)v∗ lkm
⎠
⎝
⎛

−γ1 βv∗ lkm
Multiplying the last two expressions scalarly and taking into account (60), we have the following
expression for the relationship in braces of (59):


− γ12 v∗ l 2 k2 α(λ − ν)v∗ m2 + λ(λ − μ)m − ρ(λ − μ) .

(61)

Let us deﬁne the quadratic function:
w2 ( m ) = α ( λ − ν ) v ∗ m 2 + λ ( λ − μ ) m − ρ ( λ − μ ) .
We use this function, when substitute (61) together with the formula of the function χu (z) into (59).
After the necessary transformations, this formula is written as follows

ψ∗ (t), [ f + v∗ h, [ f + v∗ h, g]](z∗ (t))
= −γ1 (λ − μ)−1 v∗ l∗ (t)k ∗ (t)w2 (m∗ (t))ψ∗ (t), q, t ∈ Δu .

(62)

Finally, let us substitute (52) and (62) into (40). As a result, we have the formula of the second
(2)

derivative Lu (t) of the switching function Lu (t):
(2)

Lu (t) = −γ1 (λ − μ)−1 v∗ l∗ (t)k ∗ (t)w2 (m∗ (t))ψ∗ (t), q,

t ∈ Δu .

(63)
(1)

On the subinterval Δu not only the switching function Lu (t) itself and its ﬁrst derivative Lu (t)
(2)
L u ( t ).

vanish, but also the second derivative
By Lemma 1, the linear independence of the vectors p, q,
r and the non-triviality of the adjoint function ψ∗ (t), the relationship:
(2)

Lu (t) = 0,

t ∈ Δu

implies equality:
w2 (m∗ (t)) = 0,

t ∈ Δu .

(64)

By Assumption 1, the discriminant of the quadratic function w2 (m) is positive, and w2 (0) < 0,
and therefore, it has a unique positive root msing , deﬁned by the formula:
msing =

−(λ − μ)λ +

%

(λ − μ)2 λ2 + 4αρv∗ (λ − μ)(λ − ν)
.
2α(λ − ν)v∗

This root is the value of the solution m∗ (t) on the subinterval Δu . We note the important properties
of the value msing :


(65)
msing ∈ 0, ρν−1 , w2 (msing ) > 0.
(2)

Analyzing (63), we see that on the subinterval Δu the second derivative Lu (t) of the switching
function Lu (t) does not contain the control u∗ (t). It means that the order of the singular arc is

84

Math. Comput. Appl. 2018, 23, 45

greater than one [22,29]. Therefore, we continue to differentiate the switching function Lu (t) on this
(3)

subinterval, and using (63) ﬁnd its third derivative Lu (t):
"
(3)
Lu (t) = − γ1 (λ − μ)−1 v∗ l∗ (t)k ∗ (t)w2 (m∗ (t))m∗ (t)ψ∗ (t), q

#
.
+ w2 (m∗ (t)) l∗ (t)k ∗ (t)ψ∗ (t), q

(66)

On the subinterval Δu Equality (64) is valid, and therefore the second term in braces of (66)
is zero. Substituting the formula for m∗ (t) from System (1) into the ﬁrst term of (66), we ﬁnd the
required formula:
(3)

Lu (t) = − γ1 (λ − μ)−1 v∗ l∗ (t)k ∗ (t)w2 (msing )


× ρ − νmsing − βv∗ l∗ (t)msing ψ∗ (t), q,

(67)

t ∈ Δu .

(3)

On the subinterval Δu the third derivative Lu (t) is also zero that leads to the equality:
m∗ (t) = 0.

(68)

It allows us to ﬁnd a value lsing that is the value of the solution l∗ (t) on this subinterval:
lsing =

ρ − νmsing
.
βv∗ msing

(69)

We note that due to the inclusion of (65), the value lsing is positive.

(4)

Finally, on the subinterval Δu let us calculate the fourth derivative Lu (t) of the switching function
Lu (t) using (66). Some of the terms that are obtained with such a differentiation vanish by virtue of (64)
and (68). As a result, the following relationship can be obtained:
(4)

Lu (t) = γ1 (λ − μ)−1 βv2∗ lsing k ∗ (t)msing w2 (msing )


× σ − μlsing − δv∗ lsing msing − γ1 u∗ (t)lsing k ∗ (t) ψ∗ (t), q,

t ∈ Δu ,

(70)

which implies the expression:
∂ (4)
2
k2∗ (t)msing w2 (msing )ψ∗ (t), q
Lu (t) = −γ12 (λ − μ)−1 βv2∗ lsing
∂u
= −γ12 (λ − μ)−1 βv2∗ lsing k2∗ (t)w2 (msing ) Lv (t), t ∈ Δu .

(71)

Here we applied the second formula of (22). It is easy to see that this expression is sign-deﬁnite
everywhere on the subinterval Δu . Therefore, ﬁrstly, the order of the singular arc equals two.
Secondly, the necessary optimality condition of the singular arc, the Kelly-Cope-Moyer condition [29],
is either carried out in a strengthened form, and then the singular arc exists, or it is not satisﬁed,
and then the singular arc does not exist. By [29] and (71), the strengthened Kelly-Cope-Moyer condition
leads to the inequality:
γ12 (λ − μ)−1 βv2∗ lsing k2∗ (t)w2 (msing ) Lv (t) > 0,

t ∈ Δu .

(72)

By Assumption 1, Lemma 1, and the inequality of (65), Relationship (72) implies the inequality
Lv (t) > 0, which in turn, by Formula (9), implies v∗ = 1 everywhere on the subinterval Δu .

85

Math. Comput. Appl. 2018, 23, 45

Remark 3. On the subinterval Δu ⊂ [0, T ], which is the singular interval of the optimal control u∗ (t),
the optimal control v∗ (t) is constant and takes the value 1. This leads to the corresponding correction of the
formulations of Lemmas 4 and 6.
(4)

Next, Formula (70) and the vanishing of the fourth derivative Lu (t) of the switching function
Lu (t) yield the following relationship for the control using (t) and function ksing (t):
using (t)ksing (t) =

σ − μlsing − δlsing msing
,
γ1 lsing

(73)

which are the control u∗ (t) and solution k ∗ (t) on the subinterval Δu . Formula (69) allows us to
rewrite (73) as follows
w4 (msing )
, t ∈ Δu .
(74)
using (t)ksing (t) =
γ1 lsing
Here w4 (m) is the quadratic function given by the formula:
w4 (m) = δνm2 + (σβ + νμ − δρ)m − μρ.
&
'
By the inclusion of (65), we consider this function on the interval 0, ρν−1 . The relationships:
w4 (0) = −μρ < 0,



w4 ρν−1 = ρν−1 σβ > 0



lead to the conclusion that the function w4 (m) has exactly one zero m ∈ 0, ρν−1 . In turn, this fact
implies the validity of the formula:
⎧
⎪
⎨ <0
w4 ( m )
=0
⎪
⎩ >0

, if 0 ≤ m < m ,
, if m = m ,
, if m < m ≤ ρν−1 .

We apply this formula in analysis of (74). Positivity of the product on its left-hand side and the
inclusion of (65) imply the validity of the inclusion:


msing ∈ m , ρν−1 ,
which is a necessary condition for the existence of the singular arc.
Finally, let us discuss the behavior of the optimal control u∗ (t) over the entire interval [0, T ].
When the inclusion using (t) ∈ [umin , 1] holds for all t ∈ Δu , the control using (t) is admissible. Corollary 1
shows that the singular arc of the optimal control u∗ (t) is concatenated with the nonsingular interval,
where this control is bang-bang. Let ξ ∈ (0, T ) be the time moment, where such a concatenation occurs.
Then, as it follows from [22,29], when using (t) ∈ (umin , 1) for all t ∈ Δu , the nonsingular interval
contains at least the countable number of switchings of the control u∗ (t), accumulating to the point
ξ. This behavior of the optimal control u∗ (t) on nonsingular intervals is called a chattering [22,29],
and will be observed on both sides of the subinterval Δu .
Thus, the above arguments of this section lead us to the validity of the following proposition.
Proposition 1. The optimal control u∗ (t) on a singular interval can contain a singular arc of order two,
which concatenates with bang-bang intervals of this control using chattering. On such an interval the optimal
control v∗ (t) is constant and takes the value 1.

86

Math. Comput. Appl. 2018, 23, 45

6. Investigation of a Singular Arc of the Optimal Control v∗ (t )
Now, let us carry out arguments similar to those presented in the previous section to study the
existence of a singular arc for the optimal control v∗ (t). According to [22,29], this means the existence
of a subinterval Δv ⊂ [0, T ] on which the corresponding switching function Lv (t) identically vanishes.
By Lemma 5, everywhere on this subinterval the optimal control u∗ (t) is a constant function that takes
one of the values {umin ; 1}, that is,
u∗ (t) = u∗ ∈ {umin ; 1},

t ∈ Δv .

(1)

Then, Formula (20) for the ﬁrst derivative Lv (t) of the switching function Lv (t) is rewritten in
the form:
(1)
(75)
Lv (t) = ψ∗ (t), [ f + u∗ g, h](z∗ (t)), t ∈ Δv .
Let us transform the right-hand side of this formula. To do this, we rewrite (24) and (25) as

[ f , h](z) = θ f ,h (z) p + η f ,h (z)q + χ f ,h (z)r, [ g, h](z) = θ g,h (z) p + ηg,h (z)q,
where

(76)

θ f ,h (z) = γ2−1 ( β + δ)(λ − ν)lm, η f ,h (z) = ρl + σm − μlm, χ f ,h (z) = lm,
θ g,h (z) = −θh,g (z) = −lm(( β + δ)l − δk), ηg,h (z) = −ηh,g (z) = −γ1 lkm.

Then, using (76), we can write the Lie bracket [ f + u∗ g, h](z) as follows

[ f + u∗ g, h](z) = θv (z) p + ηv (z)q + χv (z)r,
where

(77)

θv (z) = θ f ,h (z) + u∗ θ g,h (z) = lm(γ2−1 ( β + δ)(λ − ν) − u∗ (( β + δ)l − δk)),
ηv (z) = η f ,h (z) + u∗ ηg,h (z) = ρl + σm − μlm − γ1 u∗ lkm,
χv (z) = χ f ,h (z) = lm.

Substituting (77) into the right-hand side of (75), we obtain the relationship:
(1)

Lv (t) = θv (z∗ (t))ψ∗ (t), p + ηv (z∗ (t))ψ∗ (t), q + χv (z∗ (t))ψ∗ (t), r ,

t ∈ Δv .

(78)

(2)

Now, differentiating (75), we ﬁnd the formula for the second derivative Lv (t) of the switching
function Lv (t):
(2)
Lv (t) = ψ∗ (t), [ f + u∗ g, [ f + u∗ g, h]](z∗ (t))
(79)
+ v∗ (t)ψ∗ (t), [h, [ f + u∗ g, h]](z∗ (t)), t ∈ Δv .
Let us transform the terms of this formula. First, we consider the second term and its factor

ψ∗ (t), [h, [ f + u∗ g, h]](z∗ (t)).

(80)

By analogy with (16)–(18), we have equality:

[h, [ f + u∗ g, h]](z) = D [ f + u∗ g, h](z)h(z) − Dh(z)[ f + u∗ g, h](z),

(81)

where D [ f + u∗ g, h](z) is the Jacobi matrix of the vector function [ f + u∗ g, h](z). Using (77), we ﬁnd
the relationship:
D [ f + u∗ g, h](z) = D (θv (z) p) + D (ηv (z)q) + D (χv (z)r )

= p(∇θv (z)) + q(∇ηv (z)) + r (∇χv (z)) ,

87

(82)

Math. Comput. Appl. 2018, 23, 45

where ∇θv (z), ∇ηv (z), ∇χv (z) are the column gradients of the functions θv (z), ηv (z), χv (z),
respectively. We substitute expression (82) and the second representation of (44) into (81). After the
necessary transformations, the following relationship can be obtained:

[h, [ f + u∗ g, h]](z) =∇θv (z), h(z) p


+ ∇ηv (z), h(z) − [ f + u∗ g, h](z), τh (z) q + ∇χv (z), h(z)r.

Substituting this expression into (80), we ﬁnd the formula:

ψ∗ (t), [h, [ f + u∗ g, h]](z∗ (t)) = ∇θv (z∗ (t)), h(z∗ (t))ψ∗ (t), p


+ ∇ηv (z∗ (t)), h(z∗ (t)) − [ f + u∗ g, h](z∗ (t)), τh (z∗ (t)) ψ∗ (t), q

(83)

+ ∇χv (z∗ (t)), h(z∗ (t))ψ∗ (t), r .
In (78), the function χv (z∗ (t)) is positive on the interval [0, T ]. Therefore, let us express the scalar
product ψ∗ (t), r  through the remaining terms as follows
(1)

1
−1
ψ∗ (t), r  = χ−
v ( z∗ ( t )) Lv ( t ) − χv ( z∗ ( t )) θv ( z∗ ( t )) ψ∗ ( t ), p 

− χv−1 (z∗ (t))ηv (z∗ (t))ψ∗ (t), q,

(84)

and then, we substitute this expression into (83). After the necessary transformations, the following
relationship ﬁnally can be obtained:
(1)

1
ψ∗ (t), [h, [ f + u∗ g, h]](z∗ (t)) = χ−
v ( z∗ ( t ))∇ χv ( z∗ ( t )), h ( z∗ ( t )) Lv ( t )
1
+ χ−
v ( z∗ ( t )) χv ( z∗ ( t ))∇ θv ( z∗ ( t )) − θv ( z∗ ( t ))∇ χv ( z∗ ( t )), h ( z∗ ( t )) ψ∗ ( t ), p 

"
1
+ χ−
v ( z∗ ( t ))  χv ( z∗ ( t ))∇ ηv ( z∗ ( t )) − ηv ( z∗ ( t ))∇ χv ( z∗ ( t )), h ( z∗ ( t ))
#
− χv (z∗ (t))[ f + u∗ g, h](z∗ (t)), τh (z∗ (t)) ψ∗ (t), q.

(85)

On the subinterval Δv the switching function Lv (t) vanishes identically, that is
Lv (t) = l∗ (t)m∗ (t)ψ∗ (t), q = 0,

(86)

(1)

and therefore its ﬁrst derivative Lv (t) is also zero everywhere on this subinterval:
(1)

Lv (t) = 0.

(87)

Then, Formula (85) is simpliﬁed and takes the following form:

ψ∗ (t), [h, [ f + u∗ g, h]](z∗ (t))
1
= χ−
v ( z∗ ( t )) χv ( z∗ ( t ))∇ θv ( z∗ ( t )) − θv ( z∗ ( t ))∇ χv ( z∗ ( t )), h ( z∗ ( t )) ψ∗ ( t ), p .

(88)

Let us calculate the right-hand side of this formula. For this, we consider the expression
(χv (z)∇θv (z) − θv (z)∇χv (z)). Calculating the column gradients ∇θv (z), ∇χv (z) of the corresponding
functions θv (z), χv (z), the following equality can be found:
⎞
⎛
−( β + δ)l 2 m2
⎟
⎜
χv (z)∇θv (z) − θv (z)∇χv (z) = u∗ ⎝
(89)
δl 2 m2
⎠.
0

88

Math. Comput. Appl. 2018, 23, 45

Multiplying this expression scalarly by the vector function h(z) from (12), we conclude that the
following relationship holds:

χv (z)∇θv (z) − θv (z)∇χv (z), h(z) = 2 δ( β + δ)u∗ l 3 m3 .
Substituting this relationship together with the formula of the function χv (z) into (88), we see
that it has the form:

ψ∗ (t), [h, [ f + u∗ g, h]](z∗ (t)) = 2δ( β + δ)u∗ l∗2 (t)m∗ (t)2 ψ∗ (t), p, t ∈ Δv .

(90)

Now, let us consider the ﬁrst term on the right-hand side of (79):

ψ∗ (t), [ f + u∗ g, [ f + u∗ g, h]](z∗ (t)).

(91)

By analogy with (81), we have the equality:

[ f + u∗ g, [ f + u∗ g, h]](z) = D [ f + u∗ g, h](z)( f + u∗ g)(z) − D ( f + u∗ g)(z)[ f + u∗ g, h](z).

(92)

Let us ﬁnd the Jacobi matrix D ( f + u∗ g)(z). The Jacobi matrices D f (z) and Dg(z) of the
corresponding vector functions f (z) and g(z) from (12) are given by the representation (55) and
the ﬁrst formula of (44). Then, the required representation can be written as
D ( f + u∗ g)(z) = p(τpv (z)) + q(τqv ) + r (τrv ) ,
where

(93)

⎞
⎞
⎞
⎛
⎛
u∗ k
0
−μ
⎟
⎟
⎟
⎜
⎜
⎜
τpv (z) = ⎝ −γ2−1 λ + u∗ l ⎠ , τqv = ⎝ 0 ⎠ , τrv = τru = ⎝−γ1 γ2−1 λ⎠ .
−γ2−1 β−1 ( β + δ)ν
− β−1 αν
β −1 ν
⎛

We substitute (82) and (93) into (92). After the necessary transformations, the following formula
can be found:


[ f + u∗ g, [ f + u∗ g, h]](z) = ∇θv (z), ( f + u∗ g)(z) − [ f + u∗ g, h](z), τpv (z) p


+ ∇ηv (z), ( f + u∗ g)(z) − [ f + u∗ g, h](z), τqv  q


+ ∇χv (z), ( f + u∗ g)(z) − [ f + u∗ g, h](z), τrv  r.
Substituting this formula into (91), we obtain the expression:

ψ∗ (t), [ f + u∗ g, [ f + u∗ g, h]](z∗ (t))


= ∇θv (z∗ (t)), ( f + u∗ g)(z∗ (t)) − [ f + u∗ g, h](z∗ (t)), τpv (z∗ (t)) ψ∗ (t), p


+ ∇ηv (z∗ (t)), ( f + u∗ g)(z∗ (t)) − [ f + u∗ g, h](z∗ (t)), τqv  ψ∗ (t), q


+ ∇χv (z∗ (t)), ( f + u∗ g)(z∗ (t)) − [ f + u∗ g, h](z∗ (t)), τrv  ψ∗ (t), r .

89

(94)

Math. Comput. Appl. 2018, 23, 45

Now, let us substitute (84) into (94). After the necessary transformations, we have the relationship:

ψ∗ (t), [ f + u∗ g, [ f + u∗ g, h]](z∗ (t))
"
#
(1)
1
v
= χ−
v ( z∗ ( t )) ∇ χv ( z∗ ( t )), ( f + u∗ g )( z∗ ( t )) − [ f + u∗ g, h ]( z∗ ( t )), τr  Lv ( t )
"
1
+ χ−
v ( z∗ ( t ))  χv ( z∗ ( t ))∇ θv ( z∗ ( t )) − θv ( z∗ ( t ))∇ χv ( z∗ ( t )), ( f + u∗ g )( z∗ ( t ))
#
− [ f + u∗ g, h](z∗ (t)), χv (z∗ (t))τpv (z∗ (t)) − θv (z∗ (t))τrv  ψ∗ (t), p
"
1
+ χ−
v ( z∗ ( t ))  χv ( z∗ ( t ))∇ ηv ( z∗ ( t )) − ηv ( z∗ ( t ))∇ χv ( z∗ ( t )), ( f + u∗ g )( z∗ ( t ))
#
− [ f + u∗ g, h](z∗ (t)), χv (z∗ (t))τqv − ηv (z∗ (t))τrv  ψ∗ (t), q.

(95)

On the subinterval Δv equalities (86) and (87) are valid. Then, formula (95) is simpliﬁed and takes
the following form:

ψ∗ (t), [ f + u∗ g, [ f + u∗ g, h]](z∗ (t))
"
1
= χ−
v ( z∗ ( t ))  χv ( z∗ ( t ))∇ θv ( z∗ ( t )) − θv ( z∗ ( t ))∇ χv ( z∗ ( t )), ( f + u∗ g )( z∗ ( t ))
#
− [ f + u∗ g, h](z∗ (t)), χv (z∗ (t))τpv (z∗ (t)) − θv (z∗ (t))τrv  ψ∗ (t), p.

(96)

Let us calculate the right-hand side of this formula. The expression (χv (z)∇θv (z) − θv (z)∇χv (z))
is given by (89). Multiplying this expression scalarly by the vector function ( f + u∗ g)(z), deﬁned by the
vector functions f (z) and g(z) from (12), we obtain the following formula for the ﬁrst term in braces:

χv (z)∇θv (z) − θv (z)∇χv (z), ( f + u∗ g)(z)
= − u∗ l 2 m2 (( β + δ)(σ − μl − γ1 u∗ lk) + δk(λ − γ2 u∗ l )).

(97)

Now, substituting (77) into the second term in braces, we ﬁnd the expression:

[ f + u∗ g, h](z), χv (z)τpv (z) − θv (z)τrv 
= θv (z)χv (z)τpv (z), p + ηv (z)χv (z)τpv (z), q + χ2v (z)τpv (z), r 
− θv2 (z)τrv ,

(98)

p − θv (z)ηv (z)τrv , q − θv (z)χv (z)τrv , r .

Using the formulas of the vectors p, q, r, τrv , the vector function τpv (z) and the functions θv (z),
ηv (z), χv (z), we calculate all the terms of (98). As a result, the following expression can be obtained:

[ f + u∗ g, h](z), χv (z)τpv (z) − θv (z)τrv 
"

2
= l 2 m2 γ1 γ2−2 (λ − μ) ( β + δ)(λ − ν) − γ2 u∗ (( β + δ)l − δk)
− γ2−1 ((λ − μ) − u∗ (γ2 l − γ1 k))


× ( β + δ)(λ − ν) − γ2 u∗ (( β + δ)l − δk) +

2

(99)

#
u∗ k .

We substitute (97) and (99) into (96). After the necessary transformations in this formula and the
substitution of the quadratic function Φ(l, k) deﬁned by the relationship:

2
Φ(l, k ) = γ1 γ2−2 (λ − μ) ( β + δ)(λ − ν) − γ2 u∗ (( β + δ)l − δk)


− γ2−1 ((λ − μ) − u∗ (γ2 l − γ1 k)) ( β + δ)(λ − ν) − γ2 u∗ (( β + δ)l − δk)


+ u∗ ( β + δ)σ − (( β + δ)μl − ( + δλ)k) − u∗ (γ1 ( β + δ) + γ2 δ)lk ,

90

Math. Comput. Appl. 2018, 23, 45

as well as the formula of the function χv (z), we have for (96) the following expression:

ψ∗ (t), [ f + u∗ g, [ f + u∗ g, h]](z∗ (t)) = −
(2)

−1

l∗ (t)m∗ (t)Φ(l∗ (t), k ∗ (t))ψ∗ (t), p.

(100)

Now, substituting (90) and (100) into (79), we ﬁnally ﬁnd the formula for the second derivative

Lv (t) of the switching function Lv (t) as

(2)
Lv ( t ) = l∗ ( t ) m∗ ( t ) −

−1

Φ(l∗ (t), k ∗ (t))

+ 2δ( β + δ)u∗ v∗ (t)l∗ (t)m∗ (t) ψ∗ (t), p,

t ∈ Δv .

(101)

This formula implies the relationship:
∂ (2)
Lv (t) = 2δ( β + δ)u∗ l∗2 (t)m2∗ (t)ψ∗ (t), p
∂v
1
2
= 2δ( β + δ)u∗ l∗ (t)k−
∗ ( t ) m ∗ ( t ) L u ( t ),

t ∈ Δv .

(102)

Here we applied the ﬁrst formula of (22). It is easy to see that this expression is sign-deﬁnite
everywhere on the subinterval Δv . Therefore, ﬁrstly, the order of the singular arc equals one.
Secondly, the necessary optimality condition of the singular arc, the Kelly condition [29], is either
carried out in a strengthened form, and then the singular arc exists, or it is not satisﬁed, and then the
singular arc does not exist. By [29] and (102), the strengthened Kelly condition leads to the inequality:
1
2
2δ( β + δ)u∗ l∗ (t)k−
∗ ( t ) m∗ ( t ) Lu ( t ) > 0,

t ∈ Δv .

(103)

By Lemma 1, Relationship (103) implies the inequality Lu (t) > 0, which in turn, by Formula (8),
implies u∗ = 1 everywhere on the subinterval Δv .
Remark 4. On the subinterval Δv ⊂ [0, T ], which is the singular interval of the optimal control v∗ (t),
the optimal control u∗ (t) is constant and takes the value 1. This leads to the corresponding correction of the
formulations of Lemmas 5 and 7.
(2)

Next, Formula (101) and the vanishing of the second derivative Lv (t) of the switching function
Lv (t) yield the following relationship for the control vsing (t):
vsing (t) =

Φ(lsing (t), ksing (t))
,
2 δ( β + δ)lsing (t)msing (t)

which is the control v∗ (t) on the subinterval Δv . Here the functions lsing (t), ksing (t), msing (t) are the
corresponding solutions l∗ (t), k ∗ (t), m∗ (t) on this subinterval. When the inclusion vsing (t) ∈ [vmin , 1]
holds for all t ∈ Δv , the control vsing (t) is admissible. Corollary 1 shows that the singular arc of the
optimal control v∗ (t) is concatenated with the nonsingular interval, where this control is bang-bang.
Let ξ ∈ (0, T ) be the time moment, where such a concatenation occurs. Then, as it follows from [22,29],
when vsing (t) ∈ (vmin , 1) for all t ∈ Δv , such concatenations are allowed and will be observed on both
sides of the subinterval Δv .
Thus, the above arguments of this section lead us to the validity of the following proposition.
Proposition 2. The optimal control v∗ (t) on a singular interval can contain a singular arc of order one,
which concatenates with bang-bang intervals of this control. On such an interval the optimal control u∗ (t) is
constant and takes the value 1.

91

Math. Comput. Appl. 2018, 23, 45

7. Numerical Results
Here we demonstrate the results of a numerical solution of the minimization problem (5).
For numerical calculations the following values of the parameters of System (1), the initial values (2)
and the control constraints (3) taken from [17,26] were used:
σ = 15.0
λ ∈ {0.3; 1.2}
γ1 = 0.8
l0 = 100.0

ρ = 3.6
μ = 0.01
γ2 = 0.05
k0 = 40.0

β = 0.4
ν = 0.02
umin = 0.3
m0 = 50.0

δ = 0.005
T = 100.0
vmin = 0.3

(104)

















W WLPH





P 'HQGULWLFFHOOV



N .HUDWLQRF\WHV

















W WLPH




























W WLPH





Y 0HGLFDWLRQGRVDJH



X 0HGLFDWLRQGRVDJH

O 7íO\PSKRF\WHV

These numerical calculations were conducted using “BOCOP–2.0.5” [31]. It is an optimal control
interface, implemented in MATLAB, for solving optimal control problems with general path and
boundary constraints, and free or ﬁxed ﬁnal time. By a time discretization, such problems are
approximated by ﬁnite-dimensional optimization problems, which are then solved by well-known
software IPOPT, using sparse exact derivatives computed by ADOL-C. IPOPT is an open-source
software package for large-scale nonlinear optimization.
Considering the time interval of 100 days (T = 100.0), a time grid with 8000 nodes was created,
i.e., for t ∈ [0, 100.0] we get t = 0.0125. Since our problem is solved by a direct method and,
consequently, using an iterative approach, we impose at each step the acceptable convergence tolerance
of ε rel = 10−15 . Moreover, we use the sixth-order Lobatto III C discretization rule. In this respect,
for more details we refer to [31].
The corresponding results of the numerical calculations are presented in Figures 1 and 2. In each
ﬁgure for a speciﬁc value of λ we give the graphs of the optimal controls u∗ (t), v∗ (t), the corresponding
optimal solutions l∗ (t), k ∗ (t), and m∗ (t); J∗ is the minimum value of the functional J (u, v) of (5).







W WLPH





















W WLPH





Figure 1. Optimal solutions and optimal controls for λ = 0.3: (upper row) l∗ (t), k ∗ (t), m∗ (t);
(lower row) u∗ (t), v∗ (t); J∗ = 10.48323.

92



Math. Comput. Appl. 2018, 23, 45















W WLPH







P 'HQGULWLFFHOOV



N .HUDWLQRF\WHV

O 7íO\PSKRF\WHV
































W WLPH







Y 0HGLFDWLRQGRVDJH

X 0HGLFDWLRQGRVDJH














W WLPH









W WLPH





















W WLPH





Figure 2. Optimal solutions and optimal controls for λ = 1.2: (upper row) l∗ (t), k ∗ (t), m∗ (t);
(lower row) u∗ (t), v∗ (t); J∗ = 2.643956.

It is important to note that the controls u(t) and v(t) are auxiliary. They are introduced into
System (1) to simplify analytical analysis. The corresponding actual controls u$(t) and v$(t) in the same
system are related to the controls u(t) and v(t) by the formulas:
u$(t) = 1 − u(t),

v$(t) = 1 − v(t).

(105)

Therefore, where the auxiliary optimal control u∗ (t) has a maximum value of 1, the appropriate
actual optimal control u$∗ (t) takes a minimum value of 0, and vice versa. Similar remark is
also valid for the auxiliary optimal control v∗ (t) and the appropriate actual optimal control v$∗ (t).
Moreover, the controls u$∗ (t) and v$∗ (t) are the optimal strategies of psoriasis treatment.
The conducted numerical calculations show the performance of software “BOCOP–2.0.5” in the
study of such a complex (from computational point of view) phenomenon as chattering of the optimal
control u∗ (t). We note that the corresponding actual optimal control u$∗ (t) also has such behavior.
This type of psoriasis treatment does not make sense. However, there is no reason for concern because
there are approaches for chattering approximation presented, for example, in [21,32–34].
Taking into account Formula (105) related to the actual optimal controls u$∗ (t) and v$∗ (t) and
the optimal controls u∗ (t) and v∗ (t) corresponding to them, and after analyzing the graphs of these
controls (see Figures 1 and 2), we conclude that the medication intake schedule during 100 days of
psoriasis treatment is as follows.
At small values of λ (for example, λ = 0.3), for most of the entire treatment period (95 days),
a drug, which suppresses the interaction between T-lymphocytes and keratinocytes must be taken at
the maximum dosage. In this case, a drug suppressing the interaction between T-lymphocytes and
dendritic cells, must be taken at the minimum dosage. Then, on the 96th day, the medication schedule
changes to the opposite one and for the next three days it looks like this: a medication suppressing
the interaction between T-lymphocytes and keratinocytes is taken at the minimum dosage and a drug

93

Math. Comput. Appl. 2018, 23, 45



















W WLPH



P 'HQGULWLFFHOOV



N .HUDWLQRF\WHV
































W WLPH



Y 0HGLFDWLRQGRVDJH















W WLPH



X 0HGLFDWLRQGRVDJH

O 7íO\PSKRF\WHV

that suppresses the interaction between T-lymphocytes and dendritic cells is, on the contrary, taken at
the maximum dosage. Finally, on the 99th day, the schedule of taking a drug, which suppresses the
interaction between T-lymphocytes and keratinocytes, is again reversed. It is taken at the maximum
dosage until the end of the treatment period. The schedule of taking a drug, which suppresses
the interaction between T-lymphocytes and dendritic cells, does not change. It is still taken at the
maximum dosage.
With the increase of the value of λ (for example, λ = 1.2), the actual optimal control u$∗ (t)
responsible for taking a drug that suppresses the interaction between T-lymphocytes and keratinocytes
during most of the entire treatment period (95 days) has an interval corresponding to a smooth
increase in the dosage of the used medication (singular arc). At the beginning and at the end of
such an interval of psoriasis treatment there are the periods with increasing number of switchings
from the lower intensity to the greatest intensity and vice versa (chattering). In addition, the whole
process of this treatment ends with the interval of the greatest intensity (maximum dosage of the
medication intake). Moreover, the schedule of taking a drug that suppresses the interaction between
T-lymphocytes and dendritic cells does not qualitatively change. Almost during the entire period of
psoriasis treatment (98 days), it is taken at the minimum dosage. Then, on the 99th day of the treatment
period, the schedule for taking such a drug changes to the opposite. During the remaining two days it
is taken at the maximum dosage.
Next, it was found that with the decrease or increase of the length of psoriasis treatment
(for example, 10 days or 190 days), the above schedule of the drugs intake does not qualitatively
change. It should be noted only that with the reduction in the duration of this period, the ﬁrst change
in the schedule of taking medications begins to occur earlier (see Figures 3 and 4 for 10 days), and with
an increase in the duration of such a period, on the contrary, later (for example, 190 days).







W WLPH





















W WLPH





Figure 3. Optimal solutions and optimal controls for λ = 0.3: (upper row) l∗ (t), k ∗ (t), m∗ (t);
(lower row) u∗ (t), v∗ (t); J∗ = 14.09275.

94





















W WLPH





P 'HQGULWLFFHOOV



N .HUDWLQRF\WHV

O 7íO\PSKRF\WHV

Math. Comput. Appl. 2018, 23, 45















W WLPH

























W WLPH







Y 0HGLFDWLRQGRVDJH

X 0HGLFDWLRQGRVDJH













W WLPH





















W WLPH





Figure 4. Optimal solutions and optimal controls for λ = 1.2: (upper row) l∗ (t), k ∗ (t), m∗ (t);
(lower row) u∗ (t), v∗ (t); J∗ = 2.644754.

From the comparison of the schedule of the medication intake for 100 days psoriasis treatment,
one can conclude that a drug that suppresses the interaction between T-lymphocytes and keratinocytes
predominates over a drug that suppresses the interaction between T-lymphocytes and dendritic cells.
To show that this predominance is not absolute in psoriasis treatment, we (along with the values of the
parameters of System (1), the initial values (2) and the control constraints (3) presented in (104), use
the following values taken from [13]:
σ = 9.0
λ = 0.4
γ1 = 0.0032
l0 = 100.0

ρ = 14.0
μ = 0.07
γ2 = 0.0002
k0 = 40.0

β = 0.065
ν = 0.02
umin = 0.3
m0 = 50.0

δ = 0.01
T = 100.0
vmin = 0.3

The corresponding results of the numerical calculations are given in Figure 5, which include the
graphs of the optimal controls u∗ (t), v∗ (t), the corresponding optimal solutions l∗ (t), k ∗ (t), and m∗ (t),
and the minimum value of the functional J (u, v) of (5). From the analysis of the graphs of controls
u∗ (t), v∗ (t) and Formula (105), we conclude that for the majority of 100 days psoriasis treatment we
use the maximum dosage of a drug suppressing the interaction between T-lymphocytes and dendritic
cells. A drug that suppresses the interaction between T-lymphocytes and keratinocytes, should be used
at the minimum dosage for 99 days and only on the last day the schedule of taking this medication
should be changed to the maximum dosage. This is the ﬁrst conclusion we draw from Figure 5.
The second conclusion is that unlike the results shown in Figures 1 and 3, the ﬁrst change in the
schedule of taking drugs does not occur simultaneously in both, but only in one, which suppresses the
interaction between T-lymphocytes and dendritic cells.

95

Math. Comput. Appl. 2018, 23, 45

















W WLPH












P 'HQGULWLFFHOOV





N .HUDWLQRF\WHV

O 7íO\PSKRF\WHV























W WLPH







Y 0HGLFDWLRQGRVDJH



X 0HGLFDWLRQGRVDJH



W WLPH





















W WLPH



















W WLPH





Figure 5. Optimal solutions and optimal controls for T = 100.0: (upper row) l∗ (t), k ∗ (t), m∗ (t);
(lower row) u∗ (t), v∗ (t); J∗ = 33.185501.

Figure 6 shows that with increasing duration of the period of psoriasis treatment (for example,
to 150 days), the actual optimal control v$∗ (t) responsible for taking a drug that suppresses the
interaction between T-lymphocytes and dendritic cells has a period with a smooth increase in the
dosage of the used medication (singular arc).











W WLPH







P 'HQGULWLFFHOOV





N .HUDWLQRF\WHV

O 7íO\PSKRF\WHV












W WLPH




























W WLPH







Y 0HGLFDWLRQGRVDJH

X 0HGLFDWLRQGRVDJH









W WLPH















W WLPH

Figure 6. Optimal solutions and optimal controls for T = 150.0: (upper row) l∗ (t), k ∗ (t), m∗ (t);
(lower row) u∗ (t), v∗ (t); J∗ = 33.185511.

96

Math. Comput. Appl. 2018, 23, 45

Finally, the graphs of the optimal solution k ∗ (t) from Figures 1–6 show that the optimal
concentration of keratinocytes k ∗ (t) reaches at the end T of the interval [0, T ] the level, which is
the minimal for the entire period [0, T ] of psoriasis treatment. This fact is very important for the
treatment of the disease.
8. Conclusions
On a given time interval, a nonlinear system of three differential equations describing psoriasis
treatment was considered. It established the relationships between the concentrations of T-lymphocytes,
keratinocytes, and dendritic cells, which were its phase variables. Also, two scalar bounded controls
were introduced into the system that reﬂected the doses of drugs aimed at suppressing interactions
between T-lymphocytes and keratinocytes, as well as between T-lymphocytes and dendritic cells.
The problem of minimizing the concentration of keratinocytes at the ﬁnal moment of the time interval
was stated for such a system. To analyze the optimal solution of the minimization problem consisting
of the optimal controls and the corresponding optimal solutions of the original system, the Pontryagin
maximum principle was applied. It allowed to obtain the Cauchy problem for the switching functions
describing the behavior of the optimal controls. An analysis of this Cauchy problem showed that
such controls could be either bang-bang functions, or, in addition to bang-bang intervals, they could
contain singular arcs. Next, the possibility of simultaneous existence of singular arcs of the optimal
controls was studied. The orders of singular arcs of such controls were found, the corresponding
necessary optimality conditions for them were checked. Also, the forms of concatenations of singular
arcs with nonsingular intervals (where the optimal controls are bang-bang functions) were investigated.
After that, the ﬁnding of speciﬁc optimal solution to the considered minimization problem was carried
out numerically using “BOCOP–2.0.5”. The corresponding results of calculations and their discussion
were provided.
Author Contributions: All authors contributed equally to this work. All authors read and approve the final manuscript.
Acknowledgments: Evgenii Khailov was funded by Russian Foundation for Basic Research according to the
research project 18-51-45003 IND_a.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

References
1.
2.
3.
4.
5.
6.
7.
8.
9.

Parisi, R.; Symmons, D.P.; Grifﬁths, C.E.; Ashcroft, D.M. Global epidemiology of psoriasis: A systematic
review of incidence and prevalence. J. Investig. Dermatol. 2013, 133, 377–385. [CrossRef] [PubMed]
Garshick, M.K.; Kimball, A.B. Psoriasis and the life cycle of persistent life effects. Dermatol. Clin. 2015, 33,
25–39. [CrossRef] [PubMed]
Ryan, C.; Kirby, B. Psoriasis is a systemic disease with multiple cardiovascular and metabolic comorbidities.
Dermatol. Clin. 2015, 33, 41–55. [CrossRef] [PubMed]
Eder, L.; Chandran, V.; Gladman, D.D. What have we learned about genetic susceptibility in psoriasis and
psoriatic arthritis? Curr. Opin. Rheumatol. 2015, 27, 91–98. [CrossRef] [PubMed]
Menter, M.A.; Grifﬁths, C.E. Psoriasis: The future. Drematol. Clin. 2015, 33, 161–166. [CrossRef] [PubMed]
Oza, H.B.; Pandey, R.; Roper, D.; Al-Nuaimi, Y.; Spurgeon, S.K.; Goodfellow, M. Modelling and ﬁnite-time
stability analysis of psoriasis pathogenesis. Int. J. Control 2017, 90, 1664–1677. [CrossRef]
Savill, N.J. Mathematical models of hierarchically structured cell populations under equilibrium with
application to the epidermis. Cell Prolif. 2003, 36, 1–26. [CrossRef] [PubMed]
Niels, G.; Karsten, N. Simulating psoriasis by altering transit amplifying cells. Bioinformatics 2007, 23,
1309–1312.
Laptev, M.V.; Nikulin, N.K. Numerical modeling of mutial synchronization of auto-oscillations of epidermal
proliferative activity in lesions of psoriasis skin. Biophysics 2009, 54, 519–524. [CrossRef]

97

Math. Comput. Appl. 2018, 23, 45

10.

11.
12.
13.
14.
15.
16.
17.
18.
19.
20.

21.

22.
23.

24.
25.

26.
27.
28.
29.
30.
31.
32.

Valeyev, N.V.; Hundhausen, C.; Umezawa, Y.; Kotov, N.V.; Williams, G.; Clop, A.; Ainali, C.; Ouzounis, G.;
Tsoka, S.; Nestle, F.O. A systems model for immune cell interactions unravels the mechanism of inﬂammation
in human skin. PLoS Comput. Biol. 2010, 6, e1001024. [CrossRef] [PubMed]
Gandolﬁ, A.; Iannelli, M.; Marinoschi, G. An agestructured model of epidermis growth. J. Math. Biol. 2011,
62, 111–141. [CrossRef] [PubMed]
Chattopadhyay, B.; Hui, N. Immunopathogenesis in psoriasis throuth a density-type mathematical model.
WSEAS Trans. Math. 2012, 11, 440–450.
Roy, P.K.; Datta, A. Negative feedback control may regulate cytokines effect during growth of keratinocytes
in the chronic plaque of psoriasis: A mathematical study. Int. J. Appl. Math. 2012, 25, 233–254.
Zhang, H.; Hou, W.; Henrot, L.; Schnebert, S.; Dumas, M.; Heusèle, C.; Yang, J. Modelling epidermis
homoeostasis and psoriasis pathogenesis. J. R. Soc. Interface 2015, 12, 1–22. [CrossRef] [PubMed]
Cao, X.; Datta, A.; Al Basir, F.; Roy, P.K. Fractional-order model of the disease psoriasis: A control based
mathematical approach. J. Syst. Sci. Complex. 2016, 29, 1565–1584. [CrossRef]
Datta, A.; Roy, P.K. T-cell proliferation on immunopathogenic mechanism of psoriasis: A control based
theoretical approach. Control Cybern. 2013, 42, 365–386.
Roy, P.K.; Datta, A. Impact of cytokine release in psoriasis: a control based mathematical approach.
J. Nonlinear Evol. Equ. Appl. 2013, 2013, 23–42.
Ledzewicz, U.; Schättler, H. On optimal singular controls for a general SIR-model with vaccination and
treatment. Discret. Contin. Dyn. Syst. 2011, 2, 981–990.
Joshi, H.R.; Lenhart, S.; Hota, S.; Agusto, F. Optimal control of an SIR model with changing behavior through
an educational campaign. Electr. J. Differ. Equ. 2015, 2015, 1–14.
De Pinho, M.R.; Kornienko, I.; Maurer, H. Optimal control of a SEIR model with mixed constraints and
L1 cost. In Controllo’2014—Proceedings of the 11th Portuguese Conference on Automatic Control; Lecture Notes in
Electrical Engineering; Springer: Cham, Switzerland, 2015; Volume 321, pp. 135–145.
Schättler, H.; Ledzewicz, U. Optimal Control for Mathematical Models of Cancer Therapies. An Application of
Geometric Methods; Springer: New York, NY, USA; Heidelberg, Germany; Dordrecht, The Netherlands;
London, UK, 2015.
Schättler, H.; Ledzewicz, U. Geometric Optimal Control: Theory, Methods and Examples; Springer: New York,
NY, USA; Heidelberg, Germany; Dordrecht, The Netherlands; London, UK, 2012.
Roy, P.K.; Bhadra, J.; Chattopadhyay, B. Mathematical modeling on immunopathogenesis in chronic plaque
of psoriasis: A theoretical study. In Proceedings of the World Congress on Engineering, London, UK,
30 June–2 July 2010; Volume 1, pp. 550–555.
Datta, A.; Kesh, D.K.; Roy, P.K. Effect of CD4+ T-cells and CD8+ T-cells on psoriasis: A mathematical study.
Imhotep Math. Proc. 2016, 3, 1–11.
Grigorieva, E.; Khailov, E.; Deignan, P. Optimal treatment strategies for control model of psoriasis.
In Proceedings of the SIAM Conference on Control and its Applications (CT17), Pittsburgh, PA, USA,
10–12 July 2017; pp. 86–93.
Datta, A.; Li, X.-Z.; Roy, P.K. Drug therapy between T-cells and DCs reduces the excess production of
keratinicytes: ausal effect of psoriasis. Math. Sci. Int. Res. J. 2014, 3, 452–456.
Lee, E.B.; Marcus, L. Foundations of Optimal Control Theory; John Wiley & Sons: New York, NY, USA, 1967.
Pontryagin, L.S.; Boltyanskii, V.G.; Gamkrelidze, R.V.; Mishchenko, E.F. Mathematical Theory of Optimal
Processes; John Wiley & Sons: New York, NY, USA, 1962.
Zelikin, M.I.; Borisov, V.F. Theory of Chattering Control: with Applications to Astronautics, Robotics, Economics
and Engineering; Birkhäuser: Boston, MA, USA, 1994.
Zorich, V.A. Mathematical Analysis I; Springer: Berlin/Heidelberg, Germany, 2004.
Bonnans, F.; Martinon, P.; Giorgi, D.; Grélard, V.; Maindrault, S.; Tissot, O.; Liu, J. BOCOP 2.0.5—User Guide.
8 February 2017. Available online: http://bocop.org (accessed on 3 September 018).
Zelikin, M.I.; Zelikina, L.F. The deviation of a functional from its optimal value under chattering decreases
exponentially as the number of switchings grows. Differ. Equ. 1999, 35, 1489–1493.

98

Math. Comput. Appl. 2018, 23, 45

33.
34.

Zelikin. M.I.; Zelikina, L.F. The asymptotics of the deviation of a functional from its optimal value when
chattering is replaced by a suboptimal regime. Russ. Math. Surv. 1999, 54, 662–664. [CrossRef]
Zhu, J.; Trélat, E.; Cerf, M. Planar titling maneuver of a spacecraft: Singular arcs in the minimum time
problem and chattering. Discrete Contin. Dyn. Syst. B 2016, 21, 1347–1388. [CrossRef]
c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

99

Mathematical
and Computational
Applications

Article

Optimal Control Analysis of a Mathematical Model
for Breast Cancer
Segun Isaac Oke *

ID

, Maba Boniface Matadi and Sibusiso Southwell Xulu

Department of Mathematical Sciences, University of Zululand, Private Bag X1001, KwaDlangezwa 3886,
South Africa; matadim@unizulu.ac.za (M.B.M.); xuluss@unizulu.ac.za (S.S.X.)
* Correspondence: segunoke2016@gmail.com
Received: 26 March 2018; Accepted: 20 April 2018; Published: 24 April 2018

Abstract: In this paper, a mathematical model of breast cancer governed by a system of ordinary
differential equations in the presence of chemotherapy treatment and ketogenic diet is discussed.
Several comprehensive mathematical analyses were carried out using a variety of analytical
methods to study the stability of the breast cancer model. Also, sufﬁcient conditions on parameter
values to ensure cancer persistence in the absence of anti-cancer drugs, ketogenic diet, and cancer
emission when anti-cancer drugs, immune-booster, and ketogenic diet are included were established.
Furthermore, optimal control theory is applied to discover the optimal drug adjustment as an input
control of the system therapies in order to minimize the number of cancerous cells by considering
different controlled combinations of administering the chemotherapy agent and ketogenic diet using
the popular Pontryagin’s maximum principle. Numerical simulations are presented to validate our
theoretical results.
Keywords: breast cancer; optimal control; ketogenic diet; chemotherapy

1. Introduction
Cancer is a generic name that refers to a group of diseases in which normal cells divide
uncontrollably, that is, grow more rapidly than normal cells, and may eventually spread to other parts
of the body by a process called metastasis [1]. According to the National Cancer Registry [2], cancer
kills more people than tuberculosis (TB), AIDs and malaria combined. Statistics show that cancer
related deaths amounted to about 8.2 million in 2010. The mortality rate from cancer is projected to
continue to rise, with an estimated 13 million deaths by 2030 [3]. The most common types of cancer
include: breast cancer, prostate cancer, brain cancer, lung cancer and skin cancer among others.
According to the [3] report, breast cancer is the most common invasive cancer in females
worldwide. The formation of breast cancer can occur in the inner lining of the milk ducts, known
as ductal carcinoma, or in the lobules of the breast, known as lobular carcinoma [4]. Breast cancer is
one of the most widely recognized obstructive diseases in females around the world. The disease has
presently been named as the most dangerous cancer in women [3]. However, little is known on the
causes of the ailment. There are three major breast cancer risk factors namely hormonal imbalance
(estrogen), genetic (family history), and environmental (poor diet, alcohol consumption, smoking,
exposure to toxin, etc.) [5]. Surgery, chemotherapy, radiation therapy, hormonal therapy, hyperthermia,
targeted therapy and ketogenic diet [5,6] amongst other therapeutics are used to inhibit tumor growth
or kill the tumor cells in the body. However, each treatment has side effects attributed to it, for example,
hair loss, vomiting, nausea and fatigue. Adverse effects occur as a result of chemotherapy, which is not
able to differentiate between normal cells and tumor cells, consequently killing both of them [3].
Several dietary components and supplements have been examined as possible cancer prevention
agents. Until recently, a few studies, such as [6–8], investigated diet as a possible adjuvant to cancer

Math. Comput. Appl. 2018, 23, 21; doi:10.3390/mca23020021 100

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 21

treatment, which includes a ketogenic diet. A ketogenic diet consists of high edible fat with moderate
or low protein content and very low carbohydrates, which forces the body to burn fat instead of
glucose for adenosine triphosphate (ATP) synthesis [6,9].
It is well-known that a mathematical model is a capable device used to investigate the spread of
non-infectious diseases and to provide important insights into disease behaviors and control [10,11].
Over the years, it has become an important tool in comprehending the dynamics of diseases and in
decision making processes regarding a medical intervention program for controlling breast cancer
in many nations [12]. For instance, [13] explored the role of mathematical modeling on the optimal
delivery of a combination therapy for tumors and to improve on the delivery of anti-tumor drugs.
Old and recent studies such as [4,12,14–16] amongst others have shown that mathematical
modeling is a widely used tool for resolving questions on public health. For instance, it was used
during the time of Bernoulli (on modeling the dynamics of Smallpox) in 1760 [17]. Kermack and
McKendrick [14,15] and some other recent studies by [4,12,13,18–21] show that mathematical modeling
is useful in solving the problem of epidemiology. However, these studies reveal that much has not
been done in terms of the mathematical modeling of a nutritional diet (ketogenic diet) as a control or
therapy on tumor cells. Hence, we improved the model in [19] for this paper by incorporating time
dependent control parameters (use of ketogenic diet, immune booster, and anti-cancer drugs) based
on the assumption that there is an interaction between normal cells and tumor cells that is due to a
mutation in DNA as a result of excess estrogen in the body system [4,19,22].
Furthermore, we analyzed and applied an optimal control to the improved model to determine the
possible impacts of ketogenic-diet use and anti-cancer drugs as a treatment on tumor cells. We carried
out a rigorous qualitative optimal control analysis of the resulting model and found the necessary
conditions for optimal control of the disease using Pontryagin’s maximum principle [11,23–25] in order
to determine the optimal strategies for controlling the metastatic of the tumor cells.
This paper is organized as follows: In Section 2, four compartment models of ODEs to study the
dynamics of breast cancer are developed. In Section 3, the existence of equilibria, their stabilities and
basic reproductive numbers are discussed. In Section 4, an uncertainty and sensitivity analysis to check
the most sensitive parameters in the model are discussed. In Section 5, an optimal control problem
according to the model is proposed and an optimal solution is proffered. Numerical simulations are
illustrated by implementing the forward and backward ﬁnite difference scheme in Section 6, while
concluding remarks are provided in Section 7.
2. Model Formulation
Based on the existing model in [19], we developed a model by assuming the logistic (Verhulst)
growth of a cell population and basic competition between normal cells and tumor cells. We considered
the immune cells compartment to comprise Natural Killer cells (NK) and CD8+ T-cells as in [19] and
we used a similar equation to model the immune response dynamic by introducing immune booster
(ketone bodies) and anti-cancer drug efﬁcacy.
We adapted an estrogen equation as presented in a model by [26]. Pinho and his co-workers
in [26] considered that when a chemotherapy agent is continuously infused into the body and engulfed
by different cell populations, natural death can occur. Excess estrogen was used in a similar way and
assumed to be saturated daily through birth control (constant source rate) (1 − k). This was introduced
to serve as anti-cancer drug efﬁcacy (e.g., Tamoxifen) in order to bind estrogen receptors positive and
to reduce excess estrogen from promoting cancer growth [27].
In this study, a model that splits the entire population of cells of the human breast tissues at any
given period of time P(t) was reﬂected upon. Hence, normal cells compartment, represented by N (t)
in the form of epithelial cells that constitute the breast tissue is described. The cells are assumed to
develop and die normally as they have unaltered DNA that control all cell activities. It was suggested

101

Math. Comput. Appl. 2018, 23, 21

that the normal cells and tumor cells compete for nutrients and other resources in a small volume,
which is the competition model used by [28]. Normal cells are represented by
dN
= Nα1 − μ1 N 2 − φ1 NT − (1 − k)λ1 NE.
dt

(1)

The ﬁrst term represents the logistic growth rate α1 of the normal cells, which are breast tissues that
are made-up of epithelial cells. The second term represents the natural death rate of normal cells. φ1
represents the rate at which normal cells inhibit due to an alteration in DNA that is responsible for
cancer cells having an uncontrolled cycle that normal cells do not have [19]. The ﬁnal term describes the
gene transactivation that can be a contributing growth factor responsible for the estrogen stimulation
of breast cancer, which can result in damage of DNA. Thus, there will be a reduction in the population
of normal cells N (t) = being transformed into tumor cells by λ1 NE where λ1 represents the tumor
formation rate resulting from DNA mutation caused by the presence of excess estrogen [4]. However,
(1 − k) represents the effectiveness of anti-cancer drugs (Tamoxifen).
The tumor cells compartment can be denoted by T (t) in the form of an abnormal mass of tissue.
Tumors are classic signs of inﬂammation, and can be benign or malignant (cancerous). Their names
usually reﬂect the kind of tissue from where they arise, for example in breast or brain cancer, among
others. There are about 51 breast cancer cell lines that mirror the 145 primary breast tumors [29].
These can be classiﬁed into two major branches: the Luminal, which has estrogen receptors
( ESR1 + ve), and the Basal-like, which has no estrogen receptors ( ESR1 − ve). A homogeneous
luminal type of cancer cells in the form of MDAMB361, MCF-7, BT474, T47D and ZR75 of the cell
lines [19] are then assumed to be
dT
= Tα2 d − μ2 T 2 − γ2 MT − μ5 T + (1 − k)λ1 NE.
dt

(2)

The ﬁrst term of the equation is a limited growth term for tumor cells that depends on the rate of
parameter d (ketogenic diets). Although, if d = 0, tumor cells are automatically eradicated, but
any DNA mutation that is caused by excess estrogen will repopulate the tumor cells again λ1 NE.
The induced death rate μ5 is as a result of tumor starvation of nutrients, glucose and so on from the
body system during the ketogenic diet, which alters nutrition. We assumed that γ2 is the rate at which
tumor cells are being removed due to the effectiveness of immune response.
The immune response compartment is represented by M (t) in the form of natural killer (NK)
cells and CD8+ T cells. Their growth may be stimulated by the presence of the tumor and they can
destroy tumor cells through the kinetics process. We also assumed that the presence of a detectable
tumor in a body system does not necessarily imply that the tumor has completely escaped active
immunosurveillance. However, a tumor is immunogenic. It is possible that the immune response may
not be sufﬁcient on its own to completely combat the rapid growth of the tumor cells population and
their eventual development into a tumor.

dM
ρMT
λ ME
= sβ +
− γ3 MT − μ3 M − (1 − k) 3
dt
ω+T
g+E

(3)

The constant source parameter s denotes the source rate of immune response fully infused in the
body daily. We introduced immune booster β (a supplement such as ketone bodies) to assist immune
response whenever tumor cells overpower immune cells in order to activate the immune response and
ﬁght the cancer cells. The next term is a nonlinear growth term for immune response where ρ the rate
of immune response is and ω is the immune cell threshold [12]. We denoted γ3 as the rate at which
immune response is inactivated upon interacting with tumor cells while μ3 represents the immune
cells natural death rate as a result of necrosis. The ﬁnal term explains a limited rate at which estrogen
suppresses immune cells activation where λ3 is the rate of immune suppression and g is the estrogen
threshold [19].
102

Math. Comput. Appl. 2018, 23, 21

Finally, we considered estrogen compartment denoted by E(t). Estrogen is a female steroid
hormone that is produced by the ovaries in lesser amounts, and by the adrenal cortex, placenta and
male testes. Estrogen helps to control and guide sexual development, including the physical changes
associated with puberty [11,30]. However, an increase in estrogen levels can lead to the growth of the
tumor cells. It also serves as a mitogen by triggering cell division in breast tissue [30]. Estrogen acts as
a carcinogen by directly damaging DNA, forcing healthy epithelial cells to have a higher likelihood of
malignant conversion [5,30].
dE
= (1 − k ) − μ4 E
(4)
dt
The process of constantly replenishing excess estrogen is denoted by . We assumed that the
majority of cancer cells are estrogen-receptor positive and only a small proportion of epithelial cells
are estrogen-receptor positive, which can only be blocked by the anti-cancer drug (1 − k ) Tamoxifen.
μ4 is the rate at which estrogen is being washed out from the body system. Thus, system (5) is our
modiﬁed model.
dN
dt = N ( α1 − μ1 N − φ1 T ) − (1 − k )( λ1 NE )
dT
+ (1 − k)(λ1 NE
dt = T ( α2 d − μ2 T ) − γ2 MT − μ5 T 
 )
(5)
ρMT
λ3 ME
dM
=
sβ
+
−
γ
MT
−
μ
M
−
1
−
k
(
)
3
3
ω+T
g+ E
dt
dE
dt

= (1 − k ) − μ4 E

3. Model Analysis
3.1. Boundedness and Positivity of Solutions
The system of Equation (5) has an initial condition by
N (0) = N0 ≥ 0, T (0) = T0 ≥ 0, M (0) = M0 ≥ 0, and E(0) = E0 ≥ 0
since our model is to investigate cellular populations, therefore all the variables and parameters of the
model are non-negative. Based on the biological ﬁnding, the system of Equation (5) will be studied in
the following region such as:
"
#
Δ = ( N, T, M, E) ∈ 4+

The following theorem assures that the system of Equation (5) is well-posed such that solutions
with non-negative initial conditions remain non-negative for all 0 < t < ∞, and therefore makes the
variable biologically meaningful. Hence, we have the following result:
Theorem 1. The region Δ ⊂ 4+ is positively invariant with respect to the system of Equation (5) and
non-negative solution exists for all time 0 < t < ∞.
Proof: Let Δ = Δc ⊂ 4+ with Δ = {( N, T, M, E) ∈ 4+ : N ≤ μα1 }, then the solutions (N (t), T(t), M(t),
1
E(t)) of system (5) are positive ∀t ≥ 0. It is obvious from the ﬁrst compartment of system (5) that
dN
≤ N ( t ) α1 − μ1 N 2 ( t ).
dt
Solving with Bernoulli method and taking N (0) = N0 , we have
N (t) ≤
with
k=

α1
μ1 + kα1 e−α1 t
α1 − N0 μ1
N0 α1

103

Math. Comput. Appl. 2018, 23, 21

α1
.
μ1 + kα1

N0 =
Then,
N (t) ≤

μ1 +

N (t) ≤



α1

α1 − N0 μ1
e − α1 t
N0

α1
as t → ∞
μ1

hence, N (t) > 0, ∀t > 0 and if and only if (1 − k) ≥ 0 [31].
Consequently, it can be shown that T (t) > 0, M(t) > 0, and E(t) > 0 ∀t > 0. This completes
the proof. 
3.2. The Equilibrium Points of System (5)
The steady states occur by setting the left hand side (LHS) of system (5) to zero, i.e.,
dT
dM
dE
dN
=
=
=
=0
dt
dt
dt
dt
The model system admits six steady states in which there are four dead equilibria, one tumor-free
equilibrium point and one co-existing equilibrium point P = ( N ∗ , T ∗ , M∗ , E∗ ) where N ∗ , T ∗ , M∗ , E∗
represent the tumor-free equilibrium values for the normal cells, tumor cells, immune cells and estrogen
hormone respectively. We have N ∗ > 0, M∗ > 0, E∗ > 0 since cell populations are non-negative and
real. Therefore, all parameters s,β, g, μ1 , μ3 , μ4 , , λ3 , k, α1 , and λ1 are positive.
Tumor-Free equilibrium point

P0 =

sβ( gμ4 + (1 − k ) )
α1 μ4 − (1 − k )2 λ1
(1 − k )
,
, 0,
μ1 μ4
μ4
μ3 ( gμ4 + (1 − k) ) + (1 − k )2 λ3

Type 1 Dead equilibrium point

Pd1 =

sβ( gμ4 + (1 − k ) )

(1 − k )
,
0, 0,
μ4
μ3 ( gμ4 + (1 − k ) ) + (1 − k )2 λ3 )

Type 2 Dead equilibrium point

Pd2 =

0,

dα2 − γ2 m1∗ − μ5 ∗ (1 − k)
, m1 ,
μ2
μ4

0,

dα2 − γ2 m2∗ − μ5 ∗ (1 − k)
, m2 ,
μ2
μ4

0,

dα2 − γ2 m3∗ − μ5 ∗ (1 − k)
, m3 ,
μ2
μ4

Type 3 Dead equilibrium point

Pd3 =
Type 4 Dead equilibrium point

Pd4 =
Co-existing equilibrium point

Pe = ( N4∗ , T4∗ , M4∗ , E4∗ )

104





Math. Comput. Appl. 2018, 23, 21

3.3. The Reproductive Number and Tumor-Free Equilibrium Point
In this section, we mainly analyzed the stability behaviors of system (5) by means of eigenvalues.
We apply Hartman–Grobman Theorem which states that in the neighborhood of a hyperbolic
equilibrium point, a nonlinear dynamical system is topologically equivalent to its linearization [32].
Theorem 2. The tumor-free equilibrium (TFE) point P0 of system (5) is locally asymptotically stable if R0 < 1,
otherwise unstable.
Proof. Linearizing system (5) around TFE P0 , we obtained the following Jacobian matrix J ( P0 )
⎛
⎜
⎜
J=⎜
⎜
⎝

2μ1 λ1 (1−k )2 −α1 μ1 μ4 −(1−k )2 λ1 μ1
μ1 μ4
(1− k )2 λ1
μ4

(1− k )2 λ1 Φ1 − Φ1 α1 μ4
μ1 μ4

0

B3

0

0
0

B4
0

− B5
0

⎛

B0
⎜ B
⎜ 1
J ( P0 ) = ⎜
⎝ 0
0
(
(
(
(
(
(
| J ( P0 )| = (
(
(
(
(

B0 − δ
B1
0
0

B2
B3
B4
0

0
0
− B5
0

− B6
B6
− B7
− μ4

⎞

⎟
⎟
B6 ⎟
⎟
− B7 ⎠
− μ4

⎞
⎟
⎟
⎟
⎠

− B6
B6
− B5 − δ
− B7
0
− μ4 − δ
0
0

B2
B3 − δ
B4
0

− B6

(
(
(
(
(
(
(=0
(
(
(
(

Then the characteristic equation at P0 of the linearized system of the model (5) is given below.
Obviously, there exists two negative characteristic roots
δ1 = −μ4 , δ2 = − B5
However, we only need to consider
δ2 − ( B0 + B3 )δ + B0 B3 − B1 B2 = 0

B B2
δ2 − ( B0 + B3 )δ + B0 B3 1 − 1
B0 B3

=0

(6)

from (6), we have basic reproduction number
R0 =

B1 B2
B0 B3

(7)

δ2 − ( B0 + B3 )δ + B0 B3 (1 − R0 ) = 0,
where
B0 =

2μ1 λ1 (1 − k )2 − α1 μ1 μ4 − (1 − k)2 λ1 μ1
(1 − k )2 λ1
(1 − k)2 λ1 Φ1 − Φ1 α1μ4
, B1 =
, B2 =
μ1 μ4
μ4
μ1 μ4
B3 =

α2 μ3 dψ∗ + α2 λ3 d (1 − k )2 − γ2 sβψ∗ − μ5 μ3 ψ∗ − μ5 λ3 (1 − k )2
μ3 ψ ∗ + (1 − k )2 λ3

105

Math. Comput. Appl. 2018, 23, 21

where

ψ∗ = ( gμ4 + (1 − k ) )

sβ( gμ4 + (1 − k ) (ρ − γ3 ω )
ωμ3 ( gμ4 + (1 − k ) )


(1 − k)λ1 α1 μ4 − (1 − k)3 λ21
μ3 μ4 g + μ3 (1 − k ) + λ3 (1 − k )2
, − B6 = −
− B5 =
gμ4 + (1 − k )
μ1 μ4
⎛
(1 − k)λ1 α1 μ4 − (1 − k)3 λ21
μ24 (1 − k )λ3 gsβ( gμ4 + (1 − k) )
, − B7 = −⎝
B6 =
μ1 μ4
( gμ4 + (1 − k) )2 μ3 ( gμ4 + (1 − k) ) + (1 − k)2 λ3

− B4 =

⎞
⎠

Here, we can apply the Routh-Hurwitz criterion namely,

(i) Tr ( A) < 0 (ii) Det( A) > 0
provided
a0 = 1 > 0, a1 = ( B0 + B3 ) < 0, B0 B3 (1 − R0 ) > 0 if R0 < 1,
B0 B3 > B1 B2 , B1 > 0, B2 > 0, B3 < 0, B0 < 0
Since the Routh–Hurwitz criterion holds, all the eigenvalues are negative, i.e., δ3 < 0 and δ4 < 0.
Therefore, the TFE point of system (5) is locally asymptotically stable if (7) R0 < 1 otherwise unstable.

The epidemiological implication of the above result is that the tumor cells that are governed by
system (5) can be eliminated from the population (normal cells or breast tissues) whenever an inﬂux
by tumor cells into the normal cells is small, such that R0 < 1. Therefore, the existence of a tumor-free
equilibrium in this case depends on the estrogen level.
Theorem 3. The Type 1 Dead equilibrium point Pd1 of system (5) is locally asymptotically stable if


(1 − k )2 λ1
α1 μ4



> 1,

otherwise unstable.
Proof. Linearizing system (5) around the Type 1 Dead free equilibrium point Pd1 , we obtained the
following Jacobian matrix J ( Pd1 )
⎛
⎜
⎜
J=⎜
⎜
⎝

α1 − (1 − k)λ1 E0∗
(1 − k)λ1 E0∗

0
dα2 − γ2 M0∗ − μ5

0

ρωM0∗ −γ3 M0∗ ω 2
ω2

0

0
⎛

C0
⎜ C
⎜ 1
J ( Pd1 ) = ⎜
⎝ 0
0

−



0
0

μ3 ( g+ E0∗ )+(1−k )λ3 E0∗
( g+ E0∗ )

0
0
C2
C3
0

106

0
0
−C4
0

0
0
−C5
− μ4

⎞
⎟
⎟
⎟
⎠



0
0

λ3 gM0∗ (1−k )

( g+ E0∗ )2

− μ4

⎞
⎟
⎟
⎟
⎟
⎠

Math. Comput. Appl. 2018, 23, 21

(
(
(
(
(
(
| J ( P1 )| = (
(
(
(
(

C0 − δ
C1
0
0

0
C2 − δ
C3
0

0
0

−C4 − δ
0

0
0
−C5
− μ4 − δ

(
(
(
(
(
(
(=0
(
(
(
(

Clearly, two eigenvalues of the system (5) at Pd1 are negative and real
δ1 = −μ4


and
δ2 = −C4 ⇒ −

μ3 ( gμ4 + (1 − k ) ) + (1 − k)2 λ3
gμ4 + (1 − k )



while the remaining two eigenvalues are obtained from 2 × 2 matrix.
⎛

⎞
0
⎟
C2 ⎠

C0
⎜
A = ⎝ C1

Applying the Routh-Hurwitz criterion stated above; we have


(i) Tr ( A) =C0 + C2 ⇒

α1 μ4 −(1−k )2 λ1
μ4



i f α1 1 −

+

(μ3 α2 d−γ2 sβ−μ5 μ3 ) A∗ +dα2 λ3 (1−k)2 −(1−k)2 λ3 μ5
μ3 A∗ +(1−k )2 λ3



2

(1− k ) λ1
α1 μ4

> 0, ⇒

2

(1− k ) λ1
α1 μ4

<0

>1

Therefore, Tr ( A) < 0

(
ii) Det( A) =C0 C2 
α1 μ4 −(1−k )2 λ1
μ4



i f α1 1 −
and
) 
α1 1 −

(1 − k )2 λ1
α1 μ4

(1− k )2 λ1
α1 μ4



(μ3 α2 d−γ2 sβ−μ5 μ3 ) A∗ +dα2 λ3 (1−k)2 −(1−k)2 λ3 μ5
μ3 A∗ +(1−k )2 λ3



> 0 provided

(1− k )2 λ1
α1 μ4

>0

>1

(μ3 α2 d − γ2 sβ − μ5 μ3 ) A∗ + dα2 λ3 (1 − k)2 − (1 − k)2 λ3 μ5
μ3 A ∗ + (1 − k )2 λ3

*

>0

implies that Det( A) > 0. Thus, the remaining eigenvalues δ3 and δ4 are negative and real since R-H
criterion has been satisﬁed.
 Hence, the type 1 Dead equilibrium point Pd1 of the system (5) is locally
asymptotically stable if

(1− k )2 λ1
α1 μ4

> 1. 

Epidemiologically it is implied that the net growth of the tumor cells must be more than the
immune cells values in order to have the tumor cells overpower the normal cells as the reactivation of
the immune cells is due to the estrogen effects that are greater than the reactivation of the immune
cells due to the tumor effect. However, ketogenic diet is inactive at the type 1 Dead equilibrium point.
Theorem 4. The Type 2 Dead equilibrium point Pd2 of system (5) is locally asymptotically stable if


(1 − k )2 λ1
α1 μ4

107



>1

Math. Comput. Appl. 2018, 23, 21

ω>

A∗
μ2





μ2 C ∗ ρ

−1

γ3 A∗ C ∗ + μ2 μ3 C ∗ + (1 − k )2 λ3

otherwise unstable.
point Pd2 , we obtained the
Proof. We linearized system (5) around the
 Type 2 Dead free equilibrium

following Jacobian matrix J ( Pd2 ) at Pd2 = 0,

dα2 −γ2 m1∗ −μ5
(1− k )
, m1∗ , μ
μ2
4

⎛

α1 − (1 − k )λ1 E1∗
⎜
(1 − k)λ1 E1∗
⎜
J=⎜
⎜
0
⎝
0

0
Q2

0
−γ2 T1∗

Q3

Q5

0

0

⎞

0
0

λ3 gM1∗ (1−k )

( g+ E1∗ )2

⎟
⎟
⎟
⎟
⎠

− μ4

where


Q2 = dα2 − 2μ2 T1∗ − γ2 M1∗ − μ5 , Q3 =



ρωμ22 M1∗ −γ3 M1∗ (ωμ2 +dα2 −γ2 M1∗ −μ5 )2

(ωμ2 +dα2 −γ2 M1∗ −μ5 )2

⎛
⎜
⎜
| J ( P2 )| = ⎜
⎝
(
(
(
(
(
(
| J ( P2 )| = (
(
(
(
(

Q0 − δ
Q1
0
0

0
Q2
Q3
0

Q0
Q1
0
0

0
Q2 − δ
Q3
0

0
− Q4
Q5
0

, Q5 =

0
0
Q6
− μ4



ρT1∗
ω + T1∗

− γ3 T1∗ − μ3 −

(1−k)λ3 E1∗
g+ E1∗



⎞
⎟
⎟
⎟
⎠

0
0
− Q4
0
Q5 − δ
Q6
0
− μ4 − δ

(
(
(
(
(
(
(=0
(
(
(
(

Clearly, one of the eigenvalues of the system (5) at | J ( P2 )| is negative and real, i.e., δ1 = −μ4 .
However, the remaining can be analyzed by simple calculation.

( Q0 − δ)( Q2 − δ)( Q5 − δ) = 0
⇒ Q5 = δ2 , Q2 = δ3 , Q0 = δ4
where
Q0 =
Q5 =

α1 μ4 − (1 − k )2 λ1
, Q2 = γ2 M1∗ − α2 d + μ5
μ4

( A∗ ρμ22 − A∗ C ∗ γ3 )(dα2 − γ2 M1∗ − μ5 ) − C ∗ μ2 (μ3 A∗ + (1 − k)2 λ3 )
μ2 A ∗ C ∗

where A∗ = ( gμ4 − (1 − k ) ) and C ∗ = (ωμ2 + dα2 − γ2 M1∗ − μ5 ).
It follows the following conditions 
(i) Q0 < 0 if, α1 ≤ 1, 0 ≤ k < 1 and

(1− k )2 λ1
α1 μ4

> 1;

∗
(ii) Q5 < 0 provided A∗ > 0, 0 ≤ k ≤ 1 and ω > A
μ2

μ2 C ∗ ρ
γ3 A∗ C ∗ +μ2 μ3 C ∗ +(1−k )2 λ3

−1 . 

3.4. Co-Existing Equilibrium Points
Theorem 5. The co-existing equilibrium point Pe of system (5) is stable if the following Routh–Hurwitz criterion
is satisﬁed,
Trace( A) = (V0 + V3 + V6 − μ4 ) < 0
Det( A) = (−μ4 (V0 V6 V3 + V0 V4 V5 + V1 V2 V6 )) > 0,

108

Math. Comput. Appl. 2018, 23, 21

otherwise unstable.
Proof. We analyzed and linearized system (5) around the co-existing equilibrium point Pe , we
obtained the following Jacobian matrix J ( Pe ) at Pe = ( N4∗ , T4∗ , M4∗ , E4∗ ) where N4∗ , T4∗ , M4∗ & E4∗
represent the coexisting equilibrium values for normal cells, tumor cells, immune cells, and estrogen
levels respectively.
A co-existing equilibrium state exists when all cells populations would have survived
the competition.
N4∗ =

2(1 − k )4 λ41 μ1 μ4

2

+ φ1 α21 μ24 μ1 − 2(1 − k)2 μ1 μ24 α1 λ1 φ1 − 2α1 φ12 μ1 μ34 − 2(1 − k)2 α1 μ1 μ24 λ1
2φ1 α1 μ21 μ34 − 2(1 − k )2 μ21 μ24 λ1 φ1
T4∗ =

M4∗ =

α21 μ1 μ24 + 2α1 μ1 μ24 φ1
2φ1 α1 μ1 μ24 − 2(1 − k )2 μ1 μ4 λ1 φ1

2

G ∗ Z ∗ (1−k )2 λ1 +(α21 α2 μ1 μ34 d+2α1 α2 μ1 μ34 φ1 d−μ34 μ5 α21 −2μ34 μ1 μ5 α1 φ1 ) G ∗ −μ3 α41 μ21 μ54 −4α21 μ21 μ2 μ54 φ1 −4φ12 α21 μ21 μ54 μ2
2

G ∗ Q ∗ μ4

E4∗ =
where

Z∗ =

(1 − k )
μ4

G ∗ = 2φ1 α1 μ1 μ24 − 2(1 − k )2 μ1 μ4 λ1 φ1
2

2(1 − k )4 λ21 μ1 μ4

2

+ φ1 α21 μ24 μ1 − 2(1 − k)2 μ1 μ24 α1 λ1 φ1 − 2α1 φ12 μ1 μ34 − 2(1 − k)2 α1 μ1 μ24 λ1
2φ1 α1 μ21 μ34 − 2(1 − k)2 μ21 μ24 λ1 φ1

α21 μ1 μ24 γ2 − 2α1 μ1 μ24 φ1 γ2
2φ1 α1μ1 μ24 − 2(1 − k)2 μ1 μ4 λ1 φ1
⎛ 

α1 − 2μ1 N4∗ − (1 − k )λ1 E4∗
− N4∗ φ


⎜
∗
(1 − k)λ1 E4
dα2 − 2μ2 T4∗ − γ2 M4∗ − μ5
⎜
J=⎜
⎜
0
V4
⎝
0
0
⎛
⎞
0
−V7
V0 −V2
⎜ V
V3 −V5 V7 ⎟
⎜
⎟
A=⎜ 1
⎟
⎝ 0
V4
V6
V8 ⎠
0
0
0
− μ4
(
(
(
(
(
(
( V −V
0
−V7 ((
0
2
(
(
(
| A| = ( V1 V3 −V5 V7 ( = 0
(
(
( 0
V4
V6
V8 ((
(
( 0
0
0
− μ4 (
Q∗ =

0
−γ2 T4∗
V6

−V7
V7

λ3 gM4∗ (1−k)

0

( g+ E4∗ )2

⎞
⎟
⎟
⎟
⎟
⎠

− μ4

We need to show that Trace( A) < 0, that is
Tr ( A) = (V0 + V3 + V6 − μ4 ) < 0

= α1 (1 − A0 ) − 2μ1 N4∗ + dα2 (1 − μ5 ) − μ4 +



T4∗ ρ − γ3 (ω − T4∗ )
(1 − k )4 λ3
− μ3 −
∗
ω + T4
( gμ4 + (1 − k)

Thus,
Tr ( A) < 0, if A0 > 1, μ5 > 1, ρ < γ3 (ω + T4∗ ) with A0 =

109

(1 − k )2 λ3
α1 μ4

Math. Comput. Appl. 2018, 23, 21

To show that,

| A|= (−μ4 (V0 V3 V6 + V0 V4 V5 + V1 V2 V6 )) > 0
Let ζ 1 = −μ4 V0 V3 V6 , ζ 2 = −μ4 V0 V4 V5 , ζ 3 = −μ4 V1 V2 V6



ζ 1 = α1 (1 − A0 ) − 2μ1 N4∗ dα2 (1 − μ5 ) − 2μ2 T4∗ − γ2 μ4∗ )



T4∗ (ρ−γ3 (ω − T4∗ ))
ω + T4∗

− μ3 −

(1− k )4 λ3
( gμ4 +(1−k)

This implies that, ζ 1 > 0 is a positive, if A0 > 1, μ5 > 1, ρ < γ3 (ω + T4∗ ) with A0 =

ζ 2 = (α1 (1 − A0 ) − 2μ1 N4∗ )

M4∗

(ω + T4∗ )

(1− k )2 λ3
α1 μ4



(ρω − γ3 (ω + T4∗ )) (−γ2 T4∗ )
2

This implies that, ζ 2 > 0 is a positive, if A0 > 1, μ5 > 1, ρω < γ3 (ω + T4∗ )2 , with A0 =

ζ 3 = −μ4 ( A0 )(−φ1 N4∗ )

.

(1− k )2 λ3
α1 μ4




T4∗ ρ − γ3 (ω − T4∗ )
(1 − k )4 λ3
−
μ
−
3
ω + T4∗
( gμ4 + (1 − k)

This implies that ζ 3 < 0 is a negative and by Routh-Hurwitz criterion the system cannot be stable.
Thus the co-existing equilibrium point is always unstable if the cells coexist where
V0 =

α1 μ4 − 2μ1 μ4 N4∗ − (1 − k)2 λ1
(1 − k )2 λ1
, V1 =
, V2 = −φ1 N4∗ ,
μ4
μ4

V3 = (dα2 − 2μ2 T4∗ − γ2 M4∗ − μ5 ), V4 =
V6 =

ρM4∗ ω − γ3 M4∗ (ω + T4∗ )2

(ω + T4∗ )2

, V5 = −γ2 T4∗

ρT4∗ ( gμ4 +(1−k ) )−γ3 T4∗ (ω + T4∗ )( gμ4 +(1−k ) )−μ3 (ω + T4∗ )( gμ4 +(1−k ) )−(1−k )2 (ω + T4∗ )λ3
(ω + T4∗ )( gμ4 +(1−k) )

− V7 = −(1 − k)λ1 N4∗ , V7 = (1 − k)λ1 N4∗ , V8 =

λ3 μ24 gM4∗ (1 − k )

( gμ4 + (1 − k) )2


4. Uncertainty and Sensitivity Analysis
In this section, we explore the dependence of the model solutions on the parameter values. We are
able to ﬁgure-out a feasible range of parameter values and determine the most critical parameters
in the model. We employed a similar method, which is discussed in detail by [20,33], using Latin
Hypercube Sampling (LHS) for studying the uncertainty analysis and the Partial Rank Correlation
Coefﬁcient (PRCC) for analyzing the sensitivity analysis indexes of the parameters. LHS/PRCC was
ran and analyzed with a sample size of 100. The choice of this sample size is due to the fact that PRCC
produces accurate results for a lower sample size compared to other technique, such as eFAST [33].
Uncertainty and sensitivity analysis were performed on all non-dimensional system parameters in
the system (5) with the aim of determining the most sensitive parameters to the model. The parameter
baseline values in Table 1 were varied in the range of 25%. Figure 1 displays a bar graph of PRCCs
plotted against the homogeneous parameter value with tumor compartment as the baseline dependent
variable. The parameters that are signiﬁcantly positively correlated with tumor cells, at P < 0.05
level of signiﬁcance, are α1 , g while μ1 , γ3 , and ω are signiﬁcantly negatively correlated. An increase
in the production of normal cells α1 , leads to higher numbers of normal cells, thus the higher the
α1 , the higher the normal cells. While Figure 2 displays a bar graph of PRCCs plotted against the
homogeneous parameter value with tumor compartment as the baseline dependent variable. The most
sensitive parameters are shown to be P − values of s, γ2 , μ3 and ρ are less than 0.01.
110

Math. Comput. Appl. 2018, 23, 21

Figure 1. PRCCs of homogeneous model parameters with the tumor cells as the baseline variable. All
parameter values were varied in 25% of their baseline values in Table 1. The most sensitive parameters
are shown to be P − values of α1 , g, μ1 , γ3 and ω are less than 0.01.
Table 1. Description of parameters in the model.
Parameter

Symbol

Value

Per capita growth rate of normal cells
Per capita growth rate of tumor cells
Natural death rate of normal cells
Natural death rate of tumor cells
Rate of inhibition of normal cells
Tumor cells death rate due to immune response
Interaction coefﬁcient rate with immune response
Source rate of immune cells
Source rate of estrogen
Immune threshold rate
Immune response rate
Natural death rate of immune cells
Efﬁcacy of anti-cancer drug
Supplement for immune booster
Tumor formation rate as a result of DNA damage by excess estrogen
Immune suppression rate due to excess estrogen
Assume constant of value of decay factor
Natural death rate of estrogen
Death rate due to ketogenic diet
Constant rate of ketogenic diet

α1
α2
μ1
μ2
φ1
γ2
γ3
s

0.70
0.514
0.00003
0.01
6 × 10−8
3 × 10−6
1 × 10−7
1.3 × 104
1.3 × 104
3 × 105
0.20
0.29
0–1
0.01
0.20
0.002
0.1
0.97
2.0
0.5

111

ω
ρ
μ3
k
β
λ1
λ3
g
μ4
μ5
d

Unit

Refs

[12]
day−1
[5]
day−1
−
1
Assumed
day
−
1
[7]
day
[1]
day−1
−
1
[12]
day
−
1
[5]
day
[12]
day−1
−
1
est
day
[5]
day−1
−
1
[13]
day
[5]
day−1
Assumed
day−1
est
day−1
(Pg/mL)−1 day−1 est
est
day−1
est
day−1
[19]
day−1
est
day−1
est
day−1

Math. Comput. Appl. 2018, 23, 21

Figure 2. PRCCs of homogeneous model parameters with the tumor cells as the baseline variable.
All parameter values were varied in 25% of their baseline values in Table 1. The most sensitive
parameters are shown to be P − values of s, γ2 , μ3 and ρ are less than 0.01.

5. Analysis of Optimal Control
In this section, we formulated a corresponding optimal control problem for the model in the
system (5) considering ketogenic-diet and anti-cancer drugs as control interventions to minimize the
breast cancer and tumor burden at ﬁnal time. The units of cells were normalized in order for the
carrying capacity of normal cells to be kept above threshold of 0 ≤ t ≤ t f [34–36]. On the other hand,
the aim is to reduce the tumor-size which indicates the degree of the disease in the body and it requires
the application of as much anti-cancer drugs as much as possible. However, it also minimized the
systemic cost, which is based on the quantities of anti-cancer drugs, since large drug concentrations
can be harmful and cause toxic side effects. In brief, the drug doses were minimized because the
smaller the dose, the better. Then, we formulated the objective functional J1
J1 (u1 , u2 ) =

 T 
f
0

A1 T ( t ) + A2 E ( t ) +

1
1
A3 u21 (t) + A4 u22 (t) dt
2
2

(8)

System equations (5) is subject to:
dN
2
dt = Nα1 − μ1 N − φ1 TN − (1 − u1 ( t ))( λ1 NE )
dT
2
=
1
−
u
(
t
))
Tα
(
2
2 − μ2 T − γ2 MT
dt
 − μ5 T + (1 − u1(t))(λ1 NE)
ρMT
dM
=
sβ
+
−
γ
MT
−
μ
M
−
(1 − u1 (t)) λg3+ME
3
3
ω+T
E
dt
dE
dt = (1 − u1 ( t )) − μ4 E

(9)

J1 involves a quadratic control. In [37–41], it was established that quadratic control in the treatment
terms has the added beneﬁt of keeping the tumor in check both when it is small or large in size.
The authors further explained that the quadratic control allows for a weaker treatment to minimize
the toxic side-effects while permitting the system to maintain a low tumor size.
Furthermore, for us to address the tumor-to-therapy trade-off, we established the existence
of an optimal control; by following the approach in [37,41,42], which required an analysis of the
112

Math. Comput. Appl. 2018, 23, 21

super-solutions (that is, the upper bounds on solutions) of the system (5). As soon as we were able to
show that the system is bounded, we established the existence of an optimal control using a result
from [43]. In addition, we proved that there exists an optimal control that minimizes the objective
functional; using the established approach of [37–40,44]. We use the fact that super-solutions N, T, M,
E of
dN
dT
dt = Nα1 , dt = Tα2 (1 − u2 ),
(10)
ρMT dE
dM
dt = sβ + ω + T , dt = 1
are bounded on a ﬁnite time interval. Since the sub-solutions are zero, the result obtained shows that
our system is bounded. Since we have a bounded system, our next task was to establish the existence
of the optimal control using a result from [43].
Existence of an Optimal Control
Theorem
6.
Given
the
objective
functional
in
(8),
where
U
=
+ ∗
,
ui (t), Lebesguemeasure : 0 ≤ ui∗ (t) ≤ 1, ∀t ∈ [0, t] subject to system (9) with N (0) = N0 ,
T (0) = T0 , M (0) = M0 , and E(0) = E0 , then there exists an optimal control ui∗ such that
minu∗ (t)∈[0,1] J1 (ui∗ ) = J1 (ui∗ (t)) if the following conditions holds:
i

•
•
•

•

f is not empty;
The admissible control set U is closed and convex;
Each right hand side of the state system is continuous, is bounded above by the sum of the
bounded control and the state, and can be written as a linear function of ui∗ (t) with coefﬁcients
depending on time and the state;
The integrand of J1 (ui∗ ) is convex on U and is bounded below by −c2 + c1 u2 with c1 > 0.

Proof. Since the system (9) has bounded coefﬁcients and the solutions are bounded on the ﬁnite
time interval, we can apply the result of [45], to obtain the existence of the solution of the system (9).
Furthermore, we note that U is closed and convex by deﬁnition. For the third conditions, the right hand
side of the system (9) must be continuous. The right hand side is continuous since the denominators of
←

←

all fractions from the right hand side of the system consists solely of positive entities. We let φ (t, X ) be
right hand side of the system (9) except for the terms of ui∗ and deﬁne.
⎛
⎜
⎜
←
←
←
←
⎜
| f (t, X, ui∗ )| = φ (t, X ) + ⎜
⎜
⎝

0
λ1 NE
0
u1

⎞

⎛

⎟
⎟
←
⎟
⎟, with X =
⎟
⎠

⎜
⎜
⎜
⎜
⎜
⎝

N
T
M
E

⎞
⎟
⎟
⎟
⎟
⎟
⎠

using the boundedness of the solutions (10), we have
(
(
(
(
(
←
←
(
∗
| f (t, X, ui )| ≤ (
(
(
(
(

⎛

α1
⎜ 0
⎜
⎜
⎜ 0
⎜
⎝ 0

0
α2 (1 − u2 )
0
0

0
0
ρ
0

0
0
0
0

⎞ ( ( ⎛
( (
N
0
( (
⎟⎜ T ⎟ ( ( ⎜ (1 − u )λ NE
⎟⎜
⎟ ( ( ⎜
1 1
⎟⎜
⎟ ( ( ⎜
sβ
⎟⎜ M ⎟ ( + ( ⎜
⎟⎜
⎟ ( ( ⎜
⎠⎝ E ⎠ ( ( ⎝
−
u1
( (
( (
⎞⎛

⎞ (
(
(
⎟ (

⎟ (
←
←
⎟ (
⎟ ( ≤ c1 | X | + |ui∗ |
⎟ (
⎠ (
(
(

where c1 depends on the coefﬁcients of the system. For the fourth condition, we need to show
J (t, T, E, (1 − Pi )ui + Pi Vi ) ≤ (1 − Pi ) J (t, T, E, ui ) + Pi (t, T, E, Vi )

113

Math. Comput. Appl. 2018, 23, 21

we analyze the difference of
J (t, T, E, (1 − Pi )ui + Pi Vi ) − [(1 − Pi ) J (t, T, E, ui ) + Pi (t, T, E, Vi )]


= T (t) + E(t) + 2 u2i − 2Pi u2i + Pi2 u2i + Pi2 Vi2 − 2Pi2 Vi2 u2i + 2Pi Vi ui


− T (t) + E(t) + 2 u2i − 2 Pi u2i + 2 Pi Vi2

=

2

( Pi2 − Pi )(ui − Vi )2

since, Pi ∈ (0, 1) implies ( Pi2 − Pi ) < 0 and (ui − Vi )2 > 0 but ( Pi2 − Pi ) < 0, which implies 2 ( Pi2 −
Pi )(ui − Vi )2 is negative. This implies that,
J (t, T, E, (1 − Pi )ui + Pi Vi ) ≤ (1 − Pi ) J (t, T, E, ui ) + Pi (t, T, E, Vi )
Lastly,
T (t) + E(t) + u2i (t) ≥ u2i (t) ≥ −c + u2i (t)
2
2
2
which gives −c + 2 u2i (t) as the lower bound. With the existence of the optimal control established, we
now characterized the optimal control using the Pontryagin’s maximum principle [11]. The constants
A1 , A2 , A3 and A4 are a measure of the relative cost of the interventions over [0, T ]. The optimal control
problem is that of ﬁnding optimal functions (u1∗ (t), u2∗ (t)) such that
J1 (u1∗ (t), u2∗ (t)) = min J1 (u1 (t), u2 (t))
Ω

where

(11)

"
#
Ω = u1 (t)&u2 (t) : 0 ≤ u1 (t) ≤ u1max , 0 ≤ u2 (t) ≤ u2max , t ∈ [0, T f ]


Three different control strategies are explored. This approach can be used to test various options.
However, we only looked at the following three alternatives:

•
•
•

Strategy 1: Anti-cancer drug treatment control on tumor cells (control u1 (t) only);
Strategy 2: Ketogenic diet control on excess estrogen and tumor cells (control u2 (t) only);
Strategy 3: Anti-cancer drug and ketogenic diet treatment combined control on tumor cells growth
and excess estrogen (controls u1 (t) and u2 (t)).

Thus, strategies (1–3) use the objective functional (8). We assumed that there are practical
limitations on the maximum rate at which the anti-cancer treatment may be applied in a given time
period. We deﬁned the positive constant umax accordingly. We also deﬁne the set Ω of admissible
controls to be all Lebesgue measurable functions that take on values in the control set [13,46,47]
u = [0, umax ] almost everywhere on [0, T ]. We sought an optimal control u∗ ∈ Ω in (11) [13]. In order
to ﬁnd the optimal solutions, we ﬁrst traced the Lagrangian and Hamiltonian for the optimal control
problem (8) and (9). The Lagrangian of the optimal control problem is given by:
L( N, T, M, E, u1 , u2 ) = A1 T (t) + A2 E(t) +

1
1
A3 u21 (t) + A4 u22 (t)
2
2

(12)

For the purpose of the necessary conditions for optimal control functions with the help of
Pontryagin’s maximum principle [11]. We deﬁne the Hamiltonian, H for the control problem of
the system (8) and (9)
H = L( N, T, M, E, u1 , u2 ) + θ1 N + θ2 T + θ3 M + θ4 E

114

(13)

Math. Comput. Appl. 2018, 23, 21

where L is the Lagrangian function (12),
⎛

A1 T (t) + A2 E(t) + 12 A3 u21 (t) + 12 A4 u22 (t)


⎜
2
θ
+
⎜
1 Nα1 − μ1 N − φ1 TN − (1 − u1 ( t ))( λ1 NE )


⎜
2
λ1 NE)
⎜ +θ2 (1 −u2 (t)) Tα2 − μ2 T − γ2 MT − μ5 T + (1 − u1 (t))(
⎜
H=⎜
ρMT
λ3 ME
+θ3 sβ + ω
⎜
+ T − γ3 MT − μ3 M − (1 − u1 ( t )) g+ E
⎜
⎝
+θ4 ((1 − u1 (t)) − μ4 E)
where θ1 , θ2 , θ3 , θ4 are the adjoints variables for the states N, T, M, E. However, with the help of
Pontryagin’s Maximum Principle, we obtained a minimized Hamiltonian that minimizes the objective
function or cost functional. We applied Pontryagin’s Maximum Principle [11], to characterize the
optimal control pair u1∗ & u2∗ in the following result.
Theorem 7. Given optimal control variables u1∗ & u2∗ and N ∗ , T ∗ , M∗ & E∗ are corresponding optimal state
variables of the control system (8) and (9). Then there exists the adjoint variable θi = (θ1 , θ2 , θ3 , θ4 ) ∈ 4+ that
satisﬁes the following equations.
dθ1
dt
dθ2
dt
dθ3
dt
dθ4
dt

= 2θ1 μ1 N + φ1 θ1 T + (θ1 + θ2 )(1 − u2 (t))λ1 E − α1 θ1


= − A1 + θ1 φ1 N + θ2 (2Tμ2 + γ2 M + μ5 − α2 (1 − u2 )) + θ3 γ3 M −


= θ2 γ2 T − ρθ3 T + γ3 θ3 T + μ3 θ3 + θ3 (1 − u1 ) gλ+1 EE

= − A2 + (θ1 − θ2 )(1 − u1 )λ1 N − θ3 (1 − u1 ) λ3 Mg2 − θ4 μ4

ρωM
( ω + T )2

(14)

( g+ E)

with transversality conditions
θ1 ( T f ) = θ2 ( T f ) = θ3 ( T f ) = θ4 ( T f ) = 0
The corresponding optimal controls u1∗ & u2∗ are given as,

. .
1
θ3 λ3 M ∗ E ∗
θ2 λ1 N ∗ E ∗ + θ3 − θ1 λ1 N ∗ E ∗ −
,1
u1∗ = min max 0,
A3
g + E∗

(15)

. .
1
u2∗ = min max 0,
( θ2 α2 T ∗ ) , 1
A4

(16)

and

Proof. Let u1∗ & u2∗ be the given optimal control functions and N ∗ , T ∗ , M∗ & E∗ be the corresponding
optimal state variables of the system (9) that minimize the cost functional or objective (8). Then by
Pontryagin’s maximum principle [11], there exists adjoint variables (14) θ1 , θ2 , θ3 & θ4 which satisfy the
following equations
dθ1
∂H dθ2
∂H dθ3
∂H dθ4
∂H
dt = − ∂N , dt = − ∂T , dt = − ∂M , dt = − ∂E
with transversality conditions
θ1 ( T f ) = θ2 ( T f ) = θ3 ( T f ) = θ4 ( T f ) = 0
where H is the Hamiltonian and deﬁned as
H ( N, T, M, E, u1 , u2 , θ ) = L( N, T, M, E, u1 , u2 ) + θ1 N + θ2 T + θ3 M + θ4 E

115

Math. Comput. Appl. 2018, 23, 21

⎛

A1 T (t) + A2 E(t) + 12 A3 u21 (t) + 12 A4 u22 (t)


⎜
2
θ
+
⎜
1 Nα1 − μ1 N − φ1 TN − (1 − u1 ( t ))( λ1 NE )


⎜
2
λ1 NE)
⎜ +θ2 (1 −u2 (t)) Tα2 − μ2 T − γ2 MT − μ5 T + (1 − u1 (t))(
⎜
H=⎜
ρMT
λ3 ME
+θ3 sβ + ω
⎜
+ T − γ3 MT − μ3 M − (1 − u1 ( t )) g+ E
⎜
⎝
+θ4 ((1 − u1 (t)) − μ4 E)
from the optimality condition, we have
∂H
∂u1

= 0, at u1 = u1∗ and

∂H
∂u2

= 0, at u2 = u2∗

which implies that
0=

∂H
λ ME
= A3 u1 + θ1 λ1 NE − θ2 λ1 NE + θ3 3
− θ4
∂u1
g+E
∂H
= A4 u2 − θ2 α2 T
∂u1

0=
Hence, we obtain (see [10])
u1∗ =

.
1
λ3 ME
θ1 λ1 NE + θ4 − θ1 λ1 NE − θ3
A3
g+E

(17)

1
{ θ2 α2 T }
A4

(18)

u2∗ =

Thus we have (17) and (18).
By standard control arguments involving the bounds on the controls, we conclude that (15) and
(16) can be written in this form
⎛
⎜
⎜
u1∗ = ⎜
⎝

1
A3



0
θ1 λ1 NE + θ4 − θ1 λ1 NE − θ3 λg3+ME
E



1

and

⎛
u2∗

⎜
=⎝

0
1
∗
A4 ( θ 2 α 2 T )

1


θ1 λ1 NE + θ4 − θ1 λ1 NE − θ3 λg3+ME
<0
E


≤1
i f 0 ≤ A13 θ1 λ1 NE + θ4 − θ1 λ1 NE − θ3 λg3+ME
E


λ3 ME
1
i f A3 θ1 λ1 NE + θ4 − θ1 λ1 NE − θ3 g+ E > 1
if

1
A3



i f A1 (θ2 α2 T ∗ ) < 0
4
i f 0 ≤ A1 (θ2 α2 T ∗ ) ≤ 1
4
i f A1 (θ2 α2 T ∗ ) > 1
4


However, we discuss the numerical solution of the optimality system and the corresponding
results of varying the optimal controls u1 & u2 the parameter choices, and the interpretations from
various cases.
6. Numerical Simulations and Discussion
A picture of the dynamical behavior of breast cancer cells in the presence of normal cells, tumor
cells, immune cells, and estrogen is given by the numerical simulations of the model (5). The optimal
control is acquired by solving the optimality system of four ordinary differential equations from the
state variables and the adjoint system. An iterative scheme is used to solve the optimality system.
All the numerical simulations were executed in MAPLE 18. We employed the forward-backward
scheme method, beginning with an initial guess for optimal controls and solved the optimal state
system forward in time and after that solved the adjoint state system backward in forward using

116

Math. Comput. Appl. 2018, 23, 21

the ﬁnite difference scheme in MAPLE. The two controls were then updated by using a convex
combination of the previous controls as well as the characterization (17) and (18). The entire process
was repeated until the values of the unknown at the previous iterations were closed to the one at
the current iteration [39,41]. Key parameters are also noted in stabilizing the model in system (5),
for example: ketogenic diet, anti-cancer, and immune booster. The initial values of variables are
N(0) = 2000, T(0) = 800, M(0) = 500, E(0) = 20 and s = 1.3 × 104 adopted from [12]. All parameter
values used for the numerical simulation are stated in Table 1 above.
Figure 3, indicates that the introduction of a ketogenic diet results in a reduction of activities of
cancer cells and we also note that too much of a ketogenic diet will result in ketoacidosis. Ketoacidosis
is the combination of ketosis and acidosis. Ketosis is the accumulation of substances called ketone
bodies and acidosis is the increased acidity of the blood which can cause frequent urination (Polyuria),
poor appetite, and a loss of consciousness. Therefore, our ketogenic diet’s parameter rate is best at
d = 0.6 and it can complement the activity of the anti-cancer drug (Tamoxifen). Figure 4, shows
the impact of anti-cancer drugs in reducing the production of excess estrogen in the system, but
when there is less production of estrogen there will not be a rapid activation of the growth factor
that expresses breast normal cells. However, the rapid production of estrogen results in abnormal
breast cells expression, which will lead to breast cancer. Figure 5 shows the obvious effectiveness of
anti-cancer drugs on tumor cells when there is no supply of nutrient or glucose to cancer cells.
Furthermore, Figure 6 illustrates that the red line β = 0 shows that during cancer formation
the activities of both innate and adaptive reduces drastically, which is due to the expression of other
proteins apart from those proteins that are responsible for the activation of the immune response,
such as an immune booster introduced to the system, which reactivates the activities of the immune
response towards the cancer cells.
The presence of abnormal estrogen level without anti-cancer drugs or a ketogenic diet will lead the
system into critical condition and became unstable as shown in Figure 7. However, the system became
stable as we introduced treatments, such as chemotherapy and the ketogenic diet as represented
in Figure 8. In addition, Figure 9, indicates that there is DNA damage at λ1 = 0, which occurs
naturally as a result of metabolic or hydrolytic processes. It is as a result of the Tumor Suppressor
Gene (TSG), which is able to control the activity of DNA gene repair successfully. On the other hand,
at λ1 = 0.2, 0.4, 0.6 showed that TSG (such as BRCA 1, BRCA 2, P53) compromised the pathway that
leads cells to grow uncontrollably and later form a tumor or it leads to accelerated aging.

Figure 3. The variation of proportion of Tumor cell population for different values of d with other
parameters ﬁxed.

117

Math. Comput. Appl. 2018, 23, 21

Figure 4. The variation of proportion of Estrogen level population for different values of k with other
parameters ﬁxed.

Figure 5. The variation of proportion of Tumor cell population for different values of k with other
parameters ﬁxed.

Figure 6. The variation of proportion of Immune booster population for different values of β with
other parameters ﬁxed.

118

Math. Comput. Appl. 2018, 23, 21

Figure 7. The variation of Total cells population depicted as locally asymptotically unstable.

Figure 8. The variation of Total cells population depicted as locally asymptotically stable.

Figure 9. The variation of proportion of Normal cell population for different values of λ1 with other
parameters ﬁxed.

119

Math. Comput. Appl. 2018, 23, 21

However, the mathematical analysis of the model produced six equilibrium points. All the
points have epidemiological implications in relation to explaining the dynamics of breast cancer
growth. P0 represents the situation where there is tumor-free equilibrium, that is when only tumor cell
population has died off due to competition with other cells. Pd1 represents Type 1 dead equilibrium
point where both normal cells and tumor cells die-off as a result of breast tissue removal through
mastectomy surgery or death. This is because overtime the cancer cells which are depending on
estrogen to develop into independent cells that grow regardless of estrogen receptors. Pd2 could be
described by Type 2 dead equilibrium point where normal cells were only forced to extinction leaving
the tumor cells surviving. Pd3 represent Type 3 dead equilibrium point which means immune system
is weak and it cannot ﬁght the tumor cells which eventually overpower normal cells and forced it to
extinction. Pd4 show that Type 4 dead equilibrium point where ketogenic diet is not effective, immune
booster is not active which lead to tumor cell over-compete normal cells as a result of infusion of excess
estrogen to the body system.
We categorised this as ”dead” because biologically there is no recovery of damaged normal cells
since they have died off of the cell population. It could be as a result of anti-cancer drug that destroy
red blood cells which affected normal cells.
Effects of Control on the System (9)
By numerical simulation, optimal single control of anti-cancer drugs measure u1 and
ketogenic-diet optimal control measure u2 are shown in Figure 10a,b respectively; where (red dots
line) represented tumor cells and (solid green line) represented normal cells. Figure 10c is the use of
combination of two control therapies which have signiﬁcant impact on the increase of normal cells
population against time. However, all the strategies are effectively restrain the tumor growth, they
cannot totally eliminate a large tumor in 100 days. In Figure 11, optimal control using anti-cancer
drugs and ketogenic diet as we optimized the system (54) with the objective function J for breast cancer
model. It was observed that the combination of the two controls resulted in appreciable decreases in
the number of tumor cells population in the presence of control (solid green line) while (dots red line)
in the case of uncontrolled. However, tumor growth is driven to a very low but non-zero level.
Furthermore, it was noticed from Figure 12, that the level of estrogen was reduced drastically
in the presence of controls (solid green line) against the constant increase level of estrogen (dots red
line) in uncontrolled cases. However, anti-cancer drugs (for example Tamoxifen) blocks estrogen
receptors on breast cells, that is, it stops estrogen from connecting to the cancer cells while tamoxifen
also acts like an anti-estrogen in breast cells; it acts like an estrogen in other tissues like the uterus
and the bones [48]. In addition, ketosis also regulating hormonal imbalance [8,27]. On the other hand,
Figure 13, shows the effect of immune response with and without controls. Immune response can help
to ﬁght cancer cells while immune system recognize cancer cells as abnormal and kill them. However,
this may not be enough to eliminate cancer cells from the body.

120

Math. Comput. Appl. 2018, 23, 21


(a)ȱ


(b)ȱ

(c)ȱ

Figure 10. Simulation result of the model (9), showing normal cell population against time with and
without control.

121

Math. Comput. Appl. 2018, 23, 21


(a)ȱ


(b)ȱ


(c)ȱ
Figure 11. Simulation result of the model (9), showing tumor cell population against time with and
without control.

122

Math. Comput. Appl. 2018, 23, 21


(a)ȱ


(b)ȱ


(c)ȱ
Figure 12. Simulation result of the model (9), showing estrogen level against time with and
without control.
123

Math. Comput. Appl. 2018, 23, 21

(a)ȱ

(b)ȱ


(c)ȱ

Figure 13. Simulation result of the model (9), showing immune response against time with and
without control.

7. Conclusions
A four-dimensional compartmental deterministic model was designed and used to monitor
the dynamics of breast cancer. The existing model in [19] was extended to incorporate treatments,
ketogenic diet, and an immune booster. The system (5) was rigorously analyzed to gain insight into
their dynamical behaviors. The study shows the following:

124

Math. Comput. Appl. 2018, 23, 21

•

•

•

The conditions of stability of the tumor-free equilibrium (TFE) was established and the system is
only local asymptotically stable (LAS) if a certain threshold quantity, known as the reproductive
number, is less than unity (R0 < 1). It implies that the number of tumor cells in the body will be
brought to zero if proper treatments and a ketogenic diet that can force make the threshold to a
value less than unity are monitored.
An individual has the chance of developing breast cancer depending on the level of the immune
system (s), the efﬁcacy of the anti-cancer drug (k) and the rate at which the ketogenic diet (d) is
being taken to ﬁght tumor cells. We also found out that the presence of excess estrogen in system
makes it unstable, as depicted in Figure 7. This implies that any additional estrogen quantity
introduced into the body through the birth control, and hormone replacement therapy (HRT)
enhances the rate of tumor formation. Thus, the development of breast cancer is certain.
The transition from normal cells class to tumor cells class plays a crucial role in breast cancer
dynamics (λ1 ). More tumor is formed if the DNA is damaged or altered as a result of excess
estrogen, which reduces the number of normal cells being produced by red blood cells.

Furthermore, the results show that tumor cell formation depend on the level of excess estrogen
introduced into the body system. It must be noted that the ability to resist changes in structure and
amount of estrogen released during natural biological processes is dependent on an individual’s DNA.
Such biological processes include: premenopausal and menopause stages. Other risk factors may also
be incorporated in the model for future work, which might generate different results.
However, the focus of this study has been identifying the advantages that come with the process
of breast cancer relief policies that combined anti-cancer drugs and ketogenic diet procedures to knit
the circumstances of unlimited and limited resources. The effort to moderate the effect of breast
cancer on the body can be fruitful, especially if our basic reproductive number R0 is properly analyzed.
In addition, moderation is conceivable if the planning of intercessions is sufﬁciently quick and if the
arrangement includes the utilization of more than one therapy procedure. No therapy (ketogenic diet
and anti-cancer drug) is possible, unless minimal resources are accessible.
8. Further Research
Breast cancer is a health challenge disease, especially among women world-wide. This study
explored the use of a quadratic control law to formulate the optimal control problem for the objective
function. Hence, the authors hope to conduct further research into the application of a switching
function and to investigate the side-effects of anti-cancer drugs by employing a linear control law to
formulate the optimal control problem for further study.
Author Contributions: The authors contributed towards mathematical model formulation; Segun Isaac Oke
analyzed the model both analytical and numerical simulation.
Acknowledgments: The corresponding author appreciate National Research Foundation (NRF), South Africa for
the grant towards my PhD; Grant Number: 109824. The authors also acknowledges the support of Research Ofﬁce
of University of Zululand for providing the funds for the publication. The authors are grateful to Adeniyi Michael
(LASPOTECH, Nigeria) and Chinaza Uleanya (Unizulu) for their useful comments in the preparation of the
manuscript. The authors are grateful to the anonymous Reviewers and the Handling Editor for their constructive
comments, which have enhanced the paper.
Conﬂicts of Interest: The authors declare no conﬂicts of interest.

References
1.
2.
3.

Evans, C.W. The invasion and metastatic behaviour of malignant cells. In The Metastatic Cell: Behavior and
Biochemistry; Chapman and Hall: London, UK, 1991; pp. 137–214.
National Cancer Registry of South Africa. Available online: http://www.cansa.org.za/ﬁles/2015/10/NCR_
Final_2010_tables1.pdf (accessed on 24 April 2018).
World Health Organization. Global Action Plan for the Prevention and Control on NCDs; World Health
Organization: Geneva, Switzerland, 2014.
125

Math. Comput. Appl. 2018, 23, 21

4.
5.
6.

7.
8.

9.
10.
11.
12.
13.
14.

15.

16.
17.
18.
19.
20.
21.

22.
23.
24.

25.
26.
27.
28.

Abernathy, K.; Abernathy, Z.; Baxter, A.; Stevens, M. Global Dynamics of a Breast Cancer Competition Model.
Differ. Equ. Dyn. Syst. 2017, 3, 1–15. [CrossRef]
Patel, M.I.; Nagl, S. The Role of Model Integration in Complex Systems Modelling: An Example from Cancer Biology;
Springer: Berlin, Germany, 2010.
Allen, B.G.; Bhatia, S.K.; Anderson, C.M.; Eichenberger-Gilmore, J.M.; Sibenaller, Z.A.; Mapuskar, K.A.;
Schoenfeld, J.D.; Buatti, J.M.; Spitz, D.R.; Fath, M.A. Ketogenic diets as an adjuvant cancer therapy: History
and potential mechanism. Redox Biol. 2014, 2, 963–970. [CrossRef] [PubMed]
Gilbert, D.L.; Pyzik, P.L.; Freeman, J.M. The ketogenic diet: Seizure control correlates better with serum
β-hydroxybutyrate than with urine ketones. J. Child Neurol. 2000, 15, 787–790. [CrossRef] [PubMed]
Westman, E.C.; Yancy, W.S.; Mavropoulos, J.C.; Marquart, M.; McDufﬁe, J.R. The effect of a low-carbohydrate,
ketogenic diet versus a low-glycemic index diet on glycemic control in type 2 diabetes mellitus. Nutr. Metab.
2008, 5, 36. [CrossRef] [PubMed]
Kareva, I.; Berezovskaya, F. Cancer immunoediting: A process driven by metabolic competition as a
predator–prey–shared resource type model. J. Theor. Biol. 2015, 380, 463–472. [CrossRef] [PubMed]
Lenhart, S.; Workman, J.T. Optimal Control Applied to Biological Models; CRC Press: Boca Raton, FL, USA, 2007.
Pontryagin, L.S. Mathematical Theory of Optimal Processes; CRC Press: Boca Raton, FL, USA, 1987.
De Pillis, L.G.; Radunskaya, A. A mathematical tumor model with immune resistance and drug therapy:
An optimal control approach. Comput. Math. Methods Med. 2001, 3, 79–100. [CrossRef]
D’Onofrio, A.; Ledzewicz, U.; Maurer, H.; Schättler, H. On optimal delivery of combination therapy for
tumors. Math. Biosci. 2009, 222, 13–26. [CrossRef] [PubMed]
Kermack, W.O.; McKendrick, A.G. A contribution to the mathematical theory of epidemics. In Proceedings
of the Royal Society of London A: Mathematical, Physical and Engineering Sciences, London, UK,
1 August 1927; The Royal Society: London, UK, 1927; Volume 115, pp. 700–721.
Kermack, W.O.; McKendrick, A.G. Contributions to the mathematical theory of epidemics: V. Analysis
of experimental epidemics of mouse-typhoid; a bacterial disease conferring incomplete immunity.
Epidemiol. Infect. 1939, 39, 271–288. [CrossRef]
Cai, P.; Tang, J.S.; Li, Z.B. Analysis and controlling of Hopf Bifurcation for chaotic Van der Pol-Dufﬁng
system. Math. Comput. Appl. 2014, 19, 184–193. [CrossRef]
Bernoulli, D. Essai d’une nouvelle analyse de la mortalité causée par la petite vérole et des avantages de
l’inoculation pour la prévenir. Hist. Acad. R. Sci. (Paris) Mém. Math. Phys. Mém. 1760, 1, 1–45.
De Pillis, L.G.; Radunskaya, A.E.; Wiseman, C.L. A validated mathematical model of cell-mediated immune
response to tumor growth. Cancer Res. 2005, 65, 7950–7958. [CrossRef] [PubMed]
Mufudza, C.; Walter, S.; Chiyaka, E.T. Assessing the effects of estrogen on the dynamics of breast cancer.
Comput. Math. Methods Med. 2012, 2012, 473572. [CrossRef] [PubMed]
Malinzi, J.; Eladdadi, A.; Sibanda, P. Modelling the spatiotemporal dynamics of chemovirotherapy cancer
treatment. J. Biol. Dyn. 2017, 11, 244–274. [CrossRef] [PubMed]
Swierniak, A.; Krzeslak, M.; Student, S.; Rzeszowska-Wolny, J. Development of a population of cancer cells:
Observation and modeling by a mixed spatial evolutionary games approach. J. Theor. Biol. 2016, 405, 94–103.
[CrossRef] [PubMed]
Wu, C.H.; Motohashi, T.; Abdel-Rahman, H.A.; Flickinger, G.L.; Mikhail, G. Free and protein-bound plasma
estradiol-17β during the menstrual cycle. J. Clin. Endocrinol. Metab. 1976, 43, 436–445. [CrossRef] [PubMed]
Kumar, A.; Srivastava, P.K. Vaccination and treatment as control interventions in an infectious disease model
with their cost optimization. Commun. Nonlinear Sci. Numer. Simul. 2017, 44, 334–343. [CrossRef]
Kimmel, M.; Swierniak, A. Control theory approach to cancer chemotherapy: Beneﬁting from phase
dependence and overcoming drug resistance. In Tutorials in Mathematical Biosciences III; Springer:
Berlin/Heidelberg, Germany, 2006; pp. 185–221.
Buonomo, B. Modeling itns usage: Optimal promotion programs versus pure voluntary adoptions.
Mathematics 2015, 3, 1241–1254. [CrossRef]
Pinho, S.T.R.D.; Freedman, H.I.; Nani, F. A chemotherapy model for the treatment of cancer with metastasis.
Math. Comput. Model. 2002, 36, 773–803. [CrossRef]
American Cancer Society. Breast Cancer; American Cancer Society: Atlanta, GA, USA, 2013.
Gatenby, R.A. The potential role of transformation-induced metabolic changes in tumor-host interaction.
Cancer Res. 1995, 1766, 4151–4156.
126

Math. Comput. Appl. 2018, 23, 21

29.
30.

31.
32.
33.
34.
35.
36.
37.

38.
39.
40.
41.
42.
43.
44.
45.
46.
47.
48.

Neves, A.A.; Brindle, K.M. Assessing responses to cancer therapy using molecular imaging.
Biochim. Biophys. Acta 2006, 1766, 242–261. [CrossRef] [PubMed]
Valayannopoulos, V.; Bajolle, F.; Arnoux, J.B.; Dubois, S.; Sannier, N.; Baussan, C.; Petit, F.; Labrune, P.;
Rabier, D.; Ottolenghi, C.; et al. Successful treatment of severe cardiomyopathy in glycogen storage disease
type III With D, L-3-hydroxybutyrate, ketogenic and high-protein diet. Pediatr. Res. 2011, 70, 638–641.
[CrossRef] [PubMed]
De Leenheer, P.; Aeyels, D. Stability properties of equilibria of classes of cooperative systems. IEEE Trans.
Autom. Control 2001, 46, 1996–2001. [CrossRef]
Perko, L. Differential Equations and Dynamical Systems; Springer: Berlin, Germany, 2013; Volume 7.
Marino, S.; Hogue, I.B.; Ray, C.J.; Kirschner, D.E. A methodology for performing global uncertainty and
sensitivity analysis in systems biology. J. Theor. Biol. 2008, 254, 178–196. [CrossRef] [PubMed]
Acar, E.; Aplak, H.S. A Model Proposal for a Multi-Objective and Multi-Criteria Vehicle Assignment Problem:
An Application for a Security Organization. Math. Comput. Appl. 2016, 21, 39. [CrossRef]
Madhi, M.; Mohamed, N. An Initial Condition Optimization Approach for Improving the Prediction Precision
of a GM (1,1) Model. Math. Comput. Appl. 2017, 22, 21. [CrossRef]
Zhuang, K. Spatiotemporal Dynamics of a Delayed and Diffusive Viral Infection Model with Logistic Growth.
Math. Comput. Appl. 2017, 22, 7. [CrossRef]
De Pillis, L.G.; Gu, W.; Fister, K.R.; Head, T.A.; Maples, K.; Murugan, A.; Neal, T.; Yoshida, K. Chemotherapy
for tumors: An analysis of the dynamics and a study of quadratic and linear optimal controls. Math. Biosci.
2007, 209, 292–315. [CrossRef] [PubMed]
De Pillis, L.G.; Fister, K.R.; Gu, W.; Head, T.; Maples, K.; Neal, T.; Murugan, A.; Kozai, K. Optimal control of
mixed immunotherapy and chemotherapy of tumors. J. Biol. Syst. 2008, 16, 51–80. [CrossRef]
Kirschner, D.; Lenhart, S.; Serbin, S. Optimal control of the chemotherapy of HIV. J. Math. Biol. 1997, 35,
775–792. [CrossRef] [PubMed]
Swan, G.W. Role of optimal control theory in cancer chemotherapy. Math. Biosci. 1990, 101, 237–284.
[CrossRef]
Ratajczyk, E.; Ledzewicz, U.; Schättler, H. Optimal Control for a Mathematical Model of Glioma Treatment
with Oncolytic Therapy and TNF-α Inhibitors. J. Optim. Theory Appl. 2018, 456–477. [CrossRef]
Di Liddo, A. Optimal Control and Treatment of Infectious Diseases. The Case of Huge Treatment Costs.
Mathematics 2016, 4, 21. [CrossRef]
Fleming, W.H.; Rishel, R.W. Deterministic and Stochastic Optimal Control; Springer: Berlin, Germany, 2012;
Volume 1.
Ghaddar, C.K. Novel Spreadsheet Direct Method for Optimal Control Problems. Math. Comput. Appl. 2018,
23, 6. [CrossRef]
Lukes, D.L. Differential Equations: Classical to Controlled; Elsevier: New York, NY, USA, 1982.
Schattler, H.; Ledzewicz, U. Optimal Control for Mathematical Models of Cancer Therapies; Springer: New York,
NY, USA, 2015.
Otieno, G.; Koske, J.K.; Mutiso, J.M. Cost effectiveness analysis of optimal malaria control strategies in kenya.
Mathematics 2016, 4, 14. [CrossRef]
Davies, C.; Pan, H.; Godwin, J.; Gray, R.; Arriagada, R.; Raina, V.; Abraham, M.; Medeiros Alencar, V.H.;
Badran, A.; Bonﬁll, X.; et al. Long-term effects of continuing adjuvant tamoxifen to 10 years versus stopping
at 5 years after diagnosis of oestrogen receptor-positive breast cancer: ATLAS, a randomised trial. Lancet
2013, 381, 805–816, Erratum in 2013, 381, 804. [CrossRef]
© 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

127

Article

Cost-Effective Analysis of Control Strategies to
Reduce the Prevalence of Cutaneous Leishmaniasis,
Based on a Mathematical Model
Dibyendu Biswas 1 , Suman Dolai 1 , Jahangir Chowdhury 1 , Priti K. Roy 1 and
Ellina V. Grigorieva 2, *
1

2

*

Centre for Mathematical Biology and Ecology, Department of Mathematics, Jadavpur University,
Kolkata 700032, India; dbiswasju@gmail.com (D.B.); suman.dolai18@gmail.com (S.D.);
jahangirchowdhury.ju@gmail.com (J.C.); pritiju@gmail.com (P.K.R.)
Department of Mathematics and Computer Sciences, Texas Womans University, Denton, TX 76204, USA
Correspondence: egrigorieva@twu.edu

Received: 17 May 2018; Accepted: 16 July 2018; Published: 25 July 2018

Abstract: Leishmaniasis is a neglected tropical vector-borne epidemic disease, and its transmission
is a complex process. Zoonotic transmission to humans or animals occurs through the bites of
female Phlebotominae sand ﬂies. Here, reservoir is considered as a major source of endemic pathogen
pool for disease outbreak, and the role of more than one reservoir animal becomes indispensable.
To study the role of the reservoir animals on disease dynamics, a mathematical model was constructed
consisting of susceptible and infected populations of humans and two types of reservoir (animal) and
vector populations, respectively. Our aim is to prevent the disease by applying a control theoretic
approach, when more than one type of reservoir animal exists in the region. We use drugs like sodium
stibogluconate and meglumine antimoniate to control the disease for humans and spray insecticide
to control the sand ﬂy population. Similarly, drugs are applied for infected reservoir animals of Types
A and B. We calculated the cost-effectiveness of all possible combinations of the intervention and
control policies. One of our ﬁndings is that the most cost-effective case for Leishmania control is the
spray of insecticides for infected sand ﬂy vector. Alternate strategic cases were compared to address
the critical shortcomings of single strategic cases, and a range of control strategies were estimated
for effective control and economical beneﬁt of the overall control strategy. Our ﬁndings provide
the most innovative techniques available for application to the successful eradication of cutaneous
leishmaniasis in the future.
Keywords: vector borne disease; cutaneous leishmaniasis (CL); transmission probability; reservoir
population; insecticide spraying; cost-effectiveness

1. Introduction
The disease leishmaniasis is caused by protozoan parasites from the genus Leishmania
(Kinetoplastida: Trypanosomatidae) in their vertebrate hosts, including humans. Leishmaniasis
is a neglected tropical disease [1] in the WHO list. Leishmania parasites are transmitted to other
mammalian species through the vector bites of infected female phlebotomine sand ﬂies [2,3]. Seventy
animal species, including humans, have been found as natural reservoir hosts of Leishmania parasites
[4]. Currently, the disease is endemic in eighty-eight countries [5,6]. These countries (e.g., Afghanistan,
Algeria, Iran, Iraq, Pakistan, Brazil, Peru, etc.) account for more than 90% of the global cases of
cutaneous leishmaniasis [7,8]. It is estimated that 12 million cases, comprising 1.5 to 2 million new cases,
occur globally each year [9]. In India, Bihar and Rajasthan are the main affected states. The parasite’s
life-cycle occurs alternatively between a mammalian host and insect vectors. These vectors are
Math. Comput. Appl. 2018, 23, 38; doi:10.3390/mca23030038 128

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 38

phlebotomine sand ﬂies (Diptera: Psychodidae, subfamily Phlebotominae). The Leishmania parasite
thrives and spends a part of its life cycle within the female sand ﬂies. The parasites are found
alternatively as ﬂagellated, motile promastigotes in the alimentary tract of phlebotomine sand
ﬂies, or as obligate intracellular aﬂagellate amastigotes in the phagolysosomes of mammalian host
macrophages. Outside the vertebrate host, the Leishmania life cycle is conﬁned to the digestive tract of
sand ﬂies, which become aggressively active during the warmer months in humid environments. It is
established that mammals of several orders can be infected by the Leishmania sp. Natural Leishmania
infections are found in a range of non-human mammal hosts (mainly marsupials, rodents, edentates,
and carnivores). Reservoir implication is difﬁcult because it is often speciﬁc to the nature of the local
domain of animal context, and it depends on many variables (e.g., host abundance and distribution,
infectiousness to the sand ﬂy vector), which are rarely investigated. Domestic animals such as dogs
can serve as reservoirs for the parasite. Transmission can occur from dog to sand ﬂy, and from sand
ﬂy to human. Another important reservoir is the rodent population, which can serve as the cryptic
reservoir for the persistence of the endemic state of infection, as recently suggested by many new
research works. Recent evidence suggests that increasing species richness can lower or enhance the
infection rate, which must be accounted for in this endemic state of disease despite the measures
taken to control it [10]. Note that the prevalence of hosts in the affected region can inﬂuence disease
transmission rates. We thus have considered disease transmission by the cryptic reservoirs, which
are normally beyond control program coverage. The presence of more than two reservoir animals
apart from the human host can exert a signiﬁcant dilution effect due to selective pressure of host
preference. It is widely believed that rodents can serve as the cryptic reservoir host in both urban
and rural areas where they can outnumber the domestic animal population swiftly and help in the
survival of the Leishmania pathogen. Recent evidence of this has come from Tunisia [11], where rodents
are a potential reservoir of Leishmania pathogens. Presently, four clinical forms for leishmaniasis
exist. These are cutaneous leishmaniasis (CL), mucocutaneous leishmaniasis (known as espundia),
visceral leishmaniasis (known as kala-azar), and post-kala-azar dermal leishmaniasis (PKDL) [2,12].
Transmission modes are of zoonotic and/or anthroponotic type for cutaneous leishmaniasis (CL).
In anthroponotic-type transmission, the sand ﬂies are infected by a human during a blood meal,
while in zoonotic transmission cycles animals serve as potential reservoir hosts [13].
The clinical symptom of CL is painless skin ulcers. Dermal changes may appear in only one to two
weeks after being bitten by the sand ﬂy. However, sometimes symptoms will not appear for months or
years. The disease starts as an erythematous papule which gradually increases in size and turns into
a nodule. It ultimately ulcerates and crusts over. The edge is frequently raised and distinct [9]. These are
primarily ulcers in the mouth and nose, or on the lips. Other symptoms are stuffy or runny nose,
nose bleeds, asphyxia. The fundamental prevention therapy for cutaneous leishmaniasis is pentavalent
antimonial compounds. Presently, oral and topical prevention management are in practice.
Leishmania amazonensis is an intracellular protozoan parasite responsible for chronic cutaneous
leishmaniasis. Cutaneous leishmaniasis is often self-healing, particularly in infection with L. major
and L. mexicana. Therefore, prevention is not always recommended. However, if lesions do not
spontaneously heal within six months or if the lesions are especially disﬁguring and in a cosmetically
sensitive area, prevention is indicated. Even though lesions may heal eventually in the absence
of prevention, the process is often long and produces signiﬁcant scarring, thereby justifying the
use of chemotherapy. The goal of preventing cutaneous leishmaniasis is twofold: the eradication
of amastigotes as well as reducing the size of the lesions so that healing will take place with
minimal scarring.
Mathematical models can serve as a new tool to investigate the fate of infection dynamics
with a multi-host environment. However, theoretical works on this topic are very rare, motivating
us to study such dynamics with two different reservoir animals, as well as human and vector
populations. Bacaer et al. [14] proposed a mathematical model taking the seasonal ﬂuctuations into
account in order to formulate an age-structured model and ﬁnd the basic reproduction number

129

Math. Comput. Appl. 2018, 23, 38

based on periodic backgrounds. They suggested that the epidemic could be prevented if the vector
population was reduced. Chaves et al. [3] studied a mathematical model for cutaneous leishmaniasis
in the Americas and found conditions for the commencement of the infection. They presented a simple
model to represent the dynamics of transmission densities of infected incidental hosts, infected
reservoir hosts, and infected vectors. Miller and Huppert [10] studied multiple hosts of vector-borne
infectious diseases from a signiﬁcant fraction of the global infectious disease burden. They explored
the relationship between host diversity, vector behavior, and disease risk. They developed a new
dynamic model which included two distinct host species and one vector species with variable host
preferences. They discussed the role of more than one reservoir population and how it could affect the
disease transmission depending on host preferences and biting intensity. Biswas et al. [15] developed
different models of cutaneous leishmaniasis consisting of different aspects of the disease transmission.
We have previously considered susceptible and infected human and vector populations with the target
of reducing the vector population so that the disease can be controlled. Then, considering the role of
the macrophage for developing the disease intracellularly, we considered another stage of infection,
as there is a transformation from the promastigote stage to a mastigote stage. Finally, we modelled the
application of optimal drug dose to the infected macrophage cell and parasite populations in order to
control the parasite population in the macrophage cells [16]. We have also studied a model through an
impulsive strategy in a ﬁxed time interval to observe perfect drug adherence behavior. The model has
been analyzed to determine the threshold time interval and minimum effectiveness of drugs and also
to observe the effect of an impulsive strategy in a non-ﬁxed time interval on the system [17]. Recently,
Biswas et al. [18] developed a model for evaluating the utility of awareness in controlling cutaneous
leishmaniasis in affected regions where social mass media is present.
A recent mathematical model has focused on the transmission dynamics for anthroponotic
cutaneous leishmaniasis in human populations and its control [19]. However, cutaneous leishmaniasis
studies involving two reservoir animals has not yet been explored in the epidemiological literature.
In this article, our study was motivated by the work of Huppert [10] and Chaves [3] using a set of
ordinary differential equations as the foundation of the mathematical study of cutaneous leishmaniasis
with two reservoir populations. We modelled the use of drugs for the human host, therapeutics for
the animal reservoir, and insecticide application for the vector population, and studied the system
using an optimal control technique. The aim of the optimal control problem was to minimize infection
with cumulative control strategies to exert maximum beneﬁt to the affected hosts. We also considered
different control strategies and examined the impact of different combinations of these measures in
controlling the disease. We used Pontryagin’s minimum principle to derive the necessary conditions
for the optimal control of the disease. By calculating the cost of drugs in each of the different strategies
along with investigating the cost-effectiveness of the four control strategies under consideration,
we determined the most effective strategy for eliminating leishmaniasis with minimum costs. The next
section describes the formulation of the general model.
2. Model Formulation through Schematic Diagram and Its Validation
To formulate the mathematical model of cutaneous leishmaniasis, two types of animal reservoirs
were considered: domestic and wild. For example, dog is the domestic animal reservoir for
leishmaniasis (e.g., domestic dogs play the role of a reservoir host of Leishmania donovani in eastern
Sudan), and some species of rodent (e.g., great gerbil, the crab-eating fox (Cerdocyon thous), opossums
(Didelphis species), etc.) are wild animals worth consideration. Humans are in closer contact with
domestic animals than they are with wild animals. We considered rodents to be cryptic reservoirs
in nature, so they are away from human contact with respect to the domestic animals (e.g., dog).
Furthermore, the recruitment rates and natural death rates of domestic animals and wild animals are
different. For this reason, we considered two different classes of reservoirs: Type A and Type B.

130

Math. Comput. Appl. 2018, 23, 38

We considered the transmission of the disease between four distinct populations: the human host
population, Type A animals, Type B animals, and the vector population. The total human population
was considered as:
S H ( t ) + I H ( t ),
where S H (t) denotes the susceptible individuals and IH (t) denotes the individuals infected with
cutaneous leishmaniasis.
Reservoir classes are of two types. They are susceptible animals of Type A (i.e., S A (t)) and
susceptible animals of Type B (i.e., SB (t)), and the corresponding infected classes are denoted by I A (t)
and IB (t), respectively. Herein, the total reservoir population was considered as:
S A (t) + I A (t)
and
S B ( t ) + IB ( t ).
We considered the vector (sand ﬂy) population to be of two categories: the susceptible vector population
S F (t) and the infected vector population IF (t). The total vector (sand ﬂy) population was considered as:
S F ( t ) + I F ( t ).
Here λ H , λ A , λ B , and λ F are the constant recruitment rates of humans, Type A animals, Type B animals,
and sand ﬂy. μ H , μ A , μ B , and μ F are their respective natural death rates.
For disease transmission, a susceptible human becomes infected through mass action after
interaction with the infected vector, where β is the per capita biting rate of vector on human and π is the
transmission probability per bite per human [14]. Thus, the infection term is frequency-dependent [20],
and is described as:
SH
βπIF
.
S H + IH
A susceptible Type A animal (S A ) becomes infected by the bite (bite rate is α) of an infected sand ﬂy (IF )
with the transmission probability ω. Here, the transmission of the disease is frequency-dependent [20]
and is deﬁned by:
SA
.
αωIF
S A + IA
A susceptible Type B animal (SB ) becomes infected by the bite (bite rate is α) of an infected sand ﬂy (IF )
with the transmission probability τ. The infection spreads as a frequency-dependent transmission [20],
and is given as:
SB
.
ατIF
S B + IB
A susceptible vector becomes infected after an interaction with an infected human at the rate β with
transmission probability γ per bite from human to sand ﬂy. Further, a susceptible sand ﬂy (S F ) becomes
infected by biting (per capita biting rate is α) infected animals of Type A (I A ) and Type B (IB ) with the
transmission probability κ and ζ, respectively. Thus, a susceptible sand ﬂy can be infected with the
accumulation term:
IH
IA
IB
βγS F
+ ακSF
.
+ αζSF
S H + IH
S A + IA
S B + IB
Abubakar et al. [21] found that leishmaniasis occurrence is a seasonal phenomenon in the regions of
Africa. In the region, low transmission happens in the middle of the year and high transmission occurs
in September. We can take biting rate as of the form: β(t) = β 0 (1 + δr sin 2πt
365 ). The biting rate β ( t ) is
based on a period of 365 days and varies with temperature. Average biting rate and amplitude of
seasonality are denoted by β 0 and δr [22,23], respectively.

131

Math. Comput. Appl. 2018, 23, 38

A positive dog elimination strategy reduces the source of infection and prevents more non-infected
sand ﬂies from acquiring the parasites. An infected dog prevention strategy can reduce the source
of infection, but without elimination. However, preventive measures on the dog do not necessarily
eliminate the parasite from the dog’s organ system. Dog vaccination does not eliminate the source
of infection, but it protects the remaining susceptible dogs from becoming infected. Thus, there is
a reduction in the number of infected dogs by natural elimination. The use of insecticide in impregnated
dog collars works (if used by all dogs) by protecting the susceptible ones (similar to the vaccine activity)
and isolating the source of infection (similar to positive dog elimination).
In nature, the prevalence of Leishmania infection in the entire sand ﬂy population can be very low
(<0.1%), even in areas of endemicity and high transmission. As a consequence, if the replacement of
parasite is accelerated, there is not enough time for the parasite to mature inside the sand ﬂy. Therefore,
we do not consider the latent status in our model [24,25].
The dynamics of the disease in humans and sand ﬂies and two reservoir (animal) populations are
described in Figure 1. From the above description, we can construct the following system of differential
equations in the form given below:
Ṡ H

= λ H − βπ IF

İH

=

Ṡ A

=

İ A

=

ṠB

=

İB

=

Ṡ F

=

İF

=

SH
− μH SH ,
S H + IH

SH
− μ H IH ,
S H + IH
SA
λ A − αωIF
− μA SA,
S A + IA
SA
αωIF
− μ A IA ,
S A + IA
SB
λ B − ατIF
− μ B SB ,
S B + IB
SB
ατIF
− μ B IB ,
S B + IB
IH
IA
IB
λ F − βγS F
− ακSF
− αζSF
− μ F SF ,
S H + IH
S A + IA
S B + IB
IH
IA
IB
βγS F
+ ακSF
+ αζSF
− μ F IF ,
S H + IH
S A + IA
S B + IB
βπ IF

(1)

which satisﬁes the conditions S H + IH > 0, S A + I A > 0, SB + IB > 0, and S F + IF > 0.

Figure 1. Schematic diagram of the model system (1) with ﬂow of transmission.

2.1. Properties of the Model
All parameters of the model (1) are non-negative. Moreover, as the discussed model actually
describes a living population, we assume the state variables to be non-negative at time t = 0.
Note that the total human population size, S H + IH → λμ HH , reservoir population size, S A + I A →
λA
μA

and SB + IB →

λB
μB

and S F + IF →

λF
μF

as t → ∞. It follows that the probable region is represented
132

Math. Comput. Appl. 2018, 23, 38

"

(S H , IH , S A , I A , SB , IB , SF , IF ) ∈ R8+ : S H , IH , S A , I A , SB , IB , SF , IF ≥ 0, S H + IH ≤ λμ HH ,
#
S F + IF ≤ λμ FF , S A + I A ≤ λμ A and SB + IB ≤ λμBB , a positive invariant region. Hence, the model is
A
mathematically efﬁcient and proves to be adequate in estimating the dynamics of the model in the
positive invariant domain D. Here R8+ denotes the non-negative space of R8 , where we specify D̄ and
∂D to represent the boundary and the interior region of D, respectively.
We take the ratio between female sand ﬂy vectors and humans as:
by: D =

a=

S F + IF
S H + IH ,

the number of female sandﬂies per human host.

Here, a is constant because the population density of the host does not affect the number of blood
meals taken by a vector per unit time.
In either case, we take the ratio between female sand ﬂy (vector) and reservoir as:
b=

S F + IF
S A + IA

and c =

S F + IF
S B + IB .

The parameters used in our model actually represent the infected cases of leishmaniasis in South
Sudan in the year 2012 [21]. In Figure 2, the data show a maximum prevalence in January–February.
After that, fewer cases occured than in previous months. Figure 3 shows that the total number of
leishmaniasis incidents for the year 2012 and the estimated model parameter values were almost
ﬁtted with same line. The ﬁtted model was further used to perform simulations which would
serve as a predictive tool for future cases of leishmaniasis for the forthcoming year (i.e., January
to December, 2013). Our model successfully predicted that, cumulatively, 3000 and 4770 new
cases of leishmaniasis were to be recorded during the beginning of January 2013 and the end of
December 2013, respectively. Hence, for the forthcoming year 2013, approximately 1770 new cases of
leishmaniasis were predicted. Our estimated model parameter values (Table 1) coincided with the real
data values. Thus, the initial human demographic parameters S H (0), IH (0) along with the initially
infected reservoir population S A (0), I A (0), SB (0), IB (0) and sand ﬂy population S F (0), IF (0) were
estimated. Additionally, π, ω, and τ are disease transmission probability in humans and Type A and B
reservoirs, respectively.
From the model (1), the number of new CL cases IH c (infected human) can be written as:
dIH c
dt

=

βπIF

SH
.
S H + IH

(2)

This represents the rate of increase of the number of new CL occurrences, where π is the
transmission probability of the disease in humans, and β is the biting rate of sand ﬂy on humans.

Figure 2. Cumulative number of leishmaniasis cases for the period January–December 2012. CL:
cutaneous leishmaniasis.

133

Math. Comput. Appl. 2018, 23, 38

Figure 3. Panel A shows cumulative new leishmaniasis cases for the period January–December 2013
from data, and Panel B shows the model simulated data plotted using estimated parameter
values. Panel C shows that the simulated parametric data values coincided with real data values,
thus validating the model.

2.2. Existence Condition
The system (1) has two equilibrium points, one of which is disease-free equilibrium
∗ , S ∗ , I ∗ , S ∗ , I ∗ , S ∗ , I ∗ ),
E0 ( λμ HH , 0, λμ A , 0, λμBB , 0, λμ FF , 0) and the other is endemic equilibrium E∗ (S∗H , IH
A A B B F F
A

where S∗H =

∗
λ H −μ H IH
,
μH

S∗A =

∗
λ A −μ A I A
,
μA

λ H βπ IF∗
αωλ A IF∗
∗ =
, IA
, IB∗
( βπ IF∗ +λ H )μ H
(αωIF∗ +λ A )μ A
3
2
A1 IF∗ + B1 IF∗ + C1 IF∗ + D1 = 0, where

∗ =
IH

=

S∗B =

λ B −μ B IB∗
,
μB

λ B ατIF∗
(ατIF∗ +λ B )μ B

S∗F =

λF
β2 πγI ∗
α2 κωI ∗
α2 ζτI ∗
F +
F +
F +μ
∗
∗
F
( βπIF +λ H ) (αωIF +λ A ) (ατIF∗ +λ B )

,

and IF∗ are determined from the equation



A1 = ( a1 b3 c3 + b1 a3 c3 + c1 a3 b3 )(d1 − d2 ) − d2 2 a3 b3 c3 ,



B1 = a1 (b2 c3 + b3 c2 ) + b1 ( a2 c3 + a3 c2 ) + c1 ( a2 b3 + b3 a2 ) (d1 − d2 ) − d2 2 ( a2 b3 c3 + b2 c3 a3 + c2 a3 b3 ) ,


C1 = ( a1 b2 c2 + b1 c2 a2 + c1 a2 b2 )(d1 − d2 ) − d2 2 ( a2 b2 c3 + a2 b3 c2 + a3 b2 c2 ) ,
D1 = −d2 2 a2 b2 c2 and
a1 = β2 πγ, a2 = λ H , a3 = βπ, b1 = α2 ωκ, b2 = λ A , b3 = αω,
c1 = α2 ζτ, c2 = λ B , c3 = ατ, d1 = λ F , d2 = μ F .

Then, the endemic equilibrium E∗ exists if β2 πγλ A λ B + α2 κωλ H λ B + α2 ζτλ A λ H >

μ2F λ A λ B λ H
.
λF

Biological Interpretation: If the biting rate of the sand ﬂy and transmission probabilities between
infected human to vector, infected sand ﬂy to human, infected animal to vector, and infected sand ﬂy
to animal are higher, then the system moves to its endemic state and disease persists.
2.3. Analytical Study of the Formulated Model
To ﬁnd the basic reproduction ratio, four compartments IH , I A , IB , and i F were considered here.
We have

134

Math. Comput. Appl. 2018, 23, 38

⎡

IH
⎢I
⎢ A
⎢
⎣ IB
IF

⎤

⎡

⎥ ⎢
⎥ ⎢
⎥=⎢
⎦ ⎢
⎣

⎤

−μ H
0
0

0

0

−μ A
0

βγS F
S H + IH

ακS F
S A + IA

0
−μ B

⎡ ⎤
βπS H
IH
S H + IH
αωS A ⎥
⎢I ⎥
⎥
⎢
A⎥
S A + IA ⎥
ατSB ⎥ ⎢ ⎥ .
⎣
I
B⎦
⎦
S B + IB
IF
−μ F

αζS F
S B + IB

(3)

According to [26], the above square matrix can be re-written as the subtraction of two matrices.
Thus, above matrix can be expressed as Z = ( F − V ) Z. Here F is a non-negative matrix that contains
the elements related to the generation of new infections and V is a diagonal non-negative matrix which
contains the elements related to the loss of infections. F corresponds to the infectivity function of an
infected population, and V −1 is a diagonal matrix indicating the loss of an infected population. At the
disease-free equilibrium point, (S¯H = λμ HH , I¯H = 0, S¯A = λμ A , I¯A = 0, S¯B = λμBB , I¯B = 0, S¯F = λμ FF , I¯F = 0),
the matrix NGO (next generation operator) is NGO =
⎛
0
0
⎜
⎜
0
0
⎜
F= ⎜
⎜
0
0
⎝
βγS¯F
S¯H + I¯H

and

⎛
⎜
⎜
V= ⎜
⎝
This leads to

⎛
⎜
⎜
FV −1 = ⎜
⎜
⎝

ακ S¯F
S¯A + I¯A

μH
0
0
0

0
μA
0
0

A

FV −1 , where
0
0
0

αζ S¯F
S¯B + I¯B

0
0
μB
0

0
0
0
μF

0

0

0

0

0

0

0

0

0

βγλ F
λH μF

ακλ F
λ A μF

αζλ F
λB μF

βπ S¯H
S¯H + I¯H
αω S¯A
S¯A + I¯A
ατ S¯B
S¯B + I¯B

⎞
⎟
⎟
⎟
⎟
⎟
⎠

0
⎞
⎟
⎟
⎟.
⎠

βπ
μF
αω
μF
ατ
μF

⎞
⎟
⎟
⎟.
⎟
⎠

0

From the above matrix, we can calculate the basic reproduction ratio from
det(NGO − ξ I ) = 0.
The basic reproduction ratio is the dominant eigenvalue of the matrix. It follows that the
λ (α2 τζλ λ +α2 κωλ λ + β2 γπλ λ )

H B
B A
A H
corresponding basic reproduction number is (R0 ) = F
. Thus, if R0 < 1,
μF 2 λ H λ A λB
then the system is stable at disease-free equilibrium, while if R0 > 1, the system is unstable at
disease-free states and an endemic equilibrium state exists.
The calculation of disease-free equilibrium and its stability analysis, the mathematical description
of basic reproduction number (R0 ), and the existence and permanence of the endemic solution are
discussed in Figure S1 in the Supplementary Materials.
By applying Routh–Hurwitz criteria, the system is stable around the endemic equilibrium point
∗ , S ∗ , I ∗ , S ∗ , I ∗ , S ∗ , I ∗ ).
E∗ (S∗H , IH
A A B B F F

3. Control Theoretic Approach for the Proposed Model
To control the disease in humans, wemodelled the use of the drugs sodium stibogluconate
and meglumine antimoniate. To control the sand ﬂy population, we modelled insecticide spraying.
Additionally, we modelled the application of curative drugs to the infected Types A and B reservoir
animals. These therapies, applied to infected human, animal, and vector populations, can limit
the disease prevalence. Therefore, we prefer our control set quantiﬁable functions, deﬁned on
135

Math. Comput. Appl. 2018, 23, 38

[tstart ; t f inal ], with the constraints 0 ≤ ui (t) ≤ 1, i = 1, 2, ..., 4. We did not consider the side effects.
We only considered the preventive case. The prevention phase is predetermined in any preventive
situation. Thus, we introduce the optimal control schedule as:
(i)

The control variable u1 acts as a prevention of human infection using drugs and the use of
insecticide-treated bed nets to reduce infection.
(ii) The control variable u2 represents the use of medicines for the prevention of an infected reservoir
population of Type A.
(iii) The control variable u3 represents the use of effective medicines for the prevention of an infected
reservoir population of Type B.
(iv) The control variable u4 corresponds to measures like spraying insecticide on residences and other
places where sand ﬂies can breed and live in order to kill them at all stages.
The parameters u1 , u2 , and u3 reduce the transmission rate from sandﬂies to humans and animals
of Type A and Type B. Therefore, the approach acts as a preventative method instead of as a treatment.
Here the prevention of infectious humans and reservoir hosts and the reduction of vectors is possible
either by taking medication that reduces the probability of the host getting infected (e.g., either a pill or
a vaccine), or via the reduction of transmission by reducing the sand ﬂy biting rate through behavior,
such as less contact between sand ﬂy vectors and people (netting, or reducing contact, application of
repellent, etc.).
The most commonly used CL prevention techniques for infected host are the use of drugs,
insecticide-treated bed nets, and insecticide spraying to reduce the sand ﬂy population. Initially,
each control strategy case and its effect on CL was observed separately. Figure S2 shows the effects of
different cases of control strategies in comparison with no control for each population.
The aim is to reduce the rate of infection by introducing drug administration and insecticide
spraying into the system. Here the levels of u1 (t), u2 (t), u3 (t), and u4 (t) are considered as the proper
doses of drug and insecticide spraying in the system. There is a possibility of infection upon interaction
between human and vector, as well as between reservoir and vector. Thus, in this circumstance,
the infected human host and animal (reservoir) population are selected for drug application, and the
vector population is selected for insecticide application. The control parameters u1 (t), u2 (t), u3 (t),
and u4 (t) are introduced in the dynamical model system (1). We also consider that η1 , η2 , η3 , and η4
are the efﬁcacy of interventions applied in human, animal, and vector, respectively. Thus, the state
system reduces to:
Ṡ H

= λ H − β(1 − η1 u1 (t))π IF

İH

=

Ṡ A

=

İ A

=

ṠB

=

İB

=

Ṡ F

=

SH
− μH SH ,
S H + IH

SH
− μ H IH ,
S H + IH
SA
λ A − α(1 − η2 u2 (t))ωIF
− μA SA,
S A + IA
SA
α(1 − η2 u2 (t))ωIF
− μ A IA ,
S A + IA
SB
λ B − α(1 − η3 u3 (t))τIF
− μ B SB ,
S B + IB
SB
α(1 − η3 u3 (t))τIF
− μ B IB ,
S B + IB
IH
IA
λ F − β(1 − η4 u4 (t))γS F
− α(1 − η4 u4 (t))κSF
S H + IH
S A + IA
IB
−α(1 − η4 u4 (t))ζSF
− ( μ F + μ1 ) S F ,
S B + IB
β(1 − η1 u1 (t))π IF

136

(4)

Math. Comput. Appl. 2018, 23, 38

İF

μ̄ F .

=

IH
IA
+ α(1 − η4 u4 (t))κSF
S H + IH
S A + IA
IB
+α(1 − η4 u4 (t))ζSF
− ( μ F + μ1 ) IF .
S B + IB
β(1 − μ4 u4 (t))γS F

Note that μ1 is the death rate of vector due to insecticide spraying, and (μ F + μ1 ) is expressed as
Endemic equilibrium with control are described in the following manner: S∗H =

S∗A =
∗ =
IH

from

∗
λ A −μ A I A
,
μA

S∗B =

λ B −μ B IB∗
,
μB

S∗F =

β2 (1−η1 u1 )(1−η4 u4 )πγI ∗
F
( β(1−η1 u1 )πIF∗ +λ H )
∗
α(1−η2 u2 )ωλ A IF
∗
B
(α(1−η2 u2 )ωIF∗ +λ A )μ A

λ H β(1−η1 u1 )π IF∗
∗ =
, IA
( β(1−η1 u1 )π IF∗ +λ H )μ H
3
the equation A2 IF∗ + B2 IF∗ 2



, I

=

+ C2 IF∗ + D2 = 0, where

λF
α2 (1−η2 u2 )(1−η4 u4 )κωI ∗
F
(α(1−η2 u2 )ωIF∗ +λ A )
∗
λ B α(1−η3 u3 )τIF
(α(1−η3 u3 )τIF∗ +λ B )μ B

+

+

∗
λ H −μ H IH
,
μH

α2 (1−η3 u3 )(1−η4 u4 )ζτI ∗
F
(α(1−η3 u3 )τIF∗ +λ B )

+μ¯F

,

, and IF∗ is determined


2
A2 = ( a1 b3 c3 + b1 a3 c3 + c1 a3 b3 )(d1 − d2 ) − d2 a3 b3 c3 ,



2
B2 = a1 (b2 c3 + b3 c2 ) + b1 ( a2 c3 + a3 c2 ) + c1 ( a2 b3 + b3 a2 ) (d1 − d2 ) − d2 ( a2 b3 c3 + b2 c3 a3 + c2 a3 b3 ) ,


2
C2 = ( a1 b2 c2 + b1 c2 a2 + c1 a2 b2 )(d1 − d2 ) − d2 ( a2 b2 c3 + a2 b3 c2 + a3 b2 c2 ) ,
2

D2 = −d2 a2 b2 c2 and
a1 = β2 (1 − η1 u1 )(1 − η4 u4 )πγ, a2 = λ H , a3 = β(1 − η1 u1 )π, b1 = α2 (1 − η2 u2 )(1 − η4 u4 )ωκ,
b2 = λ A , b3 = α(1 − η2 u2 )ω,
c1 = α2 (1 − η3 u3 )(1 − η4 u4 )ζτ, c2 = λ B , c3 = α(1 − η3 u3 )τ, d1 = λ F , d2 = μ̄ F .
The basic reproduction number with control parameter can be expressed in the form:
R̄0 =

λ F (α2 τζλ A λ H (1−η3 u3 )(1−η4 u4 )+α2 κωλ H λ B (1−η2 u2 )(1−η4 u4 )+ β2 γπλ B λ A (1−η1 u1 )(1−η4 u4 ))
.
μF 2 λ H λ A λB

The purpose of our optimal control approach is to minimize the infected human and reservoir
populations, reduce the vector population, and minimize the cost of prevention by using the possible
minimal control variables u1 (t), u2 (t), u3 (t), and u4 (t). Now, we construct the objective function:
J ( u1 , u2 , u3 , u4 ) =

 t
f inal
tstart

[ ρ1 I H ( t ) + ρ2 I A ( t ) + ρ3 IB ( t ) + ρ4 S F ( t ) + ρ5 I F ( t )
1
+ (w1 u1 2 + w2 u2 2 + w3 u3 2 + w4 u4 2 )]dt.
2

(5)

In the objective function, ρ1 , ρ2 , ρ3 , ρ4 , and ρ5 represent the weight constants of the infected human,
infected animal of Type A, infected animal of Type B, and vector population (susceptible and infected),
respectively, and w1 , w2 , w3 , and w4 are weight constants for the prevention of transmission to human,
animals of Types A and B, and vector control, respectively. The terms 12 w1 u1 2 , 12 w2 u2 2 , 12 w3 u3 2 , 12 w4 u4 2
describe the cost of disease prevention. The ﬁrst control policy u1 (t) comes from the prevention
policy of the infected human class. The cost related with the second control u2 (t) is the medication
for reservoir Type A. The cost associated with the third control technique u3 (t) is the prevention
using drugs in reservoir Type B, and the cost associated with the fourth control strategy u4 (t)
arises from applying different types of pesticides or insecticide to kill sand ﬂies at all life stages.
Here we must consider that cost is proportional to the square of the corresponding control function.
Thus, the objective function can be deﬁned as:
J (u1 , u2 , u3 , u4 ); (u1 , u2 , u3 , u4 ) ∈ D.
Next, we consider the following minimization problem:
J (u1 , u2 , u3 , u4 ) → min; (u1 , u2 , u3 , u4 ) ∈ D,

137

Math. Comput. Appl. 2018, 23, 38

where the corresponding control set D is expressed in the form:
D = {(u1 , u2 , u3 , u4 ) : ui (t) is the Lebesgue measurable function on

[tstart ; t f inal ] and 0 ≤ ui (t) ≤ 1, i = 1, 2, 3, 4}.
Existence of the Optimal Control
For bounded Lebesgue measurable controls and non-negative initial conditions, there exists
a non-negative bounded solution of the state system [27,28]. To ﬁnd the optimal solution of the system,
ﬁrst, we deﬁne the Lagrangian (L) of the control system (4) as:
1
L = ρ 1 I H + ρ 2 I A + ρ 3 I B + ρ 4 S F + ρ 5 I F + ( w1 u 1 2 + w2 u 2 2 + w3 u 3 2 + w4 u 4 2 ) .
2
Theorem 1. For the system (4) with the non-negative initial conditions, there exists an optimal control
u∗ = (u1∗ , u2∗ , u3∗ , u4∗ ), such that J (u1∗ , u2∗ , u3∗ , u4∗ ) = min{ j(u1 , u2 , u3 , u4 ) : (u1 , u2 , u3 , u4 ) ∈ D }.
Proof. We use the result for the existence of an optimal control in [27,29] as the control variables,
and the state variables are non-negative. Now, the objective function in u1 , u2 , u3 , and u4 satisﬁes
the condition of convexity. By deﬁnition, the control set D is convex and closed. The existence of the
optimal control is conﬁrmed by the boundedness of the solutions of the state system. Additionally,
the Lagrangian, L, is convex on the control set D. This proves the existence of an optimal control.
Now we apply Pontryagin’s minimal principle [30] to the control system (4). To solve the optimal
control problem, we deﬁne the Hamiltonian H with the help of the Lagrangian as follows:
H

=

dS H
dI
dS
dI
dS
dI
dS
dI
+ λ2 H + λ3 A + λ4 A + λ5 B + λ6 B + λ7 F + λ8 F
dt
dt
dt
dt
dt
dt
dt
dt
+ ξ 1 u1 + ξ 2 (1 − u1 ) + ξ 3 u2 + ξ 4 (1 − u2 ) + ξ 5 u3 + ξ 6 (1 − u3 )
L + λ1

+ ξ 7 u4 + ξ 8 (1 − u4 ).
where λ j , j = 1, 2, ..., 8 are the adjoint variables and ξ i , i = 1, 2, ..., 8 are the penalty multipliers:
(i)
(ii)
(i)
(ii)
(i)
(ii)
(i)
(ii)

u1
u1
u2
u2
u3
u3
u4
u4

= 0, where ξ 1
= 1, where ξ 1
= 0, where ξ 3
= 1, where ξ 3
= 0, where ξ 5
= 1, where ξ 5
= 0, where ξ 7
= 1, where ξ 7

= 0 and ξ 2
= 0 and ξ 2
= 0 and ξ 4
= 0 and ξ 4
= 0 and ξ 6
= 0 and ξ 6
= 0 and ξ 8
= 0 and ξ 8

= 0 and ξ 3
= 0 and ξ 3
= 0 and ξ 1
= 0 and ξ 1
= 0 and ξ 1
= 0 and ξ 1
= 0 and ξ 1
= 0 and ξ 1

= ξ4
= ξ4
= ξ2
= ξ2
= ξ2
= ξ2
= ξ2
= ξ2

= ξ5
= ξ5
= ξ5
= ξ5
= ξ3
= ξ3
= ξ3
= ξ3

= ξ6
= ξ6
= ξ6
= ξ6
= ξ4
= ξ4
= ξ4
= ξ4

= ξ7
= ξ7
= ξ7
= ξ7
= ξ7
= ξ7
= ξ5
= ξ5

= ξ8
= ξ8
= ξ8
= ξ8
= ξ8
= ξ8
= ξ6
= ξ6

= 0 and
= 0,
= 0 and
= 0,
= 0 and
= 0,
= 0 and
= 0.

The corresponding adjoint equations are given by,
dλ1
dt
dλ5
dt

∂H dλ2
∂H dλ3
∂H dλ4
∂H
,
=−
,
=−
,
=−
,
∂S H dt
∂IH dt
∂S A dt
∂I A
∂H dλ6
∂H dλ7
∂H dλ8
∂H
−
,
=−
,
=−
,
=−
,
∂SB dt
∂IB dt
∂S F dt
∂IF

= −
=

138

(6)

Math. Comput. Appl. 2018, 23, 38

where
∂H
∂S H


= − λ 1 ( t ) β ( 1 − η1 u 1 )

∂H
∂IH

=

∂H
∂S A

=

∂H
∂I A

=

∂H
∂SB

=

∂H
∂IB

=

∂H
∂S F

=

∂H
∂IF

=



π IF ( t ) I H ( t )
π IF ( t ) I H ( t ) 
+ μ H + λ 2 ( t ) β ( 1 − η1 u 1 )
2
(S H (t) + IH (t))
(S H (t) + IH (t))2


γS F (t) IH (t) 
γS F (t) IH (t) 
,
+ λ 7 ( t ) β ( 1 − η4 u 4 )
− λ 8 ( t ) β ( 1 − η4 u 4 )
(S H (t) + IH (t))2
(S H (t) + IH (t))2




π IF ( t ) S H ( t )
πIF (t)S H (t)
ρ 1 + λ 1 ( t ) β ( 1 − η1 u 1 )
− λ 2 ( t ) β ( 1 − η1 u 1 )
+ μH
2
2
(S H (t) + IH (t))
(S H (t) + IH (t))




γS F (t)
γS F (t)
,
− λ 7 ( t ) β ( 1 − η4 u 4 )
+ λ 8 ( t ) β ( 1 − η4 u 4 )
2
2
(S H (t) + IH (t))
(S H (t) + IH (t))



ωIF (t) I A (t)
ωIF (t) I A (t) 
− λ 3 ( t ) α ( 1 − η2 u 2 )
+ μ A + λ 4 ( t ) α ( 1 − η2 u 2 )
(S A (t) + I A (t))2
(S A (t) + I A (t))2


κS F (t) I A (t) 
κS F (t) I A (t) 
+ λ 7 ( t ) α ( 1 − η4 u 4 )
− λ 8 ( t ) β ( 1 − η4 u 4 )
,
2
(S A (t) + I A (t))
(S A (t) + I A (t))2




ωIF (t)S A (t)
ωIF (t)S A (t)
ρ 2 + λ 3 ( t ) α ( 1 − η2 u 2 )
− λ 4 ( t ) α ( 1 − η2 u 2 )
+ μA
2
2
(S A (t) + I A (t))
(S A (t) + I A (t))


κS F (t)S A (t) 
κS F (t)S A (t) 
− λ 7 ( t ) α ( 1 − η4 u 4 )
+ λ 8 ( t ) α ( 1 − η4 u 4 )
,
(S A (t) + I A (t))2
(S A (t) + I A (t))2


τIF (t) IB (t)
τIF (t) IB (t) 
− λ 5 ( t ) α ( 1 − η3 u 3 )
+ μ B + λ6 (t)(α(1 − η3 u3 )
2
(SB (t) + IB (t))
(SB (t) + IB (t))2



ζS F (t) IB (t)
ζS F (t) IB (t) 
,
(7)
+ λ 7 ( t ) α ( 1 − η4 u 4 )
− λ 8 ( t ) β ( 1 − η4 u 4 )
2
(SB (t) + IB (t))
(SB (t) + IB (t))2


τIF (t)SB (t) 
τIF (t)SB (t)
ρ 3 + λ 5 ( t ) α ( 1 − η3 u 3 )
− λ6 (t)(α(1 − η3 u3 )
+ μB
(SB (t) + IB (t))2
(SB (t) + IB (t))2


ζS F (t)SB (t) 
ζS F (t)SB (t) 
,
− λ 7 ( t ) α ( 1 − η4 u 4 )
+ λ 8 ( t ) β ( 1 − η4 u 4 )
2
(SB (t) + IB (t))
(SB (t) + IB (t))2
"
γIH (t)
κI A (t)
− α ( 1 − η4 u 4 )
ρ 4 − λ 7 ( t ) β ( 1 − η4 u 4 )
(S H (t) + IH (t))
(S A (t) + I A (t))
#
ζ IB ( t )
γIH (t)
− μ F + λ8 (t){ β(1 − η4 u4 )
− α ( 1 − η4 u 4 )
(SB (t) + IB (t))
(S H (t) + IH (t))
#
κI A (t)
ζ IB ( t )
+ α ( 1 − η4 u 4 )
+ α ( 1 − η4 u 4 )
,
(S A (t) + I A (t))
(SB (t) + IB (t))
πS H (t)
πS H (t)
+ λ 2 ( t ) β ( 1 − η1 u 1 )
ρ 5 − λ 1 ( t ) β ( 1 − η1 u 1 )
(S H (t) + IH (t))
(S H (t) + IH (t))
ωS A (t)
ωS A (t)
+ λ 4 ( t ) α ( 1 − η2 u 2 )
− λ 3 ( t ) α ( 1 − η2 u 2 )
(S A (t) + I A (t))
(S A (t) + I A (t))
τSB (t)
τSB (t)
+ λ 6 ( t ) α ( 1 − η3 u 3 )
− λ8 (t)μ̄ F .
− λ 5 ( t ) α ( 1 − η3 u 3 )
(SB (t) + IB (t))
(SB (t) + IB (t))

139

Math. Comput. Appl. 2018, 23, 38

Again, H can be written as
H

=





1
S H (t)
S H (t)
+ λ2 (t) 1 − η1 u1 βπ IF (t)
w u 2 − λ1 (t) 1 − η1 u1 βπIF (t)
2 1 1
S H (t) + IH (t)
S H (t) + IH (t)




1
S A (t)
S A (t)
+ λ4 (t) 1 − η2 u2 αωIF (t)
+ w2 u2 2 − λ3 (t) 1 − η2 u2 αωIF (t)
2
S A (t) + I A (t)
S A (t) + I A (t)




1
SB (t)
SB (t)
+ w3 u3 2 − λ5 (t) 1 − η3 u3 ατ IF (t)
+ λ6 (t) 1 − η2 u2 ατ IF (t)
2
S B ( t ) + IB ( t )
S B ( t ) + IB ( t )



1
IH (t)
I A (t
IB ( t )
+ w4 u4 2 − λ7 (t) 1 − η4 u4 βγS F (t)
+ ακS F (t)
+ αζS F (t)
2
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )



IH (t)
I A (t)
IB ( t )
+ ακS F (t)
+λ8 (t) 1 − η4 u4 βγS F (t)
+ αζS F (t)
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )




+ ξ 1 u1 + ξ 2 1 − u1 + ξ 3 u2 + ξ 4 1 − u2




+ ξ 5 u3 + ξ 6 1 − u3 + ξ 7 u4 + ξ 8 1 − u4

+ other terms without u1 , u2 , u3 , and u4 .

Now, differentiating H partially with respect to u1 , u2 , u3 , and u4 , we get:
S H (t)
S H (t)
− λ2 (t)η1 βπIF (t)
+ ξ1 − ξ2
S H (t) + IH (t)
S H (t) + IH (t)
S A (t)
S A (t)
− λ4 (t)η2 αωIF (t)
+ ξ3 − ξ4
= w2 u2 + λ3 (t)η2 αωIF (t)
S A (t) + I A (t)
S A (t) + I A (t)
SB (t)
SB (t)
− λ6 (t)η3 ατ IF (t)
+ ξ5 − ξ6
= w3 u3 + λ5 (t)η3 ατIF (t)
S B ( t ) + IB ( t )
S B ( t ) + IB ( t )


IH (t)
I A (t)
IB ( t )
+ ακSF (t)
+ αζSF (t)
= w4 u4 + λ7 (t)η4 βγSF (t)
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )


IH (t)
I A (t)
IB ( t )
+ ακSF (t)
+ αζSF (t)
−λ8 (t)η4 βγSF (t)
+ ξ7 − ξ8.
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )
∂H
∂u1
∂H
∂u2
∂H
∂u3
∂H
∂u4

= w1 u1 + λ1 (t)η1 βπ IF (t)

These expressions should be equal to zero at u1∗ , u2∗ , u3∗ and u4∗ . Thus,
S H (t)
S H (t)
− λ2 (t)η1 βπIF (t)
+ ξ 1 − ξ 2 = 0 at u1∗ ,
S H (t) + IH (t)
S H (t) + IH (t)
S A (t)
S A (t)
− λ4 (t)η2 αωIF (t)
+ ξ 3 − ξ 4 = 0 at u2∗ ,
w2 u2 + λ3 (t)η2 αωIF (t)
S A (t) + I A (t)
S A (t) + I A (t)
SB (t)
SB (t)
− λ6 (t)η3 ατIF (t)
+ ξ 5 − ξ 6 = 0 at u3∗ , and
w3 u3 + λ5 (t)η3 ατIF (t)
S B ( t ) + IB ( t )
S B ( t ) + IB ( t )


IH (t)
I A (t)
IB ( t )
+ ακSF (t)
+ αζSF (t)
w4 u4 + λ7 (t)η4 βγS F (t)
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )


IH (t)
I A (t)
IB ( t )
+ ακSF (t)
+ αζSF (t)
−λ8 (t)η4 βγSF (t)
+ ξ7 − ξ8 = 0
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )
∗
at u4 .
w1 u1 + λ1 (t)η1 βπ IF (t)

Solution for the optimal control yields:
u1∗ =

u2∗ =

(λ2 (t) − λ1 (t))η1 βπ IF (t) S

S H (t)

H ( t )+ I H ( t )

+ ξ2 − ξ1

w1

(λ4 (t) − λ3 (t))η2 αωIF (t) S
w2

140

S A (t)

A ( t )+ I A ( t )

+ ξ4 − ξ3

,

,

Math. Comput. Appl. 2018, 23, 38

u3∗ =

u4∗

=

(λ6 (t) − λ5 (t))η3 ατIF (t) S

SB (t)

B ( t )+ IB ( t )

+ ξ6 − ξ5

w3


(λ8 (t) − λ7 (t))η4 βγSF (t) S

IH (t)

H ( t )+ I H ( t )

+ ακSF (t) S

I A (t)

A ( t )+ I A ( t )

, and

+ αζSF (t) S

IB ( t )

B ( t )+ IB ( t )

w4



+ ξ8 − ξ7

.

There are three cases to be considered for u1∗ (t).
Case 1: 0 < u1∗ < 1, subject to the condition ξ 1 = ξ 2 = 0:
u1∗ =

(λ2 (t) − λ1 (t))η1 βπIF (t) S

S H (t)

H ( t )+ I H ( t )

w1

.

(8)

Case 2: u1∗ = 0, subject to the condition ξ 1 = 0 and ξ 2 = 0:

(λ2 (t) − λ1 (t))η1 βπ IF (t)

S H (t)
= ξ1.
S H (t) + IH (t)

(9)

Case 3: u1∗ = 1, subject to the condition ξ 1 = 0 and ξ 2 = 0:

(λ2 (t) − λ1 (t))η1 βπ IF (t)

S H (t)
+ ξ 2 = w1 .
S H (t) + IH (t)

(10)

Therefore, the optimal control u1∗ (t) can be stated as:

 (λ2 (t) − λ1 (t))η1 βπIF (t) S H (t)
 
S H (t)+ IH (t)
,1 ,0 .
u1∗ = max min
w1

(11)

There are also three cases to be considered for u2∗ (t).
Case 1: 0 < u2∗ < 1, subject to the condition ξ 3 = ξ 4 = 0:
u2∗ =

(λ4 (t) − λ3 (t))η2 αωIF (t) S

S A (t)

A ( t )+ I A ( t )

w2

(12)

Case 2: u2∗ = 0, subject to the condition ξ 3 = 0 and ξ 4 = 0:

(λ4 (t) − λ3 (t))η2 αωIF (t)

S A (t)
= ξ3.
S A (t) + I A (t)

(13)

Case 3: u2∗ = 1, subject to the condition ξ 3 = 0 and ξ 4 = 0:

(λ4 (t) − λ3 (t))η2 αωIF (t)

S A (t)
+ ξ 4 = w2 .
S A (t) + I A (t)

(14)

Therefore, the optimal control u2∗ (t) can be stated as:

 (λ4 (t) − λ3 (t))η2 αωIF (t) S A (t)
 
S A (t)+ I A (t)
,1 ,0 .
u2∗ = max min
w2
There are three cases to be considered for u3∗ (t).

141

(15)

Math. Comput. Appl. 2018, 23, 38

Case 1: 0 < u3∗ < 1, subject to the condition ξ 5 = ξ 6 = 0:
u3∗ =

(λ6 (t) − λ5 (t))η3 ατIF (t) S

SB (t)

B ( t )+ IB ( t )

w3

.

(16)

Case 2: u3∗ = 0, subject to the condition ξ 5 = 0 and ξ 6 = 0:

(λ6 (t) − λ5 (t))η3 ατIF (t)

SB (t)
= ξ5.
S B ( t ) + IB ( t )

(17)

Case 3: u3∗ = 1, subject to the condition ξ 5 = 0 and ξ 6 = 0:

(λ6 (t) − λ5 (t))η3 ατIF (t)

SB (t)
+ ξ 6 = w3 .
S B ( t ) + IB ( t )

(18)

Therefore, the optimal control u3∗ (t) can be stated as:

 (λ6 (t) − λ5 (t))η3 ατIF (t) SB (t)
 
SB (t)+ IB (t)
,1 ,0 .
u3∗ = max min
w3

(19)

There are also three cases to be considered for u4∗ (t).
Case 1: 0 < u4∗ < 1, subject to the condition ξ 7 = ξ 8 = 0:
u4∗ =


(λ8 (t) − λ7 (t))η4 βγSF (t) S

IH (t)

H ( t )+ I H ( t )

+ ακSF (t) S

I A (t)
A ( t )+ I A ( t )

+ αζSF (t) S

IB ( t )



B ( t )+ IB ( t )

w4

. (20)

Case 2: u4∗ = 0, subject to the condition ξ 7 = 0 and ξ 8 = 0:

(λ8 (t) − λ7 (t))η4 βγS F (t)


IH (t)
I A (t)
IB ( t )
+ ακS F (t)
+ αζS F (t)
= ξ 7 . (21)
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )

Case 3: u4∗ = 1, subject to the condition ξ 7 = 0 and ξ 8 = 0:

(λ8 (t) − λ7 (t))η4 βγSF (t)


IH (t)
I A (t)
IB ( t )
+ ακSF (t)
+ αζSF (t)
+ ξ 8 = w4 .
S H (t) + IH (t)
S A (t) + I A (t)
S B ( t ) + IB ( t )

(22)

Therefore, the optimal control u4∗ (t) can be stated as:
u4∗



H (t)
B (t)
A (t)
 (λ8 (t) − λ7 (t))η4 βγS F (t) S (tI)+
 
+ ακS F (t) S (tI)+
+ αζS F (t) S (tI)+
IH (t)
IA (t)
IB ( t )
H
B
A
= max min
, 1 , 0 . (23)
w4


Above, the optimal controls u1∗ , u2∗ , u3∗ , u4∗ are functions of time t, and all the phase variables in
formulae (11), (15), (19), and (23) correspond to these optimal solutions of the state system (4).
4. Numerical Simulation
It is clear from Figure 4 that the susceptible population increased faster than the infected
population when R0 < 1. This veriﬁes that disease-free equilibrium existed if R0 < 1. In Figure 5,
we plot the time series solutions of the model variables corresponding to susceptible human S H (t) and
infected human IH (t), susceptible animal Type A S A and infected animal Type A I A , susceptible animal
Type B SB and infected population Type B IB , and susceptible vector population S F (t) and infected
vector population IF (t) for different values of the model parameter that are depicted in Table 1. To ﬁnd
∗ , S∗ , I ∗ , S∗ , I ∗ , S∗ , I ∗ )
the stability of the non-trivial equilibrium E∗ , we chose initial values as E∗ (S∗H , IH
A A B B F F
= (300, 50, 30, 20, 15, 8, 1500, 500). From Figure 5, we observe that the disease-free state did not exist if
142

Math. Comput. Appl. 2018, 23, 38

R0 > 1 and the system moved towards the endemic state. From the existence and stability analysis of
the system, β, π, and τ seem to be important parameters. System dynamics of the model without drug
application are shown in Figure 5. From Figure 5, it is also observed that when transmission factor
π = 0.18 and τ = 0.05 with β = 0.24 and μ H = 0.1, the system went to an infected state condition.
However, if β = 0.18, π = 0.16, and τ = 0.05, the system moved to an infection-free state and the
disease did not persist.
From Figure 6, we considered η1 = 0.2, η2 = 0.3, η3 = 0.1, and η4 = 0.4 as the efﬁcacy of drug
applied in human, Type A animal, and Type B animal, and insecticide spray on the vector population,
respectively [31]. Then, we observed the change of character for the infected human population,
the infected reservoir populations (Types A and B), and the vector population due to control effects.
The population of susceptible humans increased and also that of susceptible animals increased after
applying control efforts, since the control (drug) effects decreased the contact rate between infected
ﬂies and humans and also decrease the contact rate between infected vector and reservoir populations.
This in turn restricted the spread of leishmaniasis.
Table 1. List of parameters.
Parameter

Deﬁnition

Range

Default Value

Reference

λH
λF
λA
λB
μH
μF
μA
μB
β
α
π
ω
τ
γ
κ
ζ

Recruitment rate of human population
Recruitment rate of sand ﬂy population
Recruitment rate of animal population of Type A
Recruitment rate of animal population of Type B
Death rate of human population
Death rate of sand ﬂy population
Death rate of animal population of Type A
Death rate of animal population of Type B
Biting rate of sand ﬂy on human
Biting rate of sand ﬂy on animals of Type A and Type B
Transmission probability of CL in sand ﬂy
Transmission probability of CL on animal of Type A
Transmission probability of CL on animal of Type B
Transmission probability of CL in sand ﬂy from infected human
Transmission probability of CL in sand ﬂy from infected animal A
Transmission probability of CL in sand ﬂy from infected animal B

300–318
14,950–15,000
70–150
3–40
0.000007–0.0001
0.188–0.795
0.06–0.21
0.089–0.255
0.15–0.29
0.15–0.25
0.12–0.24
0.11–0.172
0.02–0.071428
0.11–0.25
0.07–0.21
0.04–0.21

317
14,950
73
20
0.00004
0.189
0.19
0.25
0.24
0.16
0.18
0.12
0.05
0.14
13
0.12

[5]
[5]
[5]
[32]
Assumed
[5]
[5]
[32]
[5,9]
[5]
[5,9]
[32]
[5,9]
[5,9]
[5,9]
[32]

Figure 4. Population densities of the model variables for R0 < 1 for disease-free state (all parameters
are in Table 1).

143

Math. Comput. Appl. 2018, 23, 38

Figure 5. Population densities of the model variables for R0 > 1 (other parameters are as in Table 1).

Figure 6. Behavior of the model system with optimal control schedule of the drug therapy.

4.1. Optimal Control for Different Cases
We applied all the controls continuously. We used a combination of controls for prevention of the
disease, and compared all the scenarios. Actually, we compared the cases when one, two, three, and all
the controls are applied separately. In fact, we do not know which combination is better to obtain the
desired cost-effective result. We numerically constructed Figures A1–A8, indicating when a particular
case is better than the others. Thus, we have consider all the cases for examination.

144

Math. Comput. Appl. 2018, 23, 38

We numerically investigated the effect of the following optimal controls on the spread of
leishmaniasis in a population for different cases [33,34].
•
•
•
•
•
•
•
•

Case I: Prevention of the infection of animals Type A and Type B by the disease, along with
spraying insecticides on the sand ﬂy vectors.
Case II: Prevention of animal Type B being infected by the disease, along with spraying
insecticides on the sand ﬂy vectors.
Case III: Spraying insecticides on the sand ﬂy vectors.
Case IV: Prevention of animal Type A being infected by the disease, along with spraying
insecticides on the sand ﬂy vectors.
Case V: Prevention of animal Type B being infected by the disease, along with spraying
insecticides on the sand ﬂy vectors.
Case VI: Prevention of humans being infected by the disease, along with spraying insecticides on
the sand ﬂy vectors.
Case VII: Prevention of humans and animal Type A being infected by the disease, along with
spraying insecticides on the sand ﬂy vectors.
Case VIII: Prevention of humans and animals Type A and Type B being infected by the disease,
along with spraying insecticides on the sand ﬂy vectors.
See Appendix A.

4.2. Impact of Optimal Control on the Different Cases Proposed
We aimed to describe the long-term behavior of the disease prevalence for the future, which cannot
be predicted by the application of the optimal control strategies used in our model. After effective
strategies are stopped, there are often some infectious people remaining who can cause a fresh outbreak
of the disease [35]. Since the basic reproduction number proved to be effective in measuring long-term
endemicity in [23], the effects of our applied strategies on ( R0 ) were studied. Figure 7 demonstrates the
results of numerical simulation of ( R0 ) under the various control strategy approaches. Assuming that
the combinations of optimal control were implemented in the beginning of the year, it was observed
that case VIII performed well in the early stages, and also kept the disease under check. Cases I, VII, V,
IV, II, VI, and III performed almost similarly throughout.

Figure 7. Effect of different control cases on R0 and magniﬁed for t = 7.5–10 days.

145

Math. Comput. Appl. 2018, 23, 38

For longer time periods, R0 increased, at which point further application of control policies
becomes necessary. Thus, the implementation of different strategies during different points of time
produces different disease dynamics. Hence, it becomes important to determine the exact point in
time at which the effective strategy needs to be implemented. Further, the complete elimination of
the disease by effective application of the control strategy can be possible only if these strategies are
continued over long time periods, by determination of the class boundaries of the controls u1 , u2 , u3 ,
and u4 .
Figure S3 describes the numerical simulation outcomes of R0 for the various cases of control
strategies applied to each population.
4.3. Rescued Population and Vector Reduction for Different Cases
The useful data for ﬁnding rescued population-based strategy are in Table 2. The maximum
number of humans were rescued within time in Cases VIII and VII, and the minimum number of
humans were rescued in Cases III and II. The maximum number of infected animals of Type A were
extricated within time in Cases VII and VIII, and the minimum number of animals of Type A were
extricated in Case V. The maximum number of animals of Type B were rescued within time in Case
VIII, and the minimum number of animals of Type B were rescued in Cases III and IV. The maximum
vector reduction occurred within time in Cases VIII and VII, followed by Case II, and the minimum
reduction occurred in Case III. Therefore, we can say empirically that the maximum number of humans
were rescued in time when implementing Case VIII. Additionally, the maximum number of vectors
were reduced in time compared to the other strategies. However, this cannot be the most cost-effective
approach because of all of the drugs and insecticides which are applied to each of the populations to
control the disease.
Table 2. Reduction in infected host population (%).
Cases

Human

Animal A

Animal B

Vector Reduction

Case I
Case II
Case III
Case IV
Case V
Case VI
Case VII
Case VIII

12.67
12
11.83
12.50
18.16
18
18.5
18.60

22.31
11.15
11.15
12.92
5.17
11.92
23.07
23.07

4.67
4.67
4.00
4.00
4.67
4.67
4.67
5.33

31.10
29.7
29.54
30.90
31.54
31.38
32.75
32.92

4.4. Cost-Effectiveness of the Different Cases
Herein, we consider the size of the population rescued from infection as well as the extent of
vector reduction with the different control strategies. For this, we assumed that the cost of the controls
were the square of the proportional to the number of controls deployed, and considered the cost
of drug u1 per person to be approximately 1.86$ (in INR 118.94) [36], the cost of drug u2 per Type
A animal to be 1.2$ (in INR 76.74), the cost of drug u3 per Type B animal to be 1$ (in INR 63.95),
and the cost of insecticide spraying u4 per square meter area for vector death to be 1.5$ (in INR 95.92).
The assumption was based on the understanding that the primary goal of using the drug is for the
cure of those infected by the disease. Moreover, the use of insecticides is for the removal of vector.
The difference between the total size of the infectious population without control and with control
was used to determine the number of infections averted. We used the size of the rescued population
and extent of vector reduction, as depicted in Table 3. The control strategy applied in the model gave
maximum cost beneﬁt. This was determined for each intervention strategy, illustrated in Figures 8
and 9. One can see that the most cost-effective cases in terms of number of infections averted, including
the number reduction of the sand ﬂy vector, was the spraying of insecticides (Case III).

146

Math. Comput. Appl. 2018, 23, 38

Table 3. Cost-effectiveness for different cases.
Cases

Host Reduction

Cost (in $)

Vector Reduced

Cost (in $)

Case I
Case II
Case III
Case IV
Case V
Case VI
Case VII
Case VIII

141
108
106
138
147
146
178
180

371.716
70
0
296.514
1955.482
1868.184
2232.198
2329.496

3729
3564
3545
3709
3785
3766
3930
3950

104.878
100.238
99.70
104.316
106.453
105.919
110.531
111.094

Figure 8. Cost of different cases and their corresponding rescued host population plotted as a scatter diagram.

Figure 9. Cost of different cases and their corresponding vector infection reduced plotted as a scatter diagram.

147

Math. Comput. Appl. 2018, 23, 38

4.5. Discussion
The disease leishmaniasis spreads from animal (reservoir) to human (host) via a vector. For this
reason, the control of vectors and infected reservoir populations is one of the most efﬁcient approaches
to exterminating the disease cutaneous leishmaniasis. Applying a suitable drug to the reservoir
population and spraying insecticide to kill the vector perform signiﬁcant functions for controlling CL.
We investigated the dynamics in the absence of drug applied in human hosts and animals, and without
the spraying of insecticide to kill the vector. The disease-free situation existed for R0 < 1. On the
other hand, if R0 > 1, the disease-free state lost its stability and the system tended towards the
endemic condition.
From Figure 5, we observe that susceptible human host population was sharply decreased
up to approximately 30 days, and the infected human host population gradually increased up to
approximately 30 days. Susceptible animal of Type A sharply decreased up to approximately 25 days
and susceptible animal of Type B sharply decreased up to approximately 20 days. Again, the infected
animal population of Type A gradually increased up to approximately 25 days, and the population of
infected animals of Type B gradually increased up to approximately 20 days. The susceptible sand
ﬂy population increased up to approximately 12 days, and the infected sand ﬂy population gradually
increased up to approximately 20 days. Thus, we can conclude that the disease can be controlled by
insecticide spraying with a frequency appropriate to the size of the vector population. The change
of the behavioral structure of the system dynamics depends on the biting rate and the transmission
possibility of the sand ﬂy. So, if we are able to kill the sand ﬂy by spraying insecticide, then biting rate
and transmission will automatically be reduced and then the disease can be controlled.
The inclusion of latent and recovered categories and the use of delayed terms in the model
equation system may change the dynamics of the disease. However, the life cycle of the parasite is not
long enough to support the incubation period. Therefore, we did not consider the latent status in our
model. Additionally, the progression from susceptible to infected classes passes through a latent stage.
So, we ignored the intermediate stages (latent and recovered) and considered susceptible and infected
stages only. We paid no attention to the delay term, because our main aim was to control the infected
population and the vector. Consequently, we considered the delay term to be in steady state.
The effectiveness of the drug dose inﬂuences the system to move towards the infection-free state.
The results obtained from analytical and numerical simulations showed that the control strategies
were very effective if applied at the same time in the same region. The proposed optimal control
can eradicate and prevent further transmission of the disease through the vector. Although total
eradication of cutaneous leishmaniasis seems complicated in a realistic environment, if our ﬁndings
can be applied to an infected zone, then a pioneering insight can be achieved against cutaneous
leishmaniasis in a global perspective.
To prevent vector-borne disease, different strategic cases can be applied to a ﬁnite time period.
The effects of the different cases used to minimize the disease among the various populations
were investigated using the analysis of optimal control, thereby depicting the real situations.
Herein, we considered four controls upon three types of mammalian host and a vector population:
prevention of infective individuals by using drugs and spraying of insecticides to kill vector. It was
deduced that the strategy applied in Case I yielded good results for a considerable time period,
however Case III was most cost effective but did not achieve as great a reduction in infected host or
vector in the same time period. For the entire period of the preventive measure, the effects of our
control strategies on R0 were observed to determine the effects of the controls on the future spread
of disease. The signiﬁcant changes in the number of possible secondary infections from an infected
individual were thus concluded to be dependent on time. Thus, it becomes important to determine the
exact time interval during which the optimal control must be applied. Moreover, it is only possible to
eliminate the disease entirely if the different control strategies are continued for a long duration in
the future.

148

Math. Comput. Appl. 2018, 23, 38

5. Conclusions
From the study of the effects of the various control cases on R0 , it was observed that Case VIII
yielded the best results in attempting to control the disease, followed by Cases VII and V. The analysis
of cost-effectiveness indicated that Case III was the most cost-effective, followed by Case II. Though
the potential of Case I in trying to eliminate the disease is comparatively better than that of Case
IV, it involves higher costs. It can be concluded that the cases which display low disease prevalence
would require an efﬁcient and cost-effective strategy (Cases II and IV). However, the cases where the
utmost priority is to control the disease would require strategic cases that are less cost-effective but act
efﬁciently to control the disease in a short time period (e.g., Case I). Hence, our model would sufﬁce in
assisting decisions related to the allocation of resources, where the fundamental aim is to select the
best strategy to eliminate the disease in the lowest possible time.
Supplementary Materials: Supplementary materials are available online: http://www.mdpi.com/2078-2489/
23/3/38/s1.
Author Contributions: Model Formulation, problem observation, and its solution were generated by professor
E.V.G. and professor P.K.R. Mathematical analysis, numerical simulation, as well as most of the work in this
manuscript were realistically done by the research scholar D.B. Comprehensive progression of the solution was
done by the research scholars S.D. and J.C.
Acknowledgments: The research is supported by the PURSE-DST, Department of Mathematics, Jadavpur
University, Government of India.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

Appendix A

•

Case I: Optimal Use of Drug for Prevention From Disease for Animals Type A and Type B with Spray of
Insecticides on Vector

In this case, the objective function J is optimized by the preventive control measures u2 , u3 ,
and the control involving spraying of insecticides u4 , while u1 (the control parameter for humans)
is set to zero. We observed in Figure A1 that due to the control strategies, the number of infected
humans IH decreased. A similar decrease was observed in infected animals of Types A and B. Infected
vector population also decreased due to the inclusion of spraying insecticide in the control strategy,
while an increased number was observed for the case without control. In this case, infected human IH
was reduced by 12.67%, infected animal A was reduced by 22.13%, infected animal B was reduced
by 4.67%, and vector death rate was reduced by 31.10%. Therefore, almost 100% rescued cases was
achieved for humans in 78 days, for animal Type A in 45 days, and animal Type B in 200 days,
and vector was removed in 32 days. From Figure A1, we ﬁnd that the controls u2 and u4 were initially
100%, following which u2 slowly dropped to the lower bound after 9.7 days. Moreover, the control u4
dropped to the lower bound after 9.85 days. Here the control u3 was 100% effective almost from the
ﬁrst day and reached the lower bound in almost the seventh day. Hence, the control effect of u2 was
near the optimum level but the spray of insecticide for this strategy showed the actual optimal level.

149

Math. Comput. Appl. 2018, 23, 38

Figure A1. The behavior of the model system with control and without control for Case I for
u1 = 0 and u2 = u3 = u4 = 0.

•

Case II: Optimal Use of Drug for Prevention of Disease for Animal Type B with Spray of Insecticides
on Vector

In this case, control parameters for preventive measure u3 and u4 were used to optimize the
objective function J, while the other control parameters for prevention u1 , u2 were zero. We observed
in Figure A2 that due to the control strategies, the number of infected humans IH decreased. A similar
decrease was observed in infected animals of Types A and B. Additionally, the infected vector
population decreased due to the inclusion of spraying insecticide in the control strategy, while an
increased number was observed for the case without control. For this case, infected human IH was
reduced by 12%, infected animal A was reduced by 11.15%, infected animal B was reduced by 4.67%,
and vector death was 29.7%. Therefore, almost 100% rescued cases were achieved for humans in
80 days, for animal Type A in 89 days, animal Type B in 200 days, and vector was removed in
33 days. From Figure A2, it is evident that the control u3 was initially 100% at around 0.65 days, after
which control trajectory u3 decreased slowly in the lower level almost 7 days. Moreover, the control
u4 was initially 100% effective from the beginning and decreased to the lower bound after 9.8 days.
Therefore, insecticide spray was almost effective most of the days, and for that reason the number of
vectors removed was optimal compared to the other controls for this strategy.

Figure A2. The behavior of the model system with control and without control for Case II for
u1 = u2 = 0 and u3 = u4 = 0.

150

Math. Comput. Appl. 2018, 23, 38

•

Case III: Optimal Use of Spray of Insecticides on the Sand Fly Vector

In order to optimize the objective function J, this policy involves only control via spraying
insecticides u4 , while we ﬁxed the controls for preventive measure u1 , u2 , and u3 to zero. We observed
in Figure A3 that due to the control strategies, the number of infected humans IH decreased. A similar
decrease was observed in infected animals of Types A and B. Also, the infected vector population
decreased due to the inclusion of spraying insecticide in the control strategy, while an increased
number was observed for the case without control. In this case, infected human IH was reduced by
11.83%, infected animal Type A was reduced by 11.15%, infected animal Type B was reduced by 4%,
and vector death was 29.54%. Therefore, almost 100% rescued cases were achieved for humans in
80 days, for animal Type A in 89 days, animal Type B in 250 days, and vector was removed in 33 days.
From Figure A3, we ﬁnd that the control u4 was initially 100%, following which it slowly dropped to
the lower bound after 9.97 days. Therefore, effect of insecticide spray lasts longer compared to the
other cases.

Figure A3. The behavior of the model system with control and without control for Case III for
u1 = u2 = u3 = 0 and u4 = 0.

•

Case IV: Optimal Use of Drug for Prevention from Disease for Animal Type A with Spray of Insecticides
on Vector

In this case, the control for preventive measure u2 is applied along with the control with the
spraying of insecticides u4 , with the aim of optimizing the objective function J, and we ﬁxed the
controls for preventive control parameter u1 and u3 to zero. We observed in Figure A4 that due to the
control strategies, the number of infected humans IH decreased. A similar decrease was observed in
infected animals of Types A and B. Also, the infected vector population decreased due to the inclusion
of spraying insecticide in the control strategy, while an increased number was observed for the case
without control. For this case, infected human IH was reduced by 12.5%, infected animal Type A
was reduced by 12.92%, infected animal Type B was reduced by 4%, and vector death was 30.90%.
Therefore, almost 100% rescued cases was achieved for humans in 76 days, for animal Type A in
76 days, animal Type B in 250 days, and vector was removed in 32 days. From Figure A4, we ﬁnd that
the controls u2 and u4 were initially 100%, following which u2 and u4 slowly dropped to the lower
bound after 9.7 days. Moreover, the control u4 dropped to the lower bound after 9.9 days. Hence the
control u2 and u4 were effective for almost the maximum time span. However, the control u4 was
slightly better than the other controls.

151

Math. Comput. Appl. 2018, 23, 38

Figure A4. The behavior of the model system with control and without control for Case IV for
u1 = u3 = 0 and u2 = u4 = 0.

•

Case V: Optimal Use of Drug for Prevention from Disease for Human and Animal Type B with Spray of
Insecticides on Vector

In this case, the preventive measure for controls u1 and u3 , along with the spraying of insecticides
u4 , are applied with the aim of optimizing the objective function J, and we ﬁxed the control for the
prevention of animal Type A u2 to zero. We observed in Figure A5 that due to these control strategies,
the number of infected humans IH decreased. A similar decrease was observed in infected animals
of Types A and B. Also, the infected vector population decreased due to the inclusion of spraying
insecticide in the control strategy, while an increased number was observed for the case without control.
In this case, infected human IH was reduced by 18.16%, infected animal Type A was reduced by 5.17%,
infected animal Type B was reduced by 4.67%, and vector mortality was 31.54%. Therefore, almost
100% rescue cases was achieved for humans in 55 days, for animal Type A in 153 days, animal Type B
in 200 days, and vector was removed in 31 days. From Figure A5, we ﬁnd that the controls u1 and u4
were initially 100% , following which they slowly dropped to the lower bound after 9.3 days, while
control u4 dropped to lower bound after 9.9 days. The control u3 was at 100%, almost from 0.7 days at
the beginning, and reached the lower bound after 7 days. Therefore, once spraying is complete, it stays
on for the maximum time, yielding the maximum beneﬁt under this strategy.

Figure A5. The behavior of the model system with control and without control for Case V for u2 = 0
and u1 = u3 = u4 = 0.

152

Math. Comput. Appl. 2018, 23, 38

•

Case VI: Optimal Use of Drug for Prevention from Disease for Human and Spraying of Insecticides
on Vector

In order to optimize the objective function J, the prevention technique for controls u1 and u4 were
applied, while the other prevention parameters u2 and u3 were considered as zero. We observed in
Figure A6 that due to the this control case, the number of infected humans IH decreased. A similar
decrease was observed in infected animals of Types A and B. Also, the infected vector population
decreased due to the inclusion of spraying insecticide in the control strategy, while an increased
number was observed in the case without control. For this case, infected humans IH was reduced
by 18%, infected animal Type A was reduced by 11.92%, infected animal Type B was reduced by
4.67%, and vector death was 31.38%. Therefore, almost 100% rescue cases was achieved for humans in
56 days, for animal Type A in 83 days, animal Type B in 200 days, and vector was removed in 32 days.
From Figure A6, we ﬁnd that the controls u1 and u4 were initially 100% effective, following which u1
slowly dropped to the lower bound after 9.3 days. Furthermore, the control u4 dropped to the lower
bound after 9.8 days. Therefore, insecticide spray is the strategy that can give us maximum beneﬁt.

Figure A6. The behavior of the model system with control and without control for Case VI for
u2 = u3 = 0 and u1 = u4 = 0.

•

Case VII: Optimal Use of Drug for Prevention from Disease for Human and Animal A with Spray of
Insecticides on Vector

In order to optimize the objective function J, the controls u1 and u2 were used for the prevention
of disease in addition to the spraying of insecticide u4 , setting the control parameter for the prevention
of disease in animal Type B u3 to zero. We observed in Figure A7 that due to the different control cases,
the number of infected humans IH decreased. A similar decrease was observed in infected animals of
Types A and B. Also, the infected vector population decreased due to inclusion of spraying insecticide
in the control strategy, while an increased number was observed in the case without control. In this
case, infected human IH was reduced by 18.50%, infected animal Type A was reduced by 23.07%,
infected animal Type B was reduced by 4.67%, and vector mortality was 32.75%. Therefore, almost
100% rescue cases was achieved for humans in 54 days, for animal Type A in 43 days, animal Type
B in 200 days, and vector was removed in 30 days. From Figure A7, it is observed that the controls
u1 and u2 were 100% effective initially, following which the control u1 reached the lower bound after
9.4 days. At the same time, the controls u2 and u4 reached the lower bound after 9.6 days and 9.8 days,
respectively. Here the effect of control u4 was initially 100% and reached lower bound almost in the
tenth day. Therefore, the effect of insecticide spray under this strategy stayed for maximum amount
of time.
153

Math. Comput. Appl. 2018, 23, 38

Figure A7. The behavior of the model system with control and without control for Case VII for u3 = 0
and u1 = u2 = u4 = 0.

•

Case VIII: Optimal Use of Drug for Prevention from Disease for Human, Animals Type A and Type B
with Spraying of Insecticides on Vector

In this case, in order to optimize the objective function J, all four controls (i.e., u1 , u2 , u3 , and u4 )
were used. After comparison of Case VIII with the circumstance when no controls were applied,
it could be concluded that while the human population which was susceptible increased in number,
the infected human population decreased, which is illustrated in Figure A8. It was also observed in this
case that in general, two types of susceptible animal populations increased in number and the infected
sand ﬂy populations decreased remarkably at an almost exponential rate. In particular, the sand ﬂy
population reduced below 3000 in around 10 days. The comparison at t = 10 days shows that there
was an increase by 113 individuals in S H , decrease by 60 individuals in I A , and IB and IF by 8 and
3950 individuals, respectively. With the help of this strategic case, infected human IH was reduced by
18.60%, infected animal Type A was reduced by 23.07%, infected animal Type B was reduced by 5.33%,
and vector mortality was 32.92%. Therefore, almost 100% rescue cases was achieved for humans in
53 days, for animal Type A in 43 days, animal Type B in 187, days and vector was removed in 30 days.
Figure A8 shows that the control u1 was 100% effective initially, following which it dropped slowly to
the lower bound after 9.5 days. At the same time, the controls u2 and u3 reached the lower bound after
9.3 days and 7 days, respectively. The control u4 was initially 100% effective and reached the lower
bound at approximately the tenth day. It can be concluded that a low amount of insecticide spray is
necessary in this strategy.

Figure A8. The behavior of the model system with control and without control for Case VIII for
u1 = u2 = u3 = u4 = 0.

154

Math. Comput. Appl. 2018, 23, 38

References
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.

12.
13.

14.
15.
16.
17.
18.
19.
20.

21.

22.
23.

Sharma, U.; Singh, S. Immunobiology of leishmaniasis. Indian J. Exp. Biol. 2009, 47, 412–423. [PubMed]
Park, K. Preventive and Social Medicine; Banarsidas Bhanot Publishers: Jabalpur, India, 2005.
Chaves, L.F.; Hernandez, M.J. Mathematical modelling of American Cutaneous Leishmaniasis: Incidental
hosts and threshold conditions for infection persistence. Acta Trop. 2004, 92, 245–252. [CrossRef] [PubMed]
World Health Organization. Leishmaniasis. Fact Sheet Updated April 2017. Available online: http://www.
who.int/news-room/fact-sheets/detail/leishmaniasis (accessed on 18 July 2018).
ELmojtaba, I.M.; Mugisha, J.Y.T.; Hashim, M.H.A. Mathematical analysis of the dynamics of visceral
leishmaniasis in the Sudan. Appl. Math. Comput. 2010, 217, 2567–2578. [CrossRef]
Kassiri, H.; Shariﬁnia, N.; Jalilian, M.; Shemshad, K. Epidemiological aspects of cutaneous leishmaniasis in
Ilam province, west of Iran (2000–2007). Asian Pac. J. Trop. Dis. 2012, 2, S382–S386. [CrossRef]
Reithinger, R.; Dujardin, J.C.; Louzir, H.; Pirmez, C.; Alexander, B.; Brooker, S. Cutaneous leishmaniasis.
Lancet Infect. Dis. 2007, 7, 581–596. [CrossRef]
Kasper, D.L.; Braunwald, E.; Fauci, A.S.; Hauser, S.L.; Longo, D.L.; Jameson, J.L.; Loscalzo, J. Harrison’s
Principles of Internal Medicine, 17th ed.; McGraw-Hill: New York, NY, USA, 2008; Volume 1, Chapter 1–216.
Bathena, K. A Mathematical Model of Cutaneous Leishmaniasis. Master’s Thesis, Rochester Institute of
Technology, Rochester, NY, USA, 2009.
Miller, E.; Huppert, A. The effects of Host Diversity on Vector-Borne Disease: The Conditions under Which
Diversity Will Amplify or Dilute the Disease Risk. PLoS ONE 2013, 8, e80279. [CrossRef] [PubMed]
Jaouadi, K.; Haouas, N.; Chaara, D.; Gorcii, M.; Chargui, N.; Augot, D.; Pratlong, F.; Dedet, J.P.;
Ettlijani, S.; Mezhoud, H.; et al. First detection of Leishmania killicki (Kinetoplastida, Trypanosomatidae) in
Ctenodactylus gundi (Rodentia, Ctenodactylidae), a possible reservoir of human cutaneous leishmaniasis in
Tunisia. Parasites Vectors 2011, 4, 159. [CrossRef] [PubMed]
Chatterjee, A.N.; Roy, P.K.; Mondal, J. Mathematical Model for Suppression of Sand Flies through IRS with
DDT in Visceral Leishmaniasis. Am. J. Math. Sci. 2013, 2, 105–112.
Wu, H.J.J.; Massad, E. Mathematical modelling for Zoonotic Visceral Leishmaniasis dynamics: A new
analysis considering updated parameters and notiﬁed human Brazilian data. Infect. Dis. Model. 2017,
2, 143–160.
Bacaer, N.; Guernaoui, S. The epidemic threshold of vector-borne diseases with seasonality the case of
cutaneous leishmaniasis in Chichaoua, Morocco. J. Math. Biol. 2006, 53, 421–436. [CrossRef] [PubMed]
Biswas, D.; Kesh, D.K.; Datta, A.; Chatterjee, A.N.; Roy, P.K. A Mathematical Approach to Control Cutaneous
Leishmaniasis Through Insecticide Spraying. Sop Trans. Appl. Math. 2014, 1, 44–54. [CrossRef]
Biswas, D.; Roy, P.K.; Li, X.Z.; Basir, F.A.; Pal, J. Role of macrophage in the disease dynamics of cutaneous
leishmaniasis: A delay induced mathematical study. Commun. Math. Biol. Neurosci. 2016, 2016, 1–31.
Roy, P.K.; Li, X.Z.; Biswas, D.; Datta, A. Impulsive Application to Design Effective Therapies Against
Cutaneous Leishmaniasis Under Mathematical Perceptive. Commun. Math. Biol. Neurosci. 2017, 2017, 1–17.
Biswas, D.; Datta, A.; Roy, P.K. Combating Leishmaniasis through Awareness Campaigning: A Mathematical
Study on Media Efﬁciency. Int. J. Math. Eng. Manag. Sci. 2016, 1, 139–149.
Zamir, M.; Zaman, G.; Alshomrani, A.S. Sensitivity Analysis and Optimal Control of Anthroponotic
Cutaneous Leishmania. PLoS ONE 2016, 11, e0160513. [CrossRef] [PubMed]
Begon, M.; Bennett, M.; Bowers, R.G.; French, N.P.; Hazel, S.M.; Turner, J. A clarication of transmission terms
in host-microparasite models: numbers, densities and areas. Epidemiol. Infect. 2002, 129, 147–153. [CrossRef]
[PubMed]
Abubakar, A.; Ruiz-Postigo, A.J.; Pita, J.; Lado, M.; Ben-Ismail, R.; Argaw, D.; Alvar, J. Visceral leishmaniasis
outbreak in South Sudan 2009–2012: Epidemiological assessment and impact of a multisectoral response.
PLoS Negl. Trop Dis. 2014, 8, e2720. [CrossRef] [PubMed]
Subramanian, A.; Singh, V.; Sarkar, R.R. Understanding Visceral Leishmaniasis Disease Transmission and its
Control—A Study Based on Mathematical Modeling. Mathematics 2015, 3, 913–944. [CrossRef]
Biswas, S.; Subramanian, A.; ELMojtaba, I.M.; Chattopadhyay, J.; Sarkar, R.R. Optimal combinations of
control strategies and cost-effective analysis for visceral leishmaniasis disease transmission. PLoS ONE 2017,
12, e0172465. [CrossRef] [PubMed]

155

Math. Comput. Appl. 2018, 23, 38

24.
25.
26.
27.
28.
29.
30.
31.
32.
33.
34.
35.

36.

Brett-Major, D.M.; Claborn, D.M. sandﬂy Fever: What Have We Learned in One Hundred Years? Mil. Med.
2009, 174, 426–431. [CrossRef] [PubMed]
Rogers, M.E.; Bates, P.A. Leishmania Manipulation of sandﬂy Feeding Behavior Results in Enhanced
Transmission. PLoS Pathog. 2007, 3, e91. [CrossRef] [PubMed]
Lopez, L.F.; Coutinho, F.A.B.; Burattini, M.N.; Massad, E. Threshold conditions for infection persistence in
complex host-vectors interactions. Comptes Rendus Biol. 2002, 325, 1073–1084. [CrossRef]
Zaman, G.; Kang, Y.H.; Jung, I.H. Stability analysis and optimal vaccination of an SIR epidemic model.
BioSystems 2008, 93, 240–249. [CrossRef] [PubMed]
Birkhoff, G.; Rota, G.C. Ordinary Differential Equations, 4th ed.; John Wiley and Sons: New York, NY, USA, 1989.
Lukes, D.L. Differential Equations: Classical to Controlled in Mathematics in Science and Engineering; Academic
Press: New York, NY, USA, 1982; Volume 162.
Kirschner, D.; Lenhart, S.; Serbin, S. Optimal control of the chemotherapy of HIV. J. Math. Biol. 1997, 35,
775–792. [CrossRef] [PubMed]
Shimozako, H.J.; Wu, J.; Massad, E. The Preventive Control of Zoonotic Visceral Leishmaniasis: Efﬁcacy and
Economic Evaluation. Comput. Math. Methods Med. 2017, 2017, 4797051. [CrossRef] [PubMed]
Kaabi, B.; Ahmed, S.B. Assessing the effect of zooprophylaxis on zoonotic cutaneous leishmaniasis
transmission: A system dynamics approach. Biosystems 2013, 114, 253–260. [CrossRef] [PubMed]
Okosuna, K.O.; Rachid, O.; Marcus, N. Optimal control strategies and cost-effectiveness analysis of a malaria
model. BioSystems 2013, 111, 83–101. [CrossRef] [PubMed]
Sardar, T.; Mukhopadhyay, S.; Bhowmick, A.R.; Chattopadhyay, J. An optimal cost effectiveness study on
Zimbabwe cholera seasonal data from 2008–2011. PLoS ONE 2013, 8, e81231. [CrossRef] [PubMed]
Stauch, A.; Sarkar, R.R.; Picado, A.; Ostyn, B.; Sundar, S.; Rijal, S.; Boelaert, M.; Dujardin, J.; Duerr, H. Visceral
Leishmaniasis in the Indian Subcontinent: Modelling Epidemiology and Control. PLoS Negl. Trop. Dis.
2011, 5, e1405. [CrossRef] [PubMed]
Costs of Medicines in Current Use for the Treatment of Leishmaniasis (Annex6), Drug Prices
(January 2010). Available online: http://www.who.int/leishmaniasis/research/978_92_4_12_949_6_Annex6.
pdf (accessed on 18 July 2018).
c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

156

Mathematical
and Computational
Applications

Article

Optimal Control and Computational Method for the
Resolution of Isoperimetric Problem in a
Discrete-Time SIRS System
Fadwa El Kihal

, Imane Abouelkheir, Mostafa Rachik and Ilias Elmouki *

Department of Mathematics and Computer Sciences, Faculty of Sciences Ben M’Sik,
Hassan II University of Casablanca, Casablanca 20000, Morocco; fadwa.elkihal@gmail.com (F.E.K.);
abouelkheir88@gmail.com (I.A.); m_rachik@yahoo.fr (M.R.)
* Correspondence: i.elmouki@gmail.com
Received: 7 September 2018; Accepted: 22 September 2018; Published: 24 September 2018

Abstract: We consider a discrete-time susceptible-infected-removed-susceptible “again” (SIRS)
epidemic model, and we introduce an optimal control function to seek the best control policy
for preventing the spread of an infection to the susceptible population. In addition, we deﬁne
a new compartment, which models the dynamics of the number of controlled individuals and who
are supposed not to be able to reach a long-term immunity due to the limited effect of control.
Furthermore, we treat the resolution of this optimal control problem when there is a restriction on
the number of susceptible people who have been controlled along the time of the control strategy.
Further, we provide sufﬁcient and necessary conditions for the existence of the sought optimal
control, whose characterization is also given in accordance with an isoperimetric constraint. Finally,
we present the numerical results obtained, using a computational method, which combines the secant
method with discrete progressive-regressive schemes for the resolution of the discrete two-point
boundary value problem.
Keywords: discrete-time model; SIRS model; optimal control; isoperimetric problem

1. Introduction
Many mathematical models in epidemiology are used to assist in ﬁnding the most appropriate
control strategies for a given group of individuals who belong to different classes. These classes
are often represented in epidemic systems, using compartments that are usually named susceptible
(S), exposed (E), infectious or infected (I) and removed or recovered (R) [1]. In this paper, we are
interested in the study of a population infected by an epidemic and whose dynamics are described
using a discrete-time SIRS system. The SIRS models in the continuous-time case have been widely
studied by many researchers as in [2], where Acedo et al. proposed an analytical approach to ﬁnd the
exact global solution of the classical SIRS epidemic system. Furthermore, there are Alexander and
Moghadas in [3] and Hu et al. in [4], who all provided bifurcation analysis of the SIRS model with
different incidence rates. The authors who contributed with Teng in [5] and in [6] found signiﬁcant
results from the study of the persistence and extinction of disease using SIRS models. As for Jin et al.
in [7], Liu and Zhou in [8] and Chen in [9], they obtained stability conditions for other SIRS systems.
A stability analysis of the SIRS model in the discrete-time case is not often available, but there exist
interesting analyses done for some classes of this type of model; see for example, the work of Hu et al.
in [10]. As an application of such models in a particular case of disease, Mukhopadhyay and Tapaswi
published their paper about Japanese encephalitis in [11]. Other authors studied SIRS dynamics when
the model framework was in the form of a discrete metapopulation-like system [12].

Math. Comput. Appl. 2018, 23, 52; doi:10.3390/mca23040052 157

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 52

In parallel, there are many researchers who have beneﬁted from modeling approaches in
epidemics, in order to determine the best prevention strategies against the spread of infection to
susceptibles, using different optimization techniques such as optimal control methods; see examples
in [13–20]. On the other hand, some models as in [21–23] discussed the impact of limited public health
resources in the propagation of infectious diseases, but there are very few optimization problems
that have been adapted to such subjects. Here, we try to resolve this issue by exploiting studies
published in [24–26], where medical constraints have been modeled differently with a constraint called
“isoperimetric”. More precisely, we propose an anti-epidemic control strategy that targets susceptible
people, under the isoperimetric condition that we could not control all individuals of this category due
to restricted health resources.
We consider a simple discrete-time epidemic compartmental model devised in the form of
difference equations, which describe the dynamics of a discrete-time SIRS model with a temporary
controlled class, meaning that the controlled people cannot acquire long-lived immunity to move
towards the removed compartment due to the temporary effect of the control parameter. Thereafter,
we characterize the sought optimal control, and we show the effectiveness of this limited control policy.
This optimal control problem leads to the execution of two numerical methods all combined together
at the same time, namely the forward-backward sweep method to generate the optimal state and
control functions and the secant method adapted to the isoperimetric restriction.
2. Materials
Let us deﬁne a discrete-time model with the four following main compartments:
•
•

•
•

S: the number of susceptible people to infection or who are not yet infected,
CS : the number of susceptible people who are temporarily controlled, so they cannot move
to the removed class due to the limited effect of control. It can represent the compartment of
vaccinated people in case a vaccination is not 100% effective due to the difﬁculty of producing
a perfect vaccine, the heterogeneity of the population or a vaccine not conferring a lifelong
immunity [17,27],
I: the number of infected people who are capable of spreading the epidemic to those in the
susceptible and temporarily controlled categories,
R: the number of removed people from the epidemic, but can return to the susceptible class
because of the short-term removal individuals’ immunity.

In our modeling approach, we aim to describe the dynamics of variables S, CS , I and R at time i
based on the following difference equations:
⎧
⎪
Si + 1
⎪
⎪
⎨ C
Si + 1
⎪ Ii+1
⎪
⎪
⎩
R i +1

= Si − βSi Ii − aθi Si + Πi − μSi + σRi
= CSi + aθi Si − bβCSi Ii − μCSi
= Ii + β(Si + bCSi ) Ii − γIi − μIi
= Ri + γIi − μRi − σRi

(1)

with initial conditions S0 > 0, CS0 ≥ 0, I0 ≥ 0 and R0 ≥ 0 and where Πi = μNi with Ni =
Si + CSi + Ii + Ri , gives the newborn people, aθ (0 ≤ a ≤ 1) is the recruitment rate of susceptibles
to the controlled class with θ deﬁning the control parameter as a constant between 0 and 1 (see such
consideration in the case of vaccination in [27]) and “a” modeling the reduced chances of a susceptible
individual to be controlled, β = Nδ with δ the infection transmission rate, μ the natural death rate,
i
bθ (0 ≤ b ≤ 1) the recruitment rate of controlled people to the infected class even in the presence of θ
with “b” modeling the reduced chances of a temporarily controlled individual to be infected, γ the
recovery rate and σ the losing removal individuals’ immunity rate. We note that the population size Ni
is constant at any time i because Ni+1 = Si+1 + CSi+1 + Ii+1 + Ri+1 = Ni . Hence, Πi = Π = constant.

158

Math. Comput. Appl. 2018, 23, 52

3. Methods
Now, we consider the mathematical model (1) with θ as a discrete control function.
Motivated by the desire to reduce the number of infected people as much as possible while
minimizing the value of the control θ over N times, our objective is to seek an optimal control θ ∗
such that:
J (θ ∗ ) = min J (θ )

(2)

θ ∈Θ

where J is the functional deﬁned by:
J (θ ) =

N −1 

∑

i =0

AIi +

B 2
θ
2 i

+ AIN

(3)

and where the control space Θ is deﬁned by the set:
Θ = {θ ∈ R N |θmin ≤ θi ≤ θmax , θmax ≤ 1 θmin ≥ 0, i = 0, ..., N − 1}}
A and B represent constant severity weights associated with functions I and θ, respectively.
Managers of the anti-epidemic resources cannot well predict whether their control strategy will
reach all the susceptible population over N times. To model the situation in which a restricted resource
of control is available, we consider that the number of susceptible people we can control is equal to a
constant C > 0 for N days. Hence, we try to ﬁnd θ ∗ under the deﬁnition of the following isoperimetric
restriction:
C=

N −1

∑

i =0

aθi Si

(4)

In [25,26], the authors deﬁned an isoperimetric constraint on the control variable only, to model the
total tolerable dosage amount of a therapy along the treatment period. In their conferences talks [28,29],
Kornienko et al. and de Pinho et al. introduced state constraints in an optimal control problem that is
subject to an S-exposed-I-Rdifferential system to model the situation of the limited supply of vaccine
based on the work in [24] and where the isoperimetric constraint is deﬁned on the product of the
control and state variables. Our study aims to highlight more the importance of such optimal control
approaches by considering a discrete model rather than a continuous one. This would be interesting
since data are often collected at discrete times, as noted in [30].
In our case, to take into account the constraint (4) for the resolution of the optimal control
problem (2), we consider a new variable Z deﬁned as:
Zi+1 = Zi + aθi Si

(5)

with Z0 = 0 and ZN = C.
The discrete-time system of (1) becomes:
⎧
Si + 1
⎪
⎪
⎪
⎪
⎪
⎨ CSi+1
Ii+1
⎪
⎪
⎪
R
⎪
i +1
⎪
⎩
Zi+1

= Si + Π − βSi Ii − aθi Si − μSi + σRi
= CSi + aθi Si − bβCSi Ii − μCSi
= Ii + β(Si + bCSi ) Ii − γIi − μIi
= Ri + γIi − μRi − σRi
= Zi + aθi Si

(6)

In the following, we announce two theorems for proving the existence and the characterization of
the sought optimal control θ ∗ .
Theorem 1. (Sufﬁcient conditions) For the isoperimetric optimal control problem given by (2) along with the
discrete state equations in (6), there exists a control θ ∗ ∈ Θ such that J (θ ∗ ) = minθ ∈Θ J (θ ).
159

Math. Comput. Appl. 2018, 23, 52

Proof. In order to prove the existence of a solution θ ∗ in Θ, we try to prove that minθ ∈Θ J (θ ) exists.
We have a ﬁnite number of time steps N and discrete state equations in System (6) with bounded
coefﬁcients γ, μ, b, σ, Π, a and β, then for all θ in the control set Θ, the N-component state variables:
S = (S0 , S1 , ..., Si , ..., S N −1 ),
CS = (CS0 , CS1 , ..., CSi , ..., CS N −1 ),
I = ( I0 , I1 , ..., Ii , ..., IN −1 )
and R = ( R0 , R1 , ..., Ri , ..., R N −1 ) ∀i = 0, ..., N − 1
are uniformly bounded, which implies that ∀θ ∈ Θ, J (θ ) is uniformly bounded.
We can deduce then that in f θ ∈Θ J (θ ) is ﬁnite since J (θ ) is bounded, and there exists a ﬁnite number
j of uniformly bounded sequences θ j ∈ Θ such that lim j→∞ J (θ j ) = in f θ ∈Θ J (θ ) and corresponding
j

sequences of states S j , CS , I j and R j .
Thus, there exists θ ∗ ∈ Θ and S∗ , CS∗ , I ∗ , R∗ ∈ R N such that on a subsequence,
θ j → θ∗,
S j → S∗ ,
CS → CS∗ ,
j

I j → I∗
and R j → R∗ .
Finally, due to the ﬁnite dimensional structure of the system (6) and the objective function J (θ ),
θ ∗ is an optimal control with corresponding states S∗ , CS∗ , I ∗ and R∗ [26]. Therefore, taking into account
the structure of J being a convex function, in f θ ∈Θ J (θ ) is achieved.
In order to derive the necessary conditions of optimality, we employ the discrete version of
Pontryagin’s maximum principle stated in Theorem A1 in Appendix A.
Theorem 2. (Necessary conditions) Given the optimal control θ ∗ and solutions S∗ , CS∗ , I ∗ and R∗ , there exist
λl,i , l = 1, ..., 5, i = 0, ..., N, the adjoint variables satisfying the following equations:

λ1,i
λ2,i

= λ1,i+1 (−1 + βIi∗ + μ + aθi∗ ) − aλ2,i+1 θi∗ − βλ3,i+1 Ii∗ − aθi∗ λ5,i+1
= λ2,i+1 (−1 + bβIi∗ + μ) − bλ3,i+1 βIi∗

(7)
(8)

λ3,i

= − A + λ1,i+1 βSi∗ + bλ2,i+1 βCS∗i − λ3,i+1 (−1 + β(Si∗ + bCS∗i ) − μ − γ)

λ4,i

= λ4,i+1 (μ + σ − 1) − σλ1,i+1

(10)

λ5,i

= −λ5,i+1

(11)

(9)

−λ4,i+1 γ

with λl,i = λl,i+1 − λl,i , l = 1, ..., 5, i = 0, ..., N − 1 the difference operator and λ1,N = λ2,N = λ4,N = 0,
λ3,N = A and λ5,N = constant to be determined, as the transversality conditions associated with adjoint
Equations (7)–(11).
In addition, the optimal control θ ∗ is characterized at each iteration i by:


aS∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 )
θi∗ = min max θmin , i
B

, θmax

∀i = 0, ..., N − 1

(12)

Proof. With the application of a discrete version of Pontryagin’s maximum principle in Appendix A
and as done in [26,31,32], we can determine the discrete optimal control θ ∗ for the problem (6) and its
associated trajectories S∗ , CS∗ , I ∗ and R∗ .

160

Math. Comput. Appl. 2018, 23, 52

We deﬁne a discrete Hamiltonian Hi as a brief notation of the function H deﬁned for i = 0, ..., N − 1.
as follows:
H (i, Si , CSi , Ii , Ri , λ1,i+1 , λ2,i+1 , λ3,i+1 , λ4,i+1 , λ5,i+1 , θi )
B
= AIi + θi2 + λ1,i+1 Si+1 + λ2,i+1 CSi+1 + λ3,i+1 Ii+1 + λ4,i+1 Ri+1 + λ5,i+1 Zi+1
2
The discrete-time adjoint system is resolved using the following formulations:

λ1,i = −
and λ5,i

∂Hi
∂Hi
∂H
∂H
, λ2,i = −
, λ3,i = − i , λ4,i = − i
∂Si
∂CSi
∂Ii
∂Ri
∂Hi
=−
∂Zi

that we associate with the following transversality conditions:
λ1,N =

∂φN
∂φN
∂φN
∂φN
, λ2,N =
, λ3,N =
,λ
=
∂S N
∂CS N
∂IN 4,N
∂R N

with φN representing the payoff term function in (3), namely AIN .
Then, we obtain the following discrete-time adjoint system:
⎧
λ1,i
⎪
⎪
⎪
⎪
⎨ λ2,i
λ

3,i
⎪
⎪
λ4,i
⎪
⎪
⎩

λ5,i

=
=
=
=
=

λ1,i+1 (−1 + βIi + μ + aθi ) − aλ2,i+1 θi − βλ3,i+1 Ii − aθi λ5,i+1
λ2,i+1 (−1 + bβIi + μ) − bλ3,i+1 βIi
− A + λ1,i+1 βSi + bλ2,i+1 βCSi − λ3,i+1 (−1 + β(Si + bCSi ) − μ − γ) − λ4,i+1 γ
λ4,i+1 (μ + σ − 1) − σλ1,i+1
−λ5,i+1

with the transversality conditions λ1,N = 0, λ2,N = 0, λ4,N = 0, λ3,N = A and λ5,N is unknown.
In order to find the transversality condition λ5,N = constant, we use the secant-method as the
appropriate numerical technique for finding the zero of the function λ5,N → V (λ5,N ) = Z̃N − ZN where
Z̃N is the value of Z at final iteration N for various values of λ5,N and ZN is the value fixed by C [25,33].
Since θi is a bounded control, we can then deﬁne a Lagrangian L as follows:
L((i, Si , CSi , Ii , Ri , λ1,i+1 , λ2,i+1 , λ3,i+1 , λ4,i+1 , λ5,i+1 , θi , ω1,i , ω2,i )

= Hi + ω1,i (θmax − θi ) + ω2,i (θi − θmin )
where ω1,i , ω2,i ≥ 0 ∀i verifying at θi = θi∗ , the two conditions ω1,i (θmax − θi∗ ) = 0 and ω2,i (θi∗ −
θmin ) = 0.
Let Li be the brief notation of L and Li∗ be the brief notation of L at S∗ , CS∗ , I ∗ , R∗ and θ ∗ .
The condition of minimization is deﬁned as:
Li∗ = min Li (∗∗ ).
θi ∈ Θ

θi∗

(∗∗ ),

In order to ﬁnd the solution of
set Θ to obtain the optimality equation:

we differentiate the Lagrangian Li with respect to θi on the

∂Li
= Bθi + aSi (λ2,i+1 − λ1,i+1 ) + aSi λ5,i+1 − ω1,i + ω2,i = 0 at θi∗ .
∂θi
Furthermore, we ﬁnd
θi∗ =

aSi∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 ) − ω2,i + ω1,i
.
B

161

Math. Comput. Appl. 2018, 23, 52

If:
θmin < θi∗ < θmax ,
then:
ω1,i = ω2,i = 0,
therefore:
θi∗ =

aSi∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 )
.
B

If:
θi∗ = θmin ,
then:
ω1,i = 0,
therefore:
θmin =

aSi∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 ) − ω2,i
,
B

implying that:
ω2,i = a (Si∗ (λ1,i+1 − λ2,i+1 ) − Si∗ λ5,i+1 ) − Bθmin .
Knowing that ω2,i ≥ 0 and B > 0, we obtain θi∗ ≤
If:

aSi∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 )
.
B

θi∗ = θmax ,
then:
ω2,i = 0,
thus:
aSi∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 ) + ω1,i
,
B
 ∗

implying that ω1,k = Bθmax − a Si (λ1,i+1 − λ2,i+1 ) − Si∗ λ5,i+1 .
aS∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 )
.
Knowing that ω1,i ≥ 0 and B > 0, we obtain θi∗ ≥ i
B
Using these standard optimality arguments, we characterize the control u∗k by:
θmax =

θi∗ =

⎧
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎨
⎪
⎪
⎪
⎪
⎪
⎪
⎪
⎩

aSi∗ (λ1,i+1 −λ2,i+1 −λ5,i+1 )
B

if θmin <

aSi∗ (λ1,i+1 −λ2,i+1 −λ5,i+1 )
B

θmin

if

aSi∗ (λ1,i+1 −λ2,i+1 −λ5,i+1 )
B

≤ θmin

θmax

if

aSi∗ (λ1,i+1 −λ2,i+1 −λ5,i+1 )
B

≥ θmax

162

< θmax

Math. Comput. Appl. 2018, 23, 52

or by a more reduced form, we can write


aS∗ (λ1,i+1 − λ2,i+1 − λ5,i+1 )
θi∗ = min max θmin , i
B

, θmax

4. Numerical Results and Discussion
In this section, we resolve the discrete two-point value problem deﬁned by System (6) with
initial conditions along with Equations (7)–(11) with ﬁnal conditions, using a discrete version of the
forward-backward sweep method (FBSM) [26,33] with the incorporation of a discrete progressive
iterative scheme to stock at each iteration i, the values of the state variables corresponding to
the forward discrete-time system (6), to use them in a second discrete regressive iterative scheme
incorporated for stocking at each time i, the values of the adjoint state variables corresponding to the
backward discrete-time adjoint system (7)–(11). In fact, at each time i, the values stocked of both state
and adjoint state variables were utilized in the characterization of the optimal control θ ∗ . In brief,
our algorithm is deﬁned by the following four steps of numerical calculus (Algorithm 1).
Algorithm 1: Resolution steps of the discrete two-point boundary value optimal control
problem (6)–(11).
Step 0:
Guess an initial estimation of θ.
Step 1:
Use the initial condition S(0), CS (0), I (0), R(0) and Z (0) and the stocked values by θ.
Find the optimal states S∗ , CS∗ , I ∗ , R∗ and Z ∗ , which iterate forward in the discrete two-point
boundary value problem (6).
Step 2:
Use the stocked values by θ and the transversality conditions λl,N +1 for l = 1, 2, 3, 4 while
searching the constant λ5,N +1 using the secant-method. More precisely, the secant method is used to
obtain the zero of the function λ5,N → V (λ5,N ) = Z̃N − ZN where Z̃N is the value of Z at ﬁnal
iteration N for various values of λ5,N , and ZN is the value ﬁxed by C. In addition, due its structure
in (4), we choose the constant C in a way that it cannot exceed an upper bound N0 × N where N0 is
the initial population size and N is the number of iterations.
Find the adjoint variables λl for l = 1, 2, 3, 4, 5, which iterate backward in the discrete two-point
boundary value problem (6).
Step 3:
Update the control utilizing new S, CS , I, R, Z and λl for l = 1, 2, 3, 4, 5 in the characterization of
θ ∗ as presented in (12).
Step 4:
Test the convergence. If the values of the sought variables in this iteration and the ﬁnal iteration are
sufﬁciently small, check out the recent values as solutions. If the values are not small, go back to Step 1.
Figure 1 depicts the behavior of the number of susceptible people in the absence and presence
of the control, and we can see that the number of susceptible people had decreased from its initial
condition once the control had been introduced, while there was no signiﬁcant decrease of the S
function compared to the case when there was yet no control. With these parameters used, it reached
only three people because of the maximal value of one taken by the optimal control θ ∗ in almost
alltimes of the control strategy, as seen in the last ﬁgure.
In Figure 2, we can well understand the increase of the number of the removed people because
of a natural recovery, but it cannot represent a signiﬁcant recovery because it has not reached even
14 people, and this means that only a very small number of people have been removed based on the
initial condition I (0) considered. In the presence of the control, the R function increased towards

163

Math. Comput. Appl. 2018, 23, 52

a much higher number of removed people and showed it can even reach more than 31 individuals
recovered from the disease in the ﬁrst 17 days; this number decreased thereafter because of the results
in the next ﬁgure, which will show that infection will disappear as we move forward in time.
60

Zoom of S without control
55
50
S

54.95
54.9
54.85

S

40

0

10

20
30
time (in days)

40

50

30

20

10
without control
with control

0

0

10

20
30
time (in days)

40

50

Figure 1. Number of susceptible people in the absence and presence of the control in the two cases
θ = 0 and θ = 0. Parameter values: Π = μN0 , a = 0.5, b = 0.1, β = 10−5 , μ = 0.00045, γ = 0.75 × 10−2 ,
σ = 5 × 10−4 . Initial conditions: S(0) = 55, CS (0) = 0, I (0) = 42, R(0) = 0. Severity weight constants:
A = 1 and B = 4 × 105 .
35
without control
with control

30

25

R

20

15

10

5

0

0

10

20
30
time (in days)

40

50

Figure 2. Number of removed people in the absence and presence of the control in the two cases θ = 0
and θ = 0, with the same parameter values, initial conditions and severity weights as in Figure 1.

164

Math. Comput. Appl. 2018, 23, 52

In Figure 3, the simulation shows that the number of infected people could decrease only because
of a natural recovery or death, while the infection was still serious and remained present in more
than 28 individuals. After the introduction of the control, the I function started to decrease once the
anti-epidemic was followed, and it tended to zero values after 37 days; this means most people would
recover from the disease at the end of the control strategy.
45
without control
with control
40

35

30

I

25

20

15

10

5

0

0

10

20
30
time (in days)

40

50

Figure 3. Number of infected people in the absence and presence of the control in the two cases θ = 0
and θ = 0, with the same parameter values, initial conditions and severity weights as in Figure 1.

As regards Figure 4, we sought to verify the condition C = 110, which meets the value 2 × S0 ,
and we presented associated simulations of the number of controlled people, which increased to
53 individuals once the optimal control had been introduced and increased thereafter, again showing
that it could even exceed that number, approximately towards 80 people when we go forward towards
the end. In the same ﬁgure, we show the values of the optimal control θ ∗ , which take the value of one
as the maximal peak for almost alldays, and we can also see that the imposed isoperimetric constant
has been veriﬁed in the ﬁnal instant with some error = 3.6589. In fact, it is not evident that it reached
any imposed value while verifying convergence tests of both methods used. Sometimes, the program
did not stop iterating or could not show the plot because of a NANvalue, and then, the only solution
was to ﬁx the number of iterations of the secant method in which the imposed initial guess of C was
approximately reached.
In Figure 5, we exhibit the value of the sought constant missing transversality condition λ5,N ,
which will be essential to verify the necessary conditions announced in Theorem 2. As we can observe
from this ﬁgure, the value obtained equals −1.3830 × 108 .
Figure 6 presents a numerical simulation of the Z function when we did not seek the veriﬁcation
of the condition ZN = C, and we let ZN free, so we could prove that our algorithm in the case of the
isoperimetric constraint helped to approximate ZN to C or even verify the equality between them,
far from the value that could reach ZN when it was free; as we can see from the mentioned ﬁgure,
ZN = 105.5729, which led to an important error of about 4.4271 from C that was sought in Figure 4.

165

Math. Comput. Appl. 2018, 23, 52

120

80
70
60
50
C

S

100

C−ε=106.3411

40
30
20

80

10

Z

0

0

10

20
30
time (in days)

40

50

10

20
30
time (in days)

40

50

60
1

0.8

40

θ

*

0.6

0.4

20

0.2

0

0

10

20
30
time (in days)

40

0

50

0

Figure 4. Number of controlled people, the optimal control θ ∗ and the variable Z with an imposed
constant C = 110, with the same parameter values, initial conditions and severity weights as in Figure 1.
8

−1

x 10

−1.1

−1.2

−1.3

−1.4

λ

= −1.3830×108

λ

5,N

5,N

−1.5

−1.6

−1.7

−1.8

−1.9

−2

0

10

20
30
time (in days)

40

50

Figure 5. Value of the sought transversality condition λ5,N .

166

Math. Comput. Appl. 2018, 23, 52

120

ZN=105.5729

100

Z

80

60

40

20

0

0

10

20
30
time (in days)

40

50

Figure 6. Z function when ZN is free and not forced to equal C.

5. Conclusions
In this paper, an optimal control approach with an isoperimetric constraint has been applied to a
discrete-time SIRS model, which was in the form of a four-compartmental epidemic model where it
was supposed that the controlled population did not reach the removed class due to the temporary
effect of the control. The isoperimetric restriction, which has been proposed to deﬁne the number of
susceptible people who receive the control along the anti-epidemic measures period, allowed us to
ﬁnd the optimal control needed to ﬁght against a disease when there were limited resources.
Author Contributions: All authors contributed equally to this work. All authors read and approved the
ﬁnal manuscript.
Acknowledgments: The authors would like to thank all the members of the Editorial Board who were responsible
for dealing with this paper and the anonymous referees for their valuable comments and suggestions, improving
the content of this paper.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

Appendix A
Let us deﬁne the following:
•
•

I: the set {0, ..., N − 1}
Xi : the real n-component column vector; i = 0, ..., N

167

Math. Comput. Appl. 2018, 23, 52

•
•
•

θi : the real m-component column control vector; i = 0, ..., N − 1
Θ = {θ ∈ R N |θmin ≤ θi ≤ θmax , θmax ≤ 1 θmin ≥ 0, i = 0, .., N − 1}}: the set of
admissible controls
f : Rn × Rm × Θ → Rn , F : Rn × Rm × I → R, φ : Rm × I ∪ { N } → R, continuously
differentiable functions.
Let us consider a discrete-time optimal control problem over times 0, ..., N, deﬁned by:
min{ J } =

N −1

∑

F ( Xi , θ i , i ) + φ ( X N , N )

(A1)

Xi+1 = Xi + f ( Xi , θi , i ), i = 0, ..., N − 1

(A2)

X0 given

(A3)

θi ∈ Θ

(A4)

i =0

subject to the discrete-time system:

We now deﬁne the Hamiltonian function Hi to be:
Hi = H ( Xi , θi , i ) = F ( Xi , θi , i ) + λi+1 f ( Xi , θi , i )
and in the optimal control and state by Hi∗ = H ( Xi∗ , θi∗ , i ).
Then, based on results of the discrete version of the maximum principle discussed in [34], we can
derive the following necessary conditions for our problem (A1) based on the following theorem.
Theorem A1. (A discrete version of the maximum principle) Given a discrete optimal control θi∗ in the
sense of sufﬁcient conditions and given solutions Xi∗ , then the necessary conditions for θi∗ to be optimal for
Problem (A1)–(A4) are:
Xi∗+1 = Xi∗ + f ( Xi∗ , θi∗ , i ), X0 given
Δλi = −

∗ , N)
∂Hi∗
∂φ( X N
, λN =
∂Xi
∂X N

Hi∗ ≤ H ( Xi∗ , θi , i )

for all θi∗ ∈ Θ
References
1.
2.
3.
4.
5.
6.
7.

Kermack, W.O.; McKendrick, A.G. A Contribution to the Mathematical Theory of Epidemics. Proc. R. Soc. A
1927, 115, 700–721. [CrossRef]
Acedo, L.; González-Parra, G.; Arenas, A.J. An exact global solution for the classical SIRS epidemic model.
Nonlinear Anal. Real World Appl. 2010, 11, 1819–1825. [CrossRef]
Alexander, M.E.; Moghadas, S.M. Bifurcation analysis of an SIRS epidemic model with generalized incidence.
SIAM J. Appl. Math. 2005, 65, 1794–1816. [CrossRef]
Hu, Z.; Bi, P.; Ma, W.; Ruan, S. Bifurcations of an SIRS epidemic model with nonlinear incidence rate.
Discret. Contin. Dyn. Syst. Ser. B 2011, 15, 93–112.
Teng, Z.; Liu, Y.; Zhang, L. Persistence and extinction of disease in non-autonomous SIRS epidemic models
with disease-induced mortality. Nonlinear Anal. Theory Methods Appl. 2008, 69, 2599–2614. [CrossRef]
Xamxinur, A.; Teng, Z. On the persistence and extinction for a non–autonomous SIRS epidemic model.
J. Biomath. 2006, 21, 167–176.
Jin, Y.; Wang, W.; Xiao, S. An SIRS model with a nonlinear incidence rate. Chaos Solitons Fractals 2007,
34, 1482–1497.

168

Math. Comput. Appl. 2018, 23, 52

8.
9.
10.
11.
12.

13.
14.

15.
16.
17.
18.
19.
20.

21.
22.
23.
24.

25.
26.

27.
28.
29.

30.
31.

Liu, J.; Zhou, Y. Global stability of an SIRS epidemic model with transport-related infection.
Chaos Solitons Fractals 2009, 40, 145–158.
Chen, J. An SIRS epidemic model. Appl. Math. J. Chin. Univ. 2004, 19, 101–108.
Hu, Z.; Teng, Z.; Jiang, H. Stability analysis in a class of discrete SIRS epidemic models. Nonlinear Anal. Real
World Appl. 2012, 13, 2017–2033. [CrossRef]
Mukhopadhyay, B.B.; Tapaswi, P.K. An SIRS epidemic model of Japanese encephalitis. Int. J. Math. Math. Sci.
1994, 17, 347–355. [CrossRef]
Abouelkheir, I.; El Kihal, F.; Rachik, M.; Zakary, O.; Elmouki, I. A multi-regions SIRS discrete epidemic
model with a travel-blocking vicinity optimal control approach on cells. Br. J. Math. Comput. Sci. 2017, 20,
1–16. [CrossRef] [PubMed]
Zakary, O.; Rachik, M.; Elmouki, I. On the impact of awareness programs in HIV/AIDS prevention: An SIR
model with optimal control. Int. J. Comput. Appl. 2016, 133. [CrossRef]
Zakary, O.; Larrache, A.; Rachik, M.; Elmouki, I. Effect of awareness programs and travel-blocking operations
in the control of HIV/AIDS outbreaks: A multi-domains SIR model. Adv. Differ. Equ. 2016, 2016, 169.
[CrossRef]
Shim, E. A note on epidemic models with infective immigrants and vaccination. Math. Biosci. Eng. 2006,
3, 557. [CrossRef] [PubMed]
Roy, P.K.; Saha, S.; Al Basir, F. Effect of awareness programs in controlling the disease HIV/AIDS: An optimal
control theoretic approach. Adv. Differ. Equ. 2015, 2015, 217. [CrossRef]
Rodrigues, H.S.; Monteiro, M.T.T.; Torres, D.F. Vaccination models and optimal control strategies to dengue.
Math. Biosci. 2014, 247, 1–12. [CrossRef] [PubMed]
Kumar, A.; Srivastava, P.K. Vaccination and treatment as control interventions in an infectious disease model
with their cost optimization. Commun. Nonlinear Sci. Numer. Simul. 2017, 44, 334–343. [CrossRef]
Liu, X.; Takeuchi, Y.; Iwami, S. SVIR epidemic models with vaccination strategies. J. Theor. Biol. 2008,
253, 1–11. [CrossRef] [PubMed]
Nainggolan, J.; Supian, S.; Supriatna, A.K.; Anggriani, N. Mathematical model of tuberculosis transmission
with reccurent infection and vaccination. In Journal of Physics: Conference Series; IOP Publishing: Bristol, UK,
2013; Volume 423, No. 1, p. 012059.
Zhou, L.; Fan, M. Dynamics of an SIR epidemic model with limited medical resources revisited.
Nonlinear Anal. Real World Appl. 2012, 13, 312–324. [CrossRef]
Abdelrazec, A.; Bélair, J.; Shan, C.; Zhu, H. Modeling the spread and control of dengue with limited public
health resources. Math. Biosci. 2016, 271, 136–145. [CrossRef] [PubMed]
Yu, T.; Cao, D.; Liu, S. Epidemic model with group mixing: Stability and optimal control based on limited
vaccination resources. Commun. Nonlinear Sci. Numer. Simul. 2018, 61, 54–70. [CrossRef]
Neilan, R.M.; Lenhart, S. An Introduction to Optimal Control with an Application in Disease Modeling.
In Modeling Paradigms and Analysis of Disease Trasmission Models; American Mathematical Society: Providence,
RI, USA, 2010; pp. 67–82.
Elmouki, I.; Saadi, S. BCG immunotherapy optimization on an isoperimetric optimal control problem for the
treatment of superﬁcial bladder cancer. Int. J. Dyn. Control 2016, 4, 339–345. [CrossRef]
Alkama, M.; Rachik, M.; Elmouki, I. A discrete isoperimetric optimal control approach for BCG
immunotherapy in superﬁcial bladder cancer: Discussions on results of different optimal doses. Int. J. Appl.
Comput. Math. 2017, 3, 1–18. [CrossRef]
Sharomi, O.; Malik, T. Optimal control in epidemiology. Ann. Oper. Res. 2017, 251, 55–71. [CrossRef]
Kornienko, I.; Paiva, L.T.; De Pinho, M.D.R. Introducing state constraints in optimal control for health
problems. Procedia Technol. 2014, 17, 415–422. [CrossRef]
De Pinho, M.D.R.; Kornienko, I.; Maurer, H. Optimal control of a SEIR model with mixed constraints and L 1
cost. In Proceedings of the 11th Portuguese Conference on Automatic Control, CONTROLO’2014, Porto,
Portugal, 21–23 July 2014; Springer: Cham, Switzerland, 2015; pp. 135–145.
Zakary, O.; Rachik, M.; Elmouki, I. On the analysis of a multi-regions discrete SIR epidemic model:
An optimal control approach. Int. J. Dyn. Control 2017, 5, 917–930. [CrossRef]
Zakary, O.; Rachik, M.; Elmouki, I.; Lazaiz, S. A multi-regions discrete-time epidemic model with a
travel-blocking vicinity optimal control approach on patches. Adv. Differ. Equ. 2017, 2017, 120. [CrossRef]

169

Math. Comput. Appl. 2018, 23, 52

32.

33.
34.

Zakary, O.; Rachik, M.; Elmouki, I. A new epidemic modeling approach: Multi-regions discrete-time model
with travel-blocking vicinity optimal control strategy. Infect. Dis. Model. 2017, 2, 304–322. [CrossRef]
[PubMed]
Lenhart, S.; Workman, J.T. Optimal Control Applied to Biological Models; CRC Press: Boca Raton, FL, USA, 2007.
Sethi, S.P.; Thompson, G.L. What Is Optimal Control Theory? Springer: New York, NY, USA, 2000; pp. 1–22.
c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

170

Article

Solution of Optimal Harvesting Problem by Finite
Difference Approximations of Size-Structured
Population Model
Johanna Pyy 1, *
1
2
3

*

ID

, Anssi Ahtikoski 2 , Alexander Lapin 3 and Erkki Laitinen 1

Faculty of Sciences, University of Oulu, FI-90014 Oulu, Finland; erkki.laitinen@oulu.ﬁ
Natural Resources Institute Finland (Luke) Oulu, FI-90014 Oulu, Finland; anssi.ahtikoski@oulu.ﬁ
Institute of Computational Mathematics & Information Technology, Kazan Federal University,
420008 Kazan, Russia; avlapine@mail.ru
Correspondence: pyyj@student.oulu.ﬁ

Received: 11 April 2018; Accepted: 24 April 2018 ; Published: 26 April 2018

Abstract: We solve numerically a forest management optimization problem governed by a nonlinear
partial differential equation (PDE), which is a size-structured population model. The formulated
problem is supplemented with a natural constraint for a solution to be non-negative. PDE is
approximated by an explicit or implicit in time ﬁnite difference scheme, whereas the cost function is
taken from the very beginning in the ﬁnite-dimensional form used in practice. We prove the stability
of the constructed nonlinear ﬁnite difference schemes on the set of non-negative vectors and the
solvability of the formulated discrete optimal control problems. The gradient information is derived
by constructing discrete adjoint state equations. The projected gradient method is used for ﬁnding
the extremal points. The results of numerical testing for several real problems show good agreement
with the known results and conﬁrm the theoretical statements.
Keywords: size-structured population model; nonlinear partial differential equation; ﬁnite difference
approximation; optimization; gradient method

1. Introduction
The well-posedness of the continuous size-structured model has been studied in several papers
(e.g., [1–4]). In Ref. [1], authors proved the local existence and uniqueness of a solution of the continuous
model, where birth and mortality functions depend on total population. In Ref. [2], the authors
established the local existence and uniqueness of a solution of the size-structured nonlinear population
model, where also growth rate depends on total population. In the papers [3,4], the authors proved
global existence and uniqueness of a solution of the continuous nonlinear population model, where all
vital rates depend on total population. The total population can be described by e.g., total number of
individuals (e.g., [3]), total biomass (e.g., [5]) or basal area.
A continuous nonlinear size-structured population model has been used in a forest management
optimization problem (e.g., [6–8]). In a continuous formulation, this nonlinear optimization problem
cannot be solved by analytic methods. A natural approach is to solve this problem by approximating
a continuous model by a discrete one and further solving a discrete optimization problem by iterative
algorithms. In this paper, we focus on development of ﬁnite difference schemes to approximate the
solution of a continuous nonlinear population model. Efﬁcient schemes are essential for solving
optimal control problems or parameter estimation problems as such problems require solving the
model numerous times before an optimal solution is obtained.
When continuous population model is approximated by a ﬁnite difference scheme, it becomes
a matrix population model [9]. In matrix models, trees are divided into classes with respect to their
Math. Comput. Appl. 2018, 23, 22; doi:10.3390/mca23020022 171

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 22

size—for instance, diameter. The matrix describes how the class division changes at one time step.
Matrix population models have also been used for forest management optimizations (e.g., [10,11]).
In optimization, using iterative algorithms is inevitable. Higher-order algorithms are usually
sensitive to the regularity of the solution, and, therefore, they usually yield a convergence rate of
ﬁrst order as soon as the compatibility conditions are not satisﬁed. Moreover, in practice, the vital
rates are determined on a statistical basis and the compatibility conditions required for high-order
convergence are hardly valid with real-life data. These suggest that, in most cases, a ﬁrst-order method
should be the most adequate. Hence, it is desirable to have a robust scheme that can produce many
useful qualitative and quantitative properties of the solutions of the differential problem but requires
minimum regularity of the solution [12]. Unfortunately, one could not derive the explicit formula for
the optimal strategy since the strategy, the state and the costate are coupled into a complex system.
The results at this stage may be regarded as a middle step to real world applications and serve as
a starting point for numerical computations [13].
In our knowledge, the comprehensive theoretical investigation of the forest management
optimization problem with a continuous nonlinear population model as the state equation is still
lacking, and, in that sense, the problem is an open problem. Hence, in this work, the investigation of
the problem in its differential form is omitted, whereas, we consider the ﬁnite dimensional counterpart
of the problem constructed by ﬁnite difference approximations of the state problem and taking for
cost function a ﬁnite dimensional form used in practice. We prove the stability of constructed ﬁnite
difference schemes on the set of non-negative solutions and solvability of the optimization problem,
and deduce the necessary gradient information for iterative solution methods. We solve several
applied problems, where different approximations schemes are used, and compare the computed
results. The rest of the article is organized as follows. In Section 2, a mathematical model of optimal
harvesting problem for the size-structured forest is formulated. In Section 3, we construct and
investigate two ﬁnite difference approximation schemes for a nonlinear boundary value problem
that simulates the growth and the harvesting of a forest. A gradient method for minimizing the cost
function is constructed in Section 4. The theoretical details of this method are set out in the Appendix A
to the article. Section 5 is devoted to the numerical solution of a real-life problem and comparative
analysis of the computing results. Finally, in Section 6, we present discussions.
2. Formulation of the Optimal Control Problem
In order to formulate the mathematical model for the optimal harvesting problem for the
size-structured forest, we deﬁne the following notations. In space, we denote by x ∈ Ω := ( L0 , L] the
thickness of the tree, where L0 and L are the lower and upper bounds of the space domain, respectively.
Moreover, t ∈ (0, T ] is the time, where T is the upper limit. By Q, we denote the product space
Ω × (0, T ]. We denote by y( x, t) and h( x, t) the number of trees per unit area (state) and the number of
removed trees per unit area (control), respectively. Now, the optimal harvesting problem where the
cost functional J (y, h) characterizes a net present value (NPV) of ongoing rotation, and d( x, t) is the
discounted price function, is formulated as follows:
max J (y, h) :=



(y,h)∈K

Q

d( x, t)h( x, t).

(1)

Above K = Y ad × H ad is the set of constraints for the state and the control, where

Y ad ={y | for all ( x, t) ∈ Q : y( x, t) ≥ 0; y is a solution for Equations (4)–(6)},
.H ad ={h | for all ( x, t) ∈ Q : 0  h( x, t)  hmax , for all t ∈ (0, T ] :


Ω

h( x, t)  B or


Ω

h( x, t) = 0}

(2)
(3)

From the point of real-life problems, it is obvious that there exist constants hmax > 0 and B,
which denote the upper limit for harvesting and lower limit for making proﬁtable thinning of trees at

172

Math. Comput. Appl. 2018, 23, 22

time event t; otherwise, the thinning is not done. Notice that harvesting h depends on the state y (via
constraint sets), which is deﬁned by the population model
∂y( x, t) ∂( g( x, P(t))y( x, t))
+
+ m( x, P(t))y( x, t) + h( x, t) = 0, in Q,
∂t
∂x
g(0, P(t))y(0, t) = 0, in (0, T ],
y( x, 0) = y0 ( x ), in Ω,

(4)
(5)
(6)

where g( x, P(t)) is growth rate, m( x, P(t)) mortality rate and y0 ( x )  0 is initial diameter distribution
of the trees. Growth and mortality rates depend on diameter x of a tree and on the basal area, P(t),
of the forest stand, where
 L  2
x
y( x, t)dx.
P(t) = π
2
0
In the case h = 0, the problems (4)–(6) are a particular case of the problem that have been
investigated in [1–4]. In these articles, the existence of a non-negative continuous solution of this
problem has been proved under some "natural" assumptions for input data. They are:
1.
2.
3.
4.

g( x, P) is continuous and strictly positive for all x and P and continuously differentiable with
respect to x;
m( x, P) is non-negative for x and P and integrable in x;
g( x, P) and m( x, P) are Lipschitzian with respect to P;
sup m( x, P) < ∞.
x,P

We also assume that these assumptions are satisﬁed. We use growth rate g and mortality m in
a bilinear form
g( x, P(t)) = g11 + g12 x + ( g21 + g22 x ) P(t),

m
m
m
m 
P ( t ),
+ m21 + 22 + 23
m( x, P(t)) = m11 + 12 + 13
2
x
x
x
x2
where the constants gij and mij are such that g( x, P) > 0 and m( x, P)  0 for all x ∈ Ω and P  0.
Obviously, because of suppositions g(0, P(t)) > 0, the boundary condition (5) reads as y(0, t) = 0.
The optimal harvesting problem has been investigated in [6–8]. The authors of these publications
considered the case where the harvesting function has the form h( x, t) = c( x, t)y( x, t), where c( x, t)
is the control. Thus, they investigated a coefﬁcient identiﬁcation problem while we solve an optimal
control problem with distributed (on the right-hand side) control.
3. Finite Difference Approximations
In this chapter, we derive explicit and (semi)implicit ﬁnite difference approximations for the state
problems (4)–(6) and prove their stability estimates on non-negative solutions. The investigation of
existence, uniqueness and convergence of approximations is beyond the scope of our article. For the
size-structured population model with recruitment, the existence, uniqueness and convergence of
explicit approximations is investigated in [14] and implicit approximation in [5,15].
T
The following notations are used throughout the paper: Δt = M
and Δx = L−NL0 denote the
temporal and spatial mesh size, respectively. The non-overlapping mesh intervals are (tk−1 , tk ],
k = 1, . . . , M, and ( xi−1 , xi ], i = 1, . . . , N, where t0 = 0, t M = T, x0 = L0 , x N = L.
Let us denote by yik and hik the ﬁnite difference approximations of y( xi , tk ) and h( xi , tk ),
respectively. Moreover, we denote gik := g( xi , Pk ) and mik := m( xi , Pk ) the discrete values of the
growth rate and mortality rate, respectively, in size class [ xi−1 , xi ]. The discretized value of the basal
N
x
area at time tk is Pk := π ∑ ( i )2 y( xi , tk ).
2
i =1

173

Math. Comput. Appl. 2018, 23, 22

3.1. Explicit Approximation of the State Equation
For all meshpoints i = 1, . . . , N; k = 1, . . . , M, the explicit ﬁnite difference approximation of the
size-structured population model (4)–(6) reads
gk−1 yik−1 − gik−−11 yik−−11
yik − yik−1
+ i
+ mik−1 yik−1 + hik = 0,
Δt
Δx
y0k = 0,

(7)

y0i  0 constant.
Note that we use so-called upwind approximation for the ﬁrst order derivative in space (variable
x) using the positivity of coefﬁcient g( x, P) on the set of non-negative mesh functions y. The explicit
scheme (7) can be written in the form:


Δt k−1
Δt k−1
yik − 1 −
yik−−11 + Δthik = 0.
gi − Δtmik−1 yik−1 −
g
Δx
Δx i−1
Δt k
Δt k
g − Δtmik , and, bik =
g . Moreover, we denote by
Δx i
Δx i
yk := (y1k , . . . , ykN ), hk := (hik , . . . , hkN ) the vectors of the nodal values and by
Later on, we denote by aik = 1 −
⎡

a1k
⎢ bk
⎢ 1
⎢
0
Ak = ⎢
⎢
⎢ ..
⎣.
0

0
a2k
b2k
..
.
0

0
0
a3k
..
.
0

...
...
...
..
.
...

0
0
0
..
.
bkN −1

⎤
0
0⎥
⎥
⎥
0⎥
⎥
.. ⎥
. ⎦
akN

the matrix of coefﬁcients. Now, we can write explicit difference scheme (7) in the following
algebraic form:
(8)
yk − Ak−1 yk−1 + Δthk = 0, k = 1, . . . , M.
Note that this scheme is just the forest growth model studied in [11]. Moreover, the numerical
calculation of the next temporal state involves only matrix to vector calculations. The drawback of the
explicit scheme is that the following stability condition (9) must be satisﬁed.
Lemma 1. Let the condition
Δx  Δt sup g( x, P(t))

(9)

x,t

be satisﬁed. Then, on the set of non-negative mesh functions y, the ﬁnite difference scheme (7) is stable

max yk 1  C ( T ) y0 1 +
k

M

∑ Δthk 1



,

(10)

k =1

N

where v1 = ∑ |vi |.
i =1

Proof. On the non-negative mesh functions y, the coefﬁcients gi ( P) are positive and mi ( P)  0. For the
mesh steps satisfying condition (9), the diagonal entries of matrix Ak satisfy the inequality

| aik |  1 −

Δt
g ( Pk ) + Δtmi ( Pk ).
Δx i

174

Math. Comput. Appl. 2018, 23, 22

Because of this inequality, we have the following estimate for .1 -norm of matrices, connected
with .1 -norm of vectors:

 A k 1 =

N

∑ (|aik | + |bik |)  1 + Cm Δt

i =1

with Cm = supx,t m( x, P(t)). Due to this estimate and condition (9), we obtain from Equation (8)
the inequality
yk 1  (1 + Cm Δt)yk−1 1 + Δthk 1 for all k = 1, 2, . . . , M,
whence stability estimate (10) follows.
The condition (9) means that the length of the time step Δt and width of the size class Δx have to
be chosen so that a tree cannot grow over one size class during one time step Δt (compare with [16]).
3.2. Implicit Approximation of the State Equation
For all meshpoints i = 1, . . . , N; k = 1, . . . , M, the implicit ﬁnite difference approximation of
the models (4)–(6) is the following linearized problem, with nonlinear coefﬁcients calculated on the
previous time level:
gk−1 yik − gik−−11 yik−1
yik − yik−1
+ i
+ mik−1 yik + hik = 0,
Δt
Δx
y0k = 0,

(11)

y0i  0 constant.
Equation (11) can be rewritten as

1+

Δt k−1
Δt k−1 k
+ Δtmik−1 yik −
− yik−1 + Δthik = 0,
g
g y
Δx i
Δx i−1 i−1
for all i = 1, . . . , N, k = 1, . . . , M.

Using the notations aik = 1 +
of linear algebraic equations

Δt k
Δt k
g + Δtmik and bik = −
g , we rewrite Equation (11) in a form
Δx i
Δx i

Bk−1 yk − yk−1 + Δthk = 0, k = 1, . . . , M,

(12)

where
⎡

a1k
⎢ bk
⎢ 1
⎢
0
Bk := ⎢
⎢
⎢ ..
⎣.
0

0
a2k
b2k
..
.
0

0
0
a3k
..
.
0

...
...
...
..
.
...

0
0
0
..
.
bkN −1

⎤
0
0⎥
⎥
⎥
0⎥
⎥
.. ⎥
. ⎦
akN

is a matrix of nonlinear coefﬁcients.
Lemma 2. Finite difference scheme (11) is unconditionally stable on the set of non-negative mesh functions y:
for any Δt and Δx the following stability estimate holds:
max yk 1  y0 1 +
k

175

M

∑ Δthk 1 .

k =1

(13)

Math. Comput. Appl. 2018, 23, 22

Proof. By direct calculations, we obtain from Equation (12) the equality
N

N −1

i =1

i =1

∑ aik yik + ∑

N

N

i =1

i =1

bik yik − ∑ yik−1 + Δt ∑ hik = 0.

Since aik + bik  1 and akN  1, then, from this equality, we get
N

N

N

i =1

i =1

i =1

∑ yik  ∑ yik−1 + Δt ∑ |hik |.

Because of positivity of vectors yk and yk−1 , the last inequality can be written in the form

yk 1  yk−1 1 + Δthk 1 ∀k,
whence stability estimate (13) follows.
Notice, contrary to the explicit scheme the time step Δt and class width Δx has no mutual
dependence, hence the growth of a tree during a time step is not restricted less than one size class.
This characteristic of the implicit scheme is useful in the optimal harvesting problem, covered by the
models (4)–(6) or parameter identiﬁcation problem because such problems require solving the model
many times before an optimal solution is obtained.
3.3. Approximation of the Optimal Control Problem
We denote dik := d(xi , tk ) the discounted price for size class (xi−1 , xi ] at time tk , and dk = (d1k , . . . , dkN ).
Moreover, (u, v) := ∑1N ui vi is the vector product of vectors u, v ∈ RN . Approximating the cost function (1)
by the right-hand Riemann sum, we get the following approximation for the harvesting problem:
"
max

(y,h)∈K

J̄ (y, h) :=

M

M

N

∑ (dk , hk ) = ∑ ∑ dik hik

#
.

(14)

k =1 i =1

k =1

Above, we denote by K = Yad × Had , where
Yad ={(y, h) |y  0, y is a solution for Equations (7) or (11)},

(15)

Had ={h | 0  hk  hmax , hk 1  B or hk = 0, k = 1, . . . , M}.

(16)

Moreover, y = (y1 , . . . , yM ) and h = (h1 , . . . , hM ).
The following propositions show that the discrete optimal harvesting problem (14) has at least
one solution in both cases, i.e., if models (4)–(6) is approximated explicitly or implicitly.
Proposition 1. Let the mesh steps Δt and Δx satisfy the inequality
1−

Δt
sup g( x, P(t)) − Δt sup m( x, P(t))  0.
Δx x,t
x,t

(17)

Then, Problem (14) has at least one solution if y satisﬁes Equation (7).
Proof. The set K is non-empty. In fact, due to assumption (17), the solution y of ﬁnite difference
scheme (7) with y0  0 is non-negative if h = 0. This statement can be easily veriﬁed using form (8) of
the difference scheme and noting that all entries aik and bik of the matrices Ak are non-negative.
Obviously, assumption (9) follows from inequality (17), so stability estimate (10) holds. Since
vector h ∈ K is bounded, then, due to inequality (10), there exists a constant Y such that y1  Y, i.e.,
the set K is bounded. It is closed because of the continuity of functions g( P) and m( P) with respect

176

Math. Comput. Appl. 2018, 23, 22

to P, while P is obviously continuous with respect to y. Thus, K is compact. At last, cost function
J̄ of Problem (14) is continuous, whence the existence of a solution to Problem (14) follows from
Weierstrass’s theorem.
Proposition 2. Problem (14) has at least one solution if y satisﬁes Equation (11).
Proof. Proof is very similar to the proof of Proposition 1. Namely, the set K is non-empty because,
for h = 0, the solution y of ﬁnite difference scheme (11) is non-negative for all Δx and Δt. Since h is
bounded, then, due to stability estimate (13), y is also bounded, so the set K is bounded. It is closed
because of the continuity of functions g( P) and m( P) with respect to P, and continuity of P with
respect to y. Thus, K is compact. At last, cost function J̄ of Problem (14) is continuous, whence the
existence of a solution to Problem (14) follows.
Remark 1. Since neither the function J̄ is strictly concave nor the set K is strictly convex, the optimization
problem can have a non-unique solution.
4. Realization of the Optimal Strategies
In this section, a ﬁrst order method to approximate the optimal harvesting problem (14) is
constructed. In real-life applications, the growth rate g and mortality rate m are determined on
a statistical basis and the compatibility conditions required for high-order methods can be hardly
validated. Hence, a ﬁrst order method, which is desirable to have a robust scheme but requires
minimum regularity of the solution should be the most adequate. The ﬁrst order methods require
computing of the Fréchet derivatives (Jacobian matrix), which can be computationally expensive.
However, when we consider the nonlinear optimization problem, only the gradient of the object
function is needed, and the gradient can be computed without the Fréchet derivatives. In this work,
the adjoint approach developed in the 1970s in [17] is applied for calculation of the functional gradient.
The adjoint method has a great advantage against the direct method because only one linear state
problem, so called adjoint state, need to be solved for obtaining the gradient information. Today, it is
a well-known method for computing the gradient of a functional with respect to model parameters
when this functional depends on those model parameters trough state variables, which are solutions
of the state problem. However, this method is less well understood in the control of population
models, and, as far as we know, no applications to distributed optimal control of harvesting is
presented in literature. Duality and adjoint equations are essential tools in studying existence of
the optimal pair (y, h), and, for a periodic age-dependent harvesting problem and for age-spatial
structured harvesting problem, it is applied for proving the existence of the bang-bang control in [18]
and in [19,20], respectively. For continuous size-structured harvesting, problem duality and adjoint
equations are applied for proving the existence of the bang-bang control in [6,8].
In this work, we apply the Lagrange method and give a recipe to systematically deﬁne the
adjoint state equations and gradient information. We formulate the Lagrangian of the problem (14)
with respect to the state constraint (15) only, and use the projection method regarding the control
constraint (16). In the projection method, if solution goes outside the constraint set (16), it is projected
back to there. Let us generalize and denote by A(y, h) = 0 the operator Equation (8) (or Equation (12)).
Moreover, Ak (y, h) = 0 is the operator equation at the time level k, k = 1, . . . , M.
Suppose the functional J̄ and operator A to be differentiable in the sense that there exist the
following partial derivatives:
J̄ (y + tδy, h) − J̄ (y, h)
J̄ (y, h + tδh) − J̄ (y, h)
, J̄h δh = lim
,
t
t
t →0
A(y + tδy, h) − A(y, h)
A(y, h + tδh) − A(y, h)
, Ah δh = lim
Ay δy = lim
t
t
t →0
t →0
J̄y δy = lim
t →0

177

Math. Comput. Appl. 2018, 23, 22

for all vectors δy and δh (or at least for the vectors such that y, y + δy ∈ Yad and h, h + δh ∈ Had ).
Note that for the ﬁxed h and y, J̄y ≡ J̄y (y, h) and J̄h ≡ J̄h (y, h) are vectors while Ay = Ay (y, h) and
Ah = Ah (y, h) are matrices. By A∗y and A∗h , we denote the corresponding transpose matrices.
Let us deﬁne Lagrange function, L, of the problem (14) by

L(y, h, λ) = J̄ (y(h), h) −
where

λk

∈

RN .

M

∑ (λk , Ak (y, h)),

k =1

Now, for all feasible pair (y, h) holds A(y, h) = 0, and, for any λ, we have:

L(y, h, λ) = J̄ (y(h), h),
and, since λ does not depend on h, we have
∂L(y, h, λ) ∂y
∂L(y, h, λ)
∂ J̄
.
=
+
∂h
∂y
∂h
∂h

(18)

∂y
is to compute N ﬁnite differences over control variable h.
∂h
However, each computation requires solving the equation A(y, h) = 0, and, for large N, this method
∂y
is computationally expensive. In the adjoint method, we can avoid to compute
by solving the linear
∂h
adjoint state equation only once.
The theory of constrained optimization, see [21], says that (y, h) is the optimal pair for the
problem (14) if (y, h, λ) is a saddle point of L. The derivatives of L with respect to y, h and λ are:
Above, one method to approximate

∂L(y, h, λ)
∂ J̄ (y, h)  ∂A(y, h) ∗
=
−
λ,
∂y
∂y
∂y


∂L(y, h, λ)
∂ J̄ (y, h)
∂A(y, h) ∗
=
−
λ,
∂h
∂h
∂h
∂L(y, h, λ)
= − A(y, h).
∂λ
∂L(y, h, λ)
∂L(y, h, λ)
= 0 gives the state equation,
= 0 gives the adjoint state equation
∂λ
∂y
∂ J̄
∂L(y, h, λ)
and
=
gives the gradient.
∂h
∂h
Now, the calculation of the gradient can be summarized by the following steps when the
Lagrangian L(y, h, λ) = J̄ (y, h) − (λ, A(y, h)) is ﬁrst formulated:
Now,

I
II

Solve the state equation A(y, h) = 0;
Solve the adjoint state equation
∂L(y, h, λ)
∂ J̄ (y, h)  ∂A(y, h) ∗
=
−
λ = 0;
∂y
∂y
∂y

III

Compute the gradient
∂ J̄
∂ J̄ (y, h)  ∂A(y, h) ∗
=
−
λ.
∂h
∂h
∂h

∂ J̄
we used
∂h
in projected gradient method [22], which we applied for iteration of a solution of the optimal
harvesting problem.
Partial derivatives of J̄ (y, h) and A(y, h) are presented in Appendix A. Gradient

178

Math. Comput. Appl. 2018, 23, 22

5. Numerical Example
In this section, we study numerical examples of problem (14). We compared two cases where the
state constraint (4) was approximated with explicit approximation (7) and implicit approximation (11).
p
c p vi + cs vis
As the discounted price for size class ( xi−1 , xi ] at time tk , we used dik =
, where r is
(1 + r ) t k
p
p
s
the interest rate, c and c are the prices of the pulpwood and sawlog, respectively, and vi and
s
vi are the volumes of pulpwood and sawlog of a tree in size class ( xi−1 , xi ], respectively. In the
optimizations, we used the following values for parameters: price of pulpwood c p = 16.56 em−3 and
sawlog cs = 58.44 em−3 , interest rate r = 3% and lower bound for harvested trees B = 50 m3 ha−1 .
p
The pulpwood and sawlog volumes vi and vis we got from [10]. The optimization results of problem (14)
are presented in Tables 1 and 2, and in Figures 1 and 2.

Figure 1. Diameter distributions associated with optimal thinnings of problem (14) with state equation
approximated by explicit scheme (7). Numbers (e.g., 5–8, 11–14) represent diameter in centimetres.

179

Math. Comput. Appl. 2018, 23, 22

Figure 2. Diameter distributions associated with optimal thinnings of problem (14) with state equation
approximated by implicit scheme (11). Numbers (e.g., 5–8, 11–14) represent diameter in centimetres.
Table 1. Maximum net present values, MaxNPVs, (i.e., optimal cost function values of the problem (14))
and mean annual increments (MAI) associated with optimal stand-level managements. Initial density
is 1000 stems ha−1 .
MaxNPV (eha−1 )
Explicit
Implicit
Time step Δt = 5 years and class
width Δx = 3 cm
Time step Δt = 3 years and class
width Δx = 3 cm
Time step Δt = 3 years and class
width Δx = 2 cm
Time step Δt = 2 years and class
width Δx = 3 cm
Time step Δt = 2 years and class
width Δx = 2 cm

MAI (m3 ha−1 a−1 )
Explicit
Implicit

4095

3996

2.94

2.83

4301

4231

2.94

3.11

4676

4648

2.96

3.00

4384

4311

2.93

3.04

4776

4726

3.09

3.09

180

Math. Comput. Appl. 2018, 23, 22

Table 2. Optimal stand-level managements generated by explicit (7) and implicit (11) approximation
of the forest growth model (4). Initial density is 1000 stems ha−1 .

Stand Age (a)
Explicit

Removal
(m3 ha−1 )

Implicit Explicit

Thinning Intensity (% of
Basal Area Removed)

Implicit

Saw Log
Proportion (%)

Explicit

Implicit

Explicit

Implicit

Time step Δt = 5 years and class width Δx = 3 cm
1st thinning
55
45
91.0
77.2
2nd thinning
70
60
68.9
59.3
3rd thinning
85
80
98.6
90.6
ﬁnal thinning
105
105
50.0
69.9
total
308.5
297.0

48
46
79
100

48
46
72
100

87
88
87
90
88

85
87
86
86
86

Time step Δt = 3 years and class width Δx = 3 cm
1st thinning
49
43
78.9
52.4
2nd thinning
64
58
68.2
54.3
3rd thinning
76
70
55.4
50.0
4th thinning
82
72.4
ﬁnal thinning
100
100
91.5
82.2
total
293.9
311.3

48
50
56
100

35
35
35
59
100

83
86
87
88
86

86
89
91
86
85
87

Time step Δt = 3 years and class width Δx = 2 cm
1st thinning
46
40
60.6
60.5
2nd thinning
58
52
56.5
51.8
3rd thinning
70
64
59.7
52.1
4th thinning
79
79
50.0
55.0
ﬁnal thinning
94
97
72.6
71.4
total
299.5
290.7

36
38
45
52
100

40
40
46
56
100

83
85
88
89
89
87

81
83
86
90
86
85

Time step Δt = 2 years and class width Δx = 3 cm
1st thinning
47
45
62.2
59.1
2nd thinning
61
59
59.9
54.8
3rd thinning
75
71
58.9
50.0
4th thinning
83
85
64.4
78.0
ﬁnal thinning
101
103
50.0
71.0
total
295.5
313.3

39
41
44
70
100

38
37
37
64
100

84
87
90
84
86
86

86
88
90
87
86
87

Time step Δt = 2 years and class width Δx = 2 cm
1st thinning
43
41
55.3
58.5
2nd thinning
55
53
55.6
53.3
3rd thinning
65
65
50.0
52.0
4th thinning
77
77
53.0
50.2
ﬁnal thinning
95
95
79.5
79.2
total
293.4
293.1

36
39
42
53
100

38
39
44
51
100

80
84
86
89
89
86

82
84
87
89
87
86

The results show that the maximum net present value (NPV) associated with the explicit
approximation (7) was higher than the corresponding of the implicit approximation (Table 1).
When class width or time step decreased, maximum NPV increased in both cases. The difference of
maximum NPVs between the two cases decreased when class width or time step decreased. Only when
time step decreased from three to two years, the difference of maximum NPVs increased. The difference
was biggest (99 e) when time step Δt = 5 years and class width Δx = 3 cm and smallest (28 e) when
time step Δt = 3 years and class width Δx = 2 cm.
With both approximations, three or four intermediate thinnings were made (Table 2). Number
of thinnings increased when time step and class width decreased. When implicit approximation (11)
was used, ﬁrst thinnings were made 1–2 time steps earlier, while the last few thinnings were made
0–2 time steps later than when explicit approximation (7) was used. The thinning intensities were
almost identical between the two approximations. If there was some difference, intensity was usually
bigger when explicit approximation (7) was used (Table 2). The thinning pattern was in all optimal
managements quite similar: in each thinning, more big trees than small ones were removed indicating
a thinning from-above method (for different thinning types, see e.g., [23], pp. 727, 733). Thinning from

181

Math. Comput. Appl. 2018, 23, 22

above has proven to be the best thinning type in stand-level optimizations of even-aged boreal forests
(e.g., [24]). When explicit approximation (7) was used, all trees from two or three of the biggest size
classes were removed (Figure 1). On the other hand, when implicit approximation (11) was applied,
only part of the trees from those size classes were removed (Figure 2).
6. Discussion
This study contributes to existing literature on forest management by providing a theoretically
sound framework to solve nonlinear optimization problem of even-aged stands. We compared the
results of forest management optimizations, when the explicit and implicit approximations of the forest
growth model was used. The optimization results show that the differences of the results between
approximations are diminutive. This was expected as solutions of both approximation equations are
proved to converge to solutions of continuous equation [5,14].
In numerical examples, we used data from the Scots pine (Pinus sylvestris L.) stands that were
located in Northern Ostrobothnia, Finland, on nutrient-poor soil type. The data was the same as
in [11]. The difference is that, in [11], data was ﬁtted directly to the matrix model, as, in this study,
we ﬁrst ﬁtted data to the continuous model and then approximated it with a matrix model. In [11],
the time step was ﬁve years and class width 3 cm. The results are in line with each other. Both methods
gave four thinnings in optimal management and thinning from above dominated as the thinning
type. In [11], the optimal net present value was slightly higher and, in the optimal management,
the thinnings were made slightly earlier than in this study.
The optimal harvesting problem with a continuous size-structured population model was studied
in [6–8]. In those papers, harvesting was deﬁned as a proportion of removed trees. The maximum
principle for the problem was proved in [6,8]. Moreover, in [7], the strong bang-bang principle under
some additional (but realistic) conditions was proved. This means that the optimal solution has the
structure, where all trees bigger than some certain size are removed. In our results, the solution of
the optimization problem, where state constraint was approximated with explicit approximation,
was nearer that structure. In addition, the optimization results were a little better then. However,
when explicit approximation is used, the time step and class width have to be chosen so that
a tree cannot grow over one size class during one time step [16]. We proved that only then is the
explicit approximation scheme stable. For the implicit approximation scheme, we proved that it is
unconditionally stable. Thus, in implicit approximation, the time step and class width can be chosen
freely. In general, explicit approximation of the population model is more commonly used as a forest
growth model [9,16].
Author Contributions: J.P. made the approximations and conducted the optimizations under supervision of E.L.;
A.L. proved the theoretical results; J.P. and A.A. analyzed the numerical results; all authors contributed to the
writing of the manuscript.
Acknowledgments: We want to acknowledge the Jenny and Antti Wihuri foundation for ﬁnancial support.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

Appendix A
We used the adjoint method to solve the optimization problem (14). For that, we needed the
partial derivatives of the Lagrangian

L(y, h, λ) = J̄ (y, h) −

M

∑ (λk , Ak (y, h)),

k =1

where J̄ (h) = ∑kM=1 (dk , hk ) is cost function of problem (14) and Ak (y, h) is constraint (8) or (12).
First, we calculate the partial derivatives of the cost function J̄ (y, h). Since it depends only on h,
∂ J̄
obviously
= 0. The partial derivative of the cost function J̄ with respect to h is
∂y

182

Math. Comput. Appl. 2018, 23, 22

∂ J̄ (h)
= d.
∂h
Next, we calculate the partial derivatives of constraint function A(y, h). In both forms of A
∂A(y, h)
= Δt.
(constraints (8) or (12)), the partial derivative with respect to h is
∂h
Let us calculate the partial derivative of constraint function (8) (explicit approximation of the state
Equation (4)) with respect to y
∂
∂(λ, A(y, h))
=
∂y
∂y

M

∑ (λk , yk − Ak−1 yk−1 + Δthk ).

(A1)

k =1

⎡

⎤
a1k y1k
⎥
⎢
a2k y2k + b1k y1k
⎥
⎢
⎥.
Hk := Ak yk = ⎢
..
⎥
⎢
.
⎣
⎦
akN ykN + bkN −1 ykN −1

Let us denote

Then, the partial derivative (A1) can be written in the form
∂(λ, A(y, h))
∂
=
∂y
∂y





M

∑ (λ

k =1

k

,y −H
k

k −1

) .

By rearranging the terms and deﬁning λ M+1 = 0, we get
∂
∂(λ, A(y, h))
=
∂y
∂y
Now,



( λ1 , H0 ) +



M

∑ ((λk , yk ) − (λk+1 , Hk )) .

k =1

∂Hk
∂H0
= 0 by deﬁnition of y0 and
= Ak + H1k , k = 1, . . . , M − 1, where
∂y
∂y
⎡
⎢
⎢
H1k = ⎢
⎢
⎣

k yk
a11
1
k y k + b k y k +1
a21
2
11 1
...
k
k
a N1 y N + bkN −1,1 ykN −1

...
...
..
.
...

⎤
k yk
a1N
1
⎥
k yk + bk yk
a2N
⎥
2
1N 1
⎥,
⎥
...
⎦
k
k
k
k
a NN y N + b N −1,N y N −1

and



xj 2
xj
Δt
m22
m23
= k = − ( g21 + g22 xi )
π − Δt m21 +
+ 2
Δx
2
xi
2
xi
∂y j

2
xj
∂bk
Δt
( g + g22 xi )
π.
bijk = ik =
Δx 21
2
∂y j
aijk

∂aik

Thus, we can deﬁne
∂(λ, A(y, h))
= ( w1 , w2 , . . . , w M ),
∂y
where
wk = λk − ((Ak )∗ + (H1k )∗ )λk+1 , k = 1, . . . , M − 1
wM = λM.

183

2

π,

(A2)
(A3)

Math. Comput. Appl. 2018, 23, 22

Then, we calculate the partial derivative of constraint (12) (implicit approximation of the state
Equation (4)) with respect to y
∂
∂(λ, A(y, h))
=
∂y
∂y
Let us denote

M

∑ (λk , Bk−1 yk − yk−1 + Δthk ).

(A4)

k =1

⎡

⎤
a1k−1 y1k
⎢ k −1 k
k −1 k ⎥
⎢ a2 y2 − b1 y1 ⎥
⎥.
G k = B k −1 y k = ⎢
..
⎢
⎥
.
⎣
⎦
k −1 k
k −1 k
a N y N − b N −1 y N −1

Then, the partial derivative (A4) can be written in the form
∂
∂(λ, A(y, h))
=
∂y
∂y

M

∑ ( λ k , G k − y k −1 ).

k =1

∂Gk
∂Gk
∂Gk
=
+
.
k
−
1
∂y
∂y
∂yk
∂ ( λ1 , y0 )
∂ ( λ1 , G1 )
∂ ( λ1 , G1 )
= 0 and derivative
=
. By rearranging
By deﬁnition of y0 , derivative
∂y
∂y
∂y1
M
+
1
the terms and deﬁning λ
= 0, we get


M
∂(λ, A(y, h))
∂ ( λ k , G k ) ∂ ( λ k +1 , G k +1 − y k )
= ∑
+
.
∂y
∂yk
∂yk
k =1
Note that function Gk depends on yk−1 and yk so the partial derivative

Derivative

∂Gk
= Bk−1 and derivative
∂yk
⎡
k y k +1
a11
1
⎢
k
+
1
k
k y k +1
⎢ a21 y2 − b11
∂Gk+1
1
⎢
=
.
⎢
..
∂yk
⎣
akN1 ykN+1 − bkN −1,1 ykN+−11

...
...
..
.
...

k y k +1
a1N
1
k +1
k
k y k +1
a2N y2 − b1N
1

⎤

⎥
⎥
⎥,
..
⎥
.
⎦
k +1
k +1
k
k
a NN y N − b N −1,N y N −1

where aijk and bijk are derivatives of coefﬁcients aik and bik with respect to ykj deﬁned in
Equations (A2) and (A3), respectively. Thus, we can deﬁne
∂(λ, A(y, h))
= ( q1 , q2 , . . . , q M ),
∂y
where

q k = ( B k −1 ) ∗ λ k +

∂Gk+1
∂yk

∗



− 1N

λk+1 , k = 1, . . . , M − 1,

q M = ( B M −1 ) ∗ λ M ,
and 1 N is N × N identity matrix.
References
1.

Kato, N.; Torikata, H. Local existence for a general model of size-dependent population dynamics.
Abstr. Appl. Anal. 1997, 2, 207–226. [CrossRef]

184

Math. Comput. Appl. 2018, 23, 22

2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.
19.
20.
21.
22.
23.
24.

Kato, N. A general model of size-dependent population dynamics with nonlinear growth rate. J. Math.
Anal. Appl. 2004, 297, 234–256. [CrossRef]
Calsina, A.; Saldana, J. A model of physiologically structured population dynamics with a nonlinear
individual growth rate. J. Math. Biol. 1995, 33, 335–364. [CrossRef]
Calsina, A.; Saldana, J. Basic theory for a class of models of hierarchically structured population dynamics
with distributed states in the recruitment. Math. Model. Meth. Appl. Sci. 2006, 16, 16951722. [CrossRef]
Ackleh, A.S.; Deng, K.; Hu, S.A. Quasilinear Hierarchical Size-Structured Model: Well-Posedness and
Approximation. Appl. Math. Optim. 2005, 51, 3559. [CrossRef]
Hritonenko, N.; Yatsenko, Y.; Goetz, R.-U.; Xabadia, A. Maximum principle for size-structured model of forest
and carbon sequestration management. Appl. Math. Lett. 2008, 21, 1090–1094 [CrossRef]
Hritonenko, N.; Yatsenko, Y.; Goetz, R.-U.; Xabadia, A. A bang-bang regime in optimal harvesting of
size-structured populations. Nonlinear Anal. Theory Methods Appl. 2009, 71, e2331–e2336. [CrossRef]
Hritonenko, N.; Yatsenko, Y.; Goetz, R.-U.; Xabadia, A. Optimal harvesting in forestry: Steady-state analysis
and climate change impact. J. Biol. Dyn. 2013, 7, 41–58. [CrossRef] [PubMed]
Liang, J.; Picard, N. Matrix model of Forest Dynamics: An Overview and Outlook. For. Sci. 2013, 59, 359–378.
[CrossRef]
Rämö, J.; Tahvonen, O. Economics of harvesting uneven-aged forest stands in Fennoscandia. Scand. J. For. Res.
2014, 29, 777–792. [CrossRef]
Pyy, J.; Ahtikoski, A.; Laitinen, E.; Siipilehto, J. Introducing a non-stationary matrix model for stand-level
optimization, an even aged Pine (Pinus sylvestris L.) stand in Finland. Forests 2017, 8, 163. [CrossRef]
Anita, S.; Ianneli, M.; Kim, M.-Y.; Park, E.-J. Optimal harvesting for periodic age-dependent population
dynamics. SIAM J. Appl. Math. 1998, 58, 1648–1666.
Xie, Q.; He, Z.-R.; Wang, X. Optimal harvesting in diffusive population models with size random growth and
distributed recruitment. Electron. J. Differ. Eq. 2016, 214, 1–13.
Ackleh, A.S.; Farkas, J.Z.; Li, X.; Ma, B. Finite difference approximations for a size-structured population
model with distributed states in the recruitment. J. Biol. Dyn. 2015, 9, 2–31. [CrossRef] [PubMed]
Ackleh, A.S.; Ito, K. An implicit ﬁnite difference scheme for the nonlinear size-structured population model.
Numer. Func. Anal. Opt. 1997, 18, 865–884. [CrossRef]
Picard, N.; Liang, J. Matrix models for size structured populations: Unrealistic fast growth or simply diffusion?
PLoS ONE 2014, 9, e98254. [CrossRef] [PubMed]
Lions, J. Nonhomogeneous Boundary Value Problems and Applications; Springer Verlag: Berlin, German, 1972.
Anita, S.; Arnautu, V.; Stefanescu, R. Numerical optimal harvesting for periodic age-structured population
dynamics with logistic term. Numer. Func. Anal. Opt. 2009, 30, 183–198. [CrossRef]
Kang, Y.H.; Lee, M.J.; Jung, I.H. Optimal Harvesting for an Age-Spatial-Structured Population Dynamic
Model with External Mortality. Abstr. Appl. Anal. 2012. [CrossRef]
Kim, Y.K.; Lee, M.J.; Jung, I.H. Duality in an Optimal Harvesting Problem by a Nonlinear Age-Spatial
Structured Population Dynamic System. KYUNGPOOK Math. J. 2011, 51, 353–364. [CrossRef]
Ciarlet, P.G. Introduction to Numerical Linear Algebra and Optimization; Cambridge University Press: New York,
United States, 1989.
Anita, S.; Arnautu, V.; Capasso, V. An Introduction to Optimal Control Problems in Life Sciences and Economics:
From Mathematical Models to Numerical Simulation with MATLAB; Springer: Dordrecht, The Netherlands, 2011.
Kuuluvainen, T.; Tahvonen, O.; Aakala, T. Even-aged and uneven-aged forest management in boreal
Fennoscandia: A review. AMBIO 2012, 41, 720–737. [CrossRef] [PubMed]
Tahvonen, O.; Pihlainen, S.; Niinimäki, S. On the economics of optimal timber production in boreal Scots pine
stand. Can. J. For. Res. 2013, 43, 719–730. [CrossRef]
c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

185

Article

Solution of Fuzzy Differential Equations Using Fuzzy
Sumudu Transforms
Raheleh Jafari 1, *
1
2

*

ID

and Sina Razvarz 2

ID

Department of Information and Communication Technology, University of Agder, 4879 Grimstad, Norway
Departamento de Control Automático, CINVESTAV-IPN (National Polytechnic Institute),
07360 Mexico City, Mexico; srazvarz@yahoo.com
Correspondence: jafari3339@yahoo.com; Tel.: +47-3723-3000

Received: 15 December 2017; Accepted: 16 January 2018; Published: 17 January 2018

Abstract: The uncertain nonlinear systems can be modeled with fuzzy differential equations (FDEs)
and the solutions of these equations are applied to analyze many engineering problems. However,
it is very difﬁcult to obtain solutions of FDEs. In this paper, the solutions of FDEs are approximated
by utilizing the fuzzy Sumudu transform (FST) method. Signiﬁcant theorems are suggested in order
to explain the properties of FST. The proposed method is validated with three real examples.
Keywords: uncertain nonlinear system; modeling; fuzzy Sumudu transform

1. Introduction
In many physical and dynamical processes, mathematical modeling leads to the deterministic
initial and boundary value problems. In practice, the boundary values may be different from crisp and
displays in the form of unknown parameters [1]. The qualitative behavior of solutions of the equations
is associated with the errors. If the errors are random, in this case, we have a stochastic differential
equation along with the random boundary value. Moreover, if the errors are not probabilistic, the fuzzy
numbers are substituted by random variables [1,2]. The fuzzy derivative, as well as fuzzy differential
equations (FDE), have been discussed in [3,4]. The Peano-like theorems for FDEs, and system of
FDE on R (Real line) is investigated in [5]. The ﬁrst-order fuzzy initial value problem, and the fuzzy
partial differential equation, have been studied in [5]. The simulation of the fuzzy system is discussed
in [6–11]. The application of numerical techniques for resolving FDEs has been illustrated in [12].
The Lipschitz condition and the theorem for existence and uniqueness of the solution related to FDEs,
are discussed in [13–15]. The fractional fuzzy Laplace transformation has been mentioned in [13].
An advanced method to solve FDEs is laid down based on the Sumudu transform.
Sumudu transform along with broad applications has been utilized in the area of system engineering
and applied physics. Recently, Sumudu transform is popularized in order to solve fractional local
differential equations [16–20]. In [21], Sumudu transform is suggested in order to solve fuzzy partial
differential equations. Some fundamental theorems along with some properties for Sumudu transform
are mentioned in [22]. In [23] the variational iteration technique is proposed utilizing Sumudu
transform for solving ordinary equations.
In this paper, we use FST to approximate the solutions of the FDEs. We extend our previous
work [24] by generating more theorems for describing the properties of FST. Moreover, the comparison
between our method with other numerical methods has been carried out. The FST reduces the FDE to
an algebraic equation. A very important property of the FST is that it can solve the equation without
resorting to a new frequency domain. By utilizing the proposed technique, the fuzzy boundary value
problem can be resolved directly without determining a general solution.
This paper is organized as follows: in Section 2 some deﬁnitions which have been used in this
paper are given. Section 3 demonstrates the properties of FST. In Section 4 solving FDEs by utilizing
Math. Comput. Appl. 2018, 23, 5; doi:10.3390/mca23010005

186

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 5

FST approach is described. Three real examples are used to demonstrate the efﬁciency of the proposed
method in Section 5. Section 6 provides the conclusion to the paper.
2. Preliminaries
Some concepts related to the fuzzy calculations are laid down in this section [25,26].
Deﬁnition 1. A fuzzy number B is a function of B ∈ E : R → [0, 1], in such a manner, (1) B is normal,
(there exists a0 ∈ R in such a manner B( a0 ) = 1); (2) B is convex, B(γa + (1 − γ)c) ≥min{ B( a), B(c)},
∀ a, c ∈ R, ∀γ ∈ [0, 1]; (3) B is upper semi-continuous on R, i.e., B( a) ≤ B( a0 ) + , ∀ a ∈ N ( a0 ), ∀ a0 ∈ R,
∀ > 0, N ( a0 ) is a neighborhood; (4) The set B+ = { a ∈ R, B( a) > 0} is compact.
Deﬁnition 2. The r-level of the fuzzy number B is deﬁned as follows

[ B ]r = { a ∈ R : B ( a ) ≥ r }

(1)

where 0 < r ≤ 1, B ∈ E.
Deﬁnition 3. Let B1 , B2 ∈ E and ξ ∈ R, the operations addition, subtraction, multiplication and scalar
multiplication are deﬁned as
r

r

r

r

[ B1 ⊕ B2 ]r = [ B1 ]r + [ B2 ]r = [ B1r + B2r , B1 + B2 ]
[ B1  B2 ]r = [ B1 ]r − [ B2 ]r = [ B1r − B2r , B1 − B2 ]


r
r
r r
min{ B1r B2r , B1r B2 , B1 B2r , B1 B2 }
[ B1  B2 ]r =
r
r
r
r
max{ B1r B2r , B1r B2 , B1 B2r , B1 B2 }
)
r
(ξB1r , ξB1 ), ξ ≥ 0
r
r
[ξB1 ] = ξ [ B1 ] =
r
(ξB1 , ξB1r ), ξ ≤ 0

(2)
(3)
(4)

(5)

Deﬁnition 4. The Hausdroff distance between two fuzzy numbers B1 and B2 is deﬁned as [27,28]
r

r

D ( B1 , B2 ) = sup {max(| B1r − B2r |, | B1 − B2 |)}
0≤r ≤1

(6)

D ( B1 , B2 ) has the following properties
(i)
(ii)
(iii)
(iv)

D ( B1 ⊕ u, B2 ⊕ u) = D ( B1 , B2 ), ∀ B1 , B2 , u ∈ E
D (ξB1 , ξB2 ) =| ξ | D ( B1 , B2 ), ∀ξ ∈ R, B1 , B2 ∈ E
D ( B1 ⊕ B2 , u ⊕ v) ≤ D ( B1 , u) + D ( B2 , v), ∀ B1 , B2 , u, v ∈ E
( D, E) is stated as complete metric space.

Deﬁnition 5. The function ψ : [ a1 , a2 ] −→ E is integrable on [ a1 , a2 ], if it satisﬁes in the below
mentioned relation
 ∞
 ∞
 ∞
ψ( x )dx = (
ψ( x, r )dx,
ψ( x, r )dx )
(7)
a1

a1

a1

If ψ( x ) be a fuzzy value function, as well as q( x ) be a fuzzy Riemann integrable on [ a1 , ∞] so ψ( x ) ⊕ q( x )
can be a fuzzy Riemann integrable on [ a1 , ∞]. Therefore,
 ∞
a1

(ψ( x ) ⊕ q( x ))dx =

 ∞
a

ψ( x )dx ⊕

 ∞
a

q( x )dx

(8)

According to fuzzy concept or in the case of interval arithmetic, equation B1 = B2 ⊕ s is not equivalent
with s = B1  B2 = B1 ⊕ (−1) B2 or to B2 = B1  s = B1 ⊕ (−1)s and this is the main reason in introducing
the following Hukuhara difference (H-difference).
187

Math. Comput. Appl. 2018, 23, 5

Deﬁnition 6. The deﬁnition of H-difference [29,30], is proposed by B1  H B2 = s ⇐⇒ B1 = B2 ⊕ s.
r
r
If B1  H B2 prevails, its r-level is [ B1  H B2 ]r = [ B1r − B2r , B1 − B2 ]. Precisely, B1  H B1 = 0 but
B1  B1 = 0.
Deﬁnition 7. Suppose ψ : [ a1 , a2 ] −→ E and x0 = [ a1 , a2 ]. ψ is strongly generalized differentiable at x0 , if for
all k > 0 adequately minute, ψ ( x0 ) ∈ E exists in such a manner that
(i)

∃ ψ( x0 + k)  H ψ( x0 ), ψ( x0 )  H ψ( x0 − k) and
limk→0+

(ii)

ψ( x0 +k) H ψ( x0 )
k

= limk→0+

ψ( x0 ) H ψ( x0 −k )
k

= ψ ( x0 )

ψ( x0 −k ) H ψ( x0 )
(−k)

= ψ ( x0 ),

ψ( x0 −k ) H ψ( x0 )
(−k)

= ψ ( x0 )

ψ( x0 ) H ψ( x0 −k )
k

= ψ ( x0 )

∃ ψ( x0 )  H ψ( x0 + k), ψ( x0 − k)  H ψ( x0 ) and
limk→0+

ψ( x0 ) H ψ( x0 +k )
(−k)

= limk→0+

(iii) ∃ ψ( x0 + k)  H ψ( x0 ), ψ( x0 − k )  H ψ( x0 ) and
limk→0+

ψ( x0 +k) H ψ( x0 )
k

= limk→0+

(iv) ∃ ψ( x0 )  H ψ( x0 + k), ψ( x0 )  H ψ( x0 − k ) and
limk→0+

ψ( x0 ) H ψ( x0 +k )
(−k)

= limk→0+

Remark 1. It is clear that case (i ) is H-derivative. Furthermore, a function is (i)-differentiable only when it is
H-derivative.
Remark 2. It can be concluded from [29] that, the deﬁnition of differentiability is non contradictory [31].
Let us consider ψ : R → E where ψ(t) has a parametric form as [ψ(t, r )] = [ψ(t, r ), ψ(t, r )], for all
0 ≤ r ≤ 1, thus [31]
(i)

If ψ be (i)-differentiable, so ψ(t, r ) and ψ(t, r ) are differentiable functions, moreover ψ (t) =

(ii)

(ψ (t, r ), ψ (t, r )).
If ψ be (ii)-differentiable, so ψ(t, r ) and ψ(t, r ) are differentiable functions, moreover ψ (t) =
(ψ (t, r ), ψ (t, r )).

Suppose f : ( a1 , a2 ) → R is differentiable on ( a1 , a2 ), furthermore ψ has ﬁnite root in ( a1 , a2 ),
and m ∈ E, therefore, ψ( x ) = m f ( x ) is strongly generalized differentiable on ( a1 , a2 ) along with
ψ ( x ) = m f ( x ), ∀ x ∈ ( a1 , a2 ).
Theorem 1. In [30] Assume ψ : R × E → E is taken to be a continuous fuzzy function. If x0 ∈ R, the fuzzy
initial value constraint
)
φ (t) = ψ( x, φ)
(9)
φ( x0 ) = φ0
is incorporated with two solutions: (i)-differentiable, also (ii)-differentiable. Hence the successive iterations
φn+1 ( x ) = φ0 +

 x
x0

and
φn+1 ( x ) = φ0  H (−1)

ψ(t, φn (t))dt,
 x
x0

∀ x ∈ [ x0 , x1 ]

ψ(t, φn (t))dt,

approaches towards the two solutions sequentially.
188

∀ x ∈ [ x0 , x1 ]

(10)

(11)

Math. Comput. Appl. 2018, 23, 5

Theorem 2. [29] The FDE is equivalent to a system of ordinary differential equations under generalized
differentiability.
3. Fuzzy Sumudu Transform
Fuzzy initial and boundary value problems can be resolved by utilizing fuzzy Laplace
transform [13]. In this paper, the FST methodology is illustrated; furthermore, the properties of
this methodology are stated. By applying the FST methodology, the FDE is reduced to an algebraic
equation. The main advantageous of the FST is that it can resolve the equation without resorting to
a new frequency domain. The methodology of converting FDEs to an algebraic equation is expressed
in [13].
Deﬁnition 8. Suppose ψ(t) be a continuous fuzzy value function, also, ψ( Bt)  e−t be an improper fuzzy
∞
Riemann integrable on [0, ∞). Accordingly, 0 ψ( Bt)  e−t dt is expressed as FST and it is deﬁned by
∞
Ω( B) = S[ψ(t)] = 0 ψ( Bt)  e−t dt, where 0 ≤ B < K, K ≥ 0, also e−t is real valued function. Based on
the Theorem 4 we have the following relation
 ∞
0

ψ( Bt)  e−t dt = (

Let

 ∞
0

ψ( Bt, r )e−t dt,
∞
0
∞
0

 ∞
0

ψ( Bt, r )e−t dt)

(12)

ψ( Bt, r )e−t dt
ψ( Bt, r )e−t dt

(13)

S[ψ(t)] = (S[ψ(t, r ), Sψ(t, r )])

(14)

S[ψ(t, r )] =
S[ψ(t, r )] =

hence we obtain the following relation

Theorem 3. Suppose ψ (t) be a fuzzy value integrable function, as well as ψ(t) be the primitive of ψ (t) on
[0, ∞). Therefore,
1
1
S[ψ (t)] =  S[ψ(t)]  (  [ψ(0)])
(15)
B
B
where ψ is considered to be (i)-differentiable, or
S[ψ (t)] =

−1
−1
 [ψ(0)]  (
 S[ψ(t)])
B
B

(16)

where ψ is considered to be (ii)-differentiable.
Proof. For arbitrary ﬁxed r ∈ [0, 1] we have

 S[ψ(t)]  ( B1  ψ(0))
= ( B1 S[ψ(t, r )] − B1 S[ψ(0, r )], B1 S[ψ(t, r )] − B1 S[ψ(0, r )])
1
B

(17)

We have the following relations
S[ψ (t, r )] =
S[ψ (t, r )] =

1
B S[ ψ ( t, r )] −
1
B S[ ψ ( t, r )] −

1
B [ ψ (0, r )]
1
B [ ψ (0, r )]

(18)

Hence, we obtain
1
1
 S[ψ(t)]  (  ψ(0)) = (S[ψ (t, r )], S[ψ (t, r )])
B
B

189

(19)

Math. Comput. Appl. 2018, 23, 5

If ψ is cosidered to be (i)-differentiable, so
1
1
 S[ψ(t)]  (  ψ(0)) = S[ψ (t)]
B
B

(20)

Let ψ is (ii)-differentiable. For arbitrary ﬁxed α ∈ [0, 1] we obtain
−1
B

 [ψ(0)]  ( −B1  S[ψ(t)])
= ( −B1 ψ(0, r ) + B1 S[ψ(t, r )], −B1 ψ(0, r ) + B1 S[ψ(t, r )])

(21)

The above equation can be written as the following relation
−1  [ ψ (0)]  ( −1  S[ ψ ( t )])
B
B
= ( B1 S[ψ(t, r )] − B1 ψ(0, r ), B1 S[ψ(t, r )] − B1 ψ(0, r ))

We obtain

S[ψ (t, r )] =
S[ψ (t, r )] =

So, we have

(

1
B S[ ψ ( t, r )] −
1
B S[ ψ ( t, r )] −

1
B ψ (0, r )
1
B ψ (0, r )

−1
−1
 S[ψ(t)]) = (S[ψ (t, r )], S[ψ (t, r )])
ψ(0))  (
B
B

(22)

(23)

(24)

Hence

−1
−1
 S[ψ(t)]) = S([ψ (t, r )], [ψ (t, r )])
ψ(0))  (
B
B
Since ψ is (ii)-differentiable, therefore,
(

(

−1
−1
 S[ψ(t)]) = S[ψ (t)]
ψ(0))  (
B
B

(25)

(26)

Theorem 4. Taking into consideration that Sumudu transform is a linear transformation, so if ψ(t) and ϑ (t)
be continuous fuzzy valued functions, moreover k1 as well as k2 be constant, therefore the following relation can
be obtained
(27)
S[(k1  ψ(t)) ⊕ (k2  ϑ (t))] = (k1  S[ψ(t)]) ⊕ (k2  S[ϑ (t)])
Proof. We have
∞

S[(k1  ψ(t)) ⊕ (k2  ϑ (t))] = 0 (k1  ϕ( Bt) ⊕ k2  ϑ ( Bt))  e−t dt
∞
∞
= 0 k1  ψ( Bt)  e−t dt ⊕ 0 k2  ϑ( Bt)  e−t dt
∞
∞
−
t
= k1  ( 0 ψ( Bt)  e dt) ⊕ k2  ( 0 ϑ( Bt)  e−t dt)
= k1  S[ψ(t)] ⊕ k2  S[ϑ(t)]

(28)

Therefore, we conclude
S[(k1  ψ(t)) ⊕ (k2  ϑ (t))] = (k1  S[ψ(t)]) ⊕ (k2  S[ϑ (t)])

(29)

Lemma 1. Assume that the ψ(t) is a continuous fuzzy value function on [0, ∞), also γ ≥ 0, thus
S[γ  ψ(t)] = γ  S[ψ(t)]

190

(30)

Math. Comput. Appl. 2018, 23, 5

Proof. Fuzzy Sumudu transform γ  ψ(t) is deﬁned as
S[γ  ψ(t)] =
furthermore, we have

 ∞
0

 ∞
0

γ  ψ( Bt)  e−t dt

γ  ψ( Bt)  e−t dt = γ 

 ∞
0

(31)

ψ( Bt)  e−t dt

(32)

therefore,
S[γ  ψ(t)] = γ  S[ψ(t)]

(33)

Lemma 2. Assume that the ψ(t) is a continuous fuzzy value function, and ϑ (t) ≥ 0. Furthermore, if we
suppose that the (ψ(t)  ϑ (t))  e−t is improper fuzzy Reiman integrable on [0, ∞), then
∞
−t
0 ( ψ ( Bt )  ϑ ( Bt ))  e dt
∞
∞
= ( 0 ϑ( Bt)ψ( Bt, r )e−t dt, 0

ϑ ( Bt)ψ( Bt, r )e−t dt)

(34)

Theorem 5. Suppose ψ(t) is a continuous fuzzy value function, also S[ψ(t)] = D ( B), therefore,
S[e a1 t  ψ(t)] =

1
B
)
D(
1 − a1 B
1 − a1 B

(35)

where e a1 t is considered to be a real value function, also 1 − a1 B > 0.
Proof. We have the following relation
∞

S[e a1 t  ψ(t)] = 0 e a1 Bt e−t ψ( Bt)dt
∞
∞
= ( 0 e−(1−a1 B)t ψ( Bt, r )dt, 0 e−(1−a1 B)t ψ( Bt, r )dt)

(36)

Let us consider z = 1 − a1 Bt, then
S[e a1 t  ψ(t)] = 1−1a B (
1
= { 1−1a B D ( 1−Ba B ), 1−1a
1

1

∞
0
1

∞

ψ( 1−Bza B , r )e−z dz, 0 ψ( 1−Bza B , r )e−z dz)
1
1
B
1
B
B D ( 1− a B )} = 1− a B D ( 1− a B )
1

1

(37)

1

4. Solving Fuzzy Initial Value Problem with Fuzzy Sumudu Transform Method
Consider the following fuzzy initial value problem
)
φ (t) = ψ(t, φ(t)),
φ(0) = (φ(0, r ), φ(0, r )),

0<r≤1

(38)

where ψ(t, φ(t)) is a fuzzy function. The fuzzy function ψ(t, φ(t)) is the mapping of ψ : R × E → E.
By utilizing FST method, we obtain
S[φ (t)] = S[ψ(t, φ(t))]

(39)

The resolving process of Equation (39) is based on the following cases.
Case 1: Assume that the φ (t) is (i)-differentiable. Based on the Theorem 4 we extract
φ (t) = (φ (t, r ), φ (t, r ))

191

(40)

Math. Comput. Appl. 2018, 23, 5

S[φ (t)] = (

1
1
 S[φ(t)])  φ(0)
B
B

(41)

Equation (41) can be displayed as following relation
)

where

)

S[ψ(t, φ(t), r )] = B1 S[φ(t, r )] − B1 φ(0, α)
S[ψ(t, φ(t), r )] = B1 S[φ(t, r )] − B1 φ(0, r )

(42)

ψ(t, φ(t), r ) = min{ψ(t, B)| B ∈ (φ(t, r ), φ(t, r ))}
ψ(t, φ(t), r ) = max {ψ(t, B)| B ∈ (φ(t, r ), φ(t, r ))}

(43)

Accordingly, Equation (43) can be resolved on the basis of the following assumptions
S[φ(t, r )] = U1 ( B, r )

(44)

S[φ(t, r )] = U2 ( B, r )

(45)

where U1 ( B, r ), as well as U2 ( B, r ) are the solutions of the Equation (43). By applying inverse Sumudu
transform, φ(t, r ) as well as φ(t, r ) are computed as
φ(t, r ) = S−1 [U1 ( B, r )]

(46)

φ(t, r ) = S−1 [U2 ( B, r )]

(47)

Case 2: Assume that the φ (t) is (ii)-differentiable. Based on the Theorem 4 we extract
φ (t) = (φ (t, r ), φ (t, r ))

−1
−1
 φ(0))  (
 S[φ(t)])
B
B
Equation (49) can be displayed as following relation
)
S[ψ(t, φ(t), r )] = B1 S[φ(t, r )] − B1 φ(0, r )
S[ψ(t, φ(t), r )] = B1 S[φ(t, r )] − B1 φ(0, r )
S[φ (t)] = (

where

)

ψ(t, φ(t), r ) = min{ψ(t, B)| B ∈ (φ(t, r ), φ(t, r ))}
ψ(t, φ(t), r ) = max {ψ(t, B)| B ∈ (φ(t, r ), φ(t, r ))}

(48)
(49)

(50)

(51)

Accordingly, Equation (51) can be resolved on the basis of the following assumptions
S(φ(t, r ) = V1 ( B, r )
S(φ(t, r ) = V2 ( B, r )

(52)

where V1 ( B, r ), and V2 ( B, r ) are the solutions of the Equation (51). By applying inverse Sumudu
transform, φ(t, r ) as well as φ(t, r ) are computed as
φ(t, r ) = S−1 [V1 ( B, r )]
φ(t, r ) = S−1 [V2 ( B, r )]
5. Examples
The following examples have been used to narrate the methodology proposed in this paper.

192

(53)

Math. Comput. Appl. 2018, 23, 5

Example 1. A tank with a heating system is displayed in Figure 1, where R̃ = 0.5, the thermal capacitance is
C̃ = 2 also the temperature is ψ. The model is formulated as follows [13,32],
)

φ (t) = − R̃1C̃ φ(t), 0 ≤ t ≤ T
φ(0) = (φ(0, r ), φ(0, r ))

(54)

By utilizing the FST method, we obtain
S[φ (t)] = S[−φ(t)]
S[φ (t)] =

 ∞
0

(55)

φ ( Bt)  e−t dt

(56)

where 0 ≤ B < K. If φ(t) is (i)-differentiable and case 1 holds, we extract
S[φ (t)] =

1
1
1
 (S[φ(t)]  φ(0)) = S[φ(t)]  φ(0)
B
B
B

(57)

2XWSXW IORZ
+HDWHU

0L[HU

,QSXWIORZ

Figure 1. Thermal system.

Therefore

− S[φ(t)] =

1
1
S[φ(t)]  φ(0)
B
B

(58)

Based on the Equation (42), we have
)

−S[φ(t, r )] = B1 S[φ(t, r )] − B1 φ(0, r )
−S[φ(t, r )] = B1 S[φ(t, r )] − B1 φ(0, r )

(59)

Therefore, the solution of Equation (59) is as follows
)

1
B
S[φ(t, r )] = ( B−
2 −1 ) φ (0, r ) + ( B2 −1 ) φ (0, r )
1
B
S[φ(t, r )] = ( B−
)
φ
(
t,
r
)
+
(
)φ(0, r )
2 −1
B2 −1

(60)

By utilizing the inverse Sumudu transform we have
)

−1
1
( B2B−1 )
S[φ(t, r )] = φ(0, r )S−1 ( B−
2 −1 ) + φ (0, r )S
−1
1
S[φ(t, r )] = φ(0, r )S−1 ( B−
)
+
φ
(
0,
r
)
S
( B2B−1 )
2 −1

193

(61)

Math. Comput. Appl. 2018, 23, 5

where

⎧
⎨ φ(t, r ) = et ( φ(0,r)−φ(0,r) ) + e−t ( φ(0,r)+φ(0,r) )
2
2
⎩ φ(t, r ) = et ( φ(0,r)−φ(0,r) ) + e−t ( φ(0,r)+φ(0,r) )
2
2

(62)

Now if φ(t) be (ii)-differentiable and case 2 holds, we have
S[φ (t)] = (

−1
−1
S[φ(t)])  (
φ(0))
B
B

(63)

Hence

−1
−1
S[φ(t)])  (
φ(0))
B
B
Based on the above relations, Equation (54) can be written as follows
)
−S[φ(t, r )] = B1 S[φ(t, r )] − B1 φ(0, r )
−S[φ(t, r )] = B1 S[φ(t, r )] − B1 φ(0, r )
− S[φ(t)] = (

(64)

(65)

So, the solution of Equation (65) is displayed as
)

1
S[φ(t, r )] = φ(0, r )( B+
1)
1
S[φ(t, r )] = φ(t, r )( B+1 )

(66)

By utilizing the inverse Sumudu transform, we have
)

1
φ(t, r ) = φ(0, r )S−1 ( B+
1)
−1 1
φ(t, r ) = φ(0, r )S ( B+1 )

)

where

φ(t, r ) = e−t φ(0, r )
φ(t, r ) = e−t φ(0, r )

(67)

(68)

If the initial condition be a symmetric triangular fuzzy number as φ(0) = (− a(1 − r ), a(1 − r )),
then the following cases will hold
Case 1:
)
φ(t, r ) = et (− a(1 − r ))
(69)
φ(t, r ) = et ( a(1 − r ))
Case 2:

)

φ(t, r ) = e−t (− a(1 − r ))
φ(t, r ) = e−t ( a(1 − r ))

(70)

Corresponding solution plots are displayed in Figures 2 and 3. Corresponding error plots are
shown in Figure 4. These errors are the differences of the exact and the approximation solutions for
two different methods: FST and Average Euler method [33]. FST is more accurate than the Average
Euler method.

194

Math. Comput. Appl. 2018, 23, 5

r

1

0.5
1
0.5

0
1

0
−0.5

0.5

−1

0

x

y(x) for a=0.5

Figure 2. The solution of fuzzy differential equations (FDE) under case 1 consideration.

1
0.8

r

0.6
0.4
0.2
0
1
0.5
0.5

0
0

x

−0.5

y(x) for a=0.5

Cost function

Figure 3. The solution of FDE under case 2 consideration.













î

[22]
Lower Euler method
Average
NN
Upper
FST
method













Alpha











Figure 4. The lower and upper bounds of absolute errors.

195

Math. Comput. Appl. 2018, 23, 5

Example 2. A tank system is displayed in Figure 5. Suppose I = t + 1 is inﬂow disturbances of the tank that
generates vibration in liquid level φ, also H = 1 is the ﬂow obstruction, which can be curbed utilizing the valve.
Q = 1 is the cross section of the tank. The liquid level is illustrated as following relation [34],
)

1
φ(t) + QI , 0 ≤ t ≤ T
φ (t) = − QH
φ(0) = (φ(0, r ), φ(0, r ))

(71)

By utilizing the FST method we obtain

− S[φ(t)] = (

1
1
 S[φ(t)])  ( S[φ(0)])
B
B

S[φ (t)](

 ∞
a1

φ ( Bt)e−t dt

(72)
(73)

,

$
5

9DOYH

Figure 5. Liquid tank system.

The following relation is extracted by taking into consideration case 2
S[φ (t)] = (

−1
−1
 S[φ(t)])  (
S[φ(0)])
B
B

So

− S[φ(t)] + S[t] + S[1] = (

−1
−1
S[φ(0)])
 S[φ(t)])  (
B
B

(74)

(75)

Based on the Equation (42), we have
)

−S[φ(t, r )] + S[t] + S[1] = B1 S[φ(t, r )] − B1 φ(0, r )
−S[φ(t, r )] + S[t] + S[1] = B1 S[φ(t, r )] − B1 φ(0, r )

(76)

Therefore, the solution of Equation (76) is extracted as
)

hence,

S[φ(t, r )] = S[t] + S[1] + −B1 S[φ(t, r )] − B1 φ(0, r )
S[φ(t, r )] = S[t] + S[1] + B1 S[φ(t, r )] − B1 φ(0, r )
)

1
S[φ(t, r )] = ( B+
1 ) φ (0, r ) + B
1
S[φ(t, r )] = ( B+
1 ) φ ( t, r ) + B

196

(77)

(78)

Math. Comput. Appl. 2018, 23, 5

By utilizing the inverse Sumudu transform, we obtain
)

−1
1
φ(t, r ) = φ(0, r )S−1 ( B+
1 ) + S ( B)
−1 1
φ(t, r ) = φ(0, r )S ( B+1 ) + S−1 ( B)

)

where

φ(t, r ) = e−t φ(0, r ) + t
φ(t, r ) = e−t φ(0, r ) + t

(79)

(80)

If the initial condition is taken to be a symmetric triangular fuzzy number as
φ(0) = (− a(1 − r ), a(1 − r )), so
)

φ(t, r ) = e−t (− a(1 − r )) + t
φ(t, r ) = e−t ( a(1 − r )) + t

(81)

Corresponding solution plot is displayed in Figure 6.

1
0.8

r

0.6
0.4
0.2
0
1

1
0.5
0.5

0
0

x

y(x) for a=0.5

−0.5

Figure 6. The solution of FDE under case 2 consideration.

Example 3. The nuclear decay equation can be described as [30],
)

N (t) = −λN (t)
N (0) = ( N (0, r ), N (0, r ))

(82)

where N (t) is considered to be the number of radionuclides present, λ is state as the decay constant, also N0
is taken to be the initial number of radionuclides. Let N0 be a fuzzy number. By utilizing the FST method the
following outcomes can be demonstrated
S[ N (t)] = S[−λN (t)] = −λS[ N (t)]
S[ N (t)] =

 ∞
a

N (st)e−t dt

(83)
(84)

If N (t) is (ii)-differentiable and case 2 holds, we obtain
S[ N (t)] = (

−1
−1
S[ N (t)])  (
N (0))
B
B

197

(85)

Math. Comput. Appl. 2018, 23, 5

Therefore

−1
−1
S[ N (t)])  (
N (0))
B
B
According to Equation (42), we will have the below mentioned relation
)
−λS[ N (t, r )] = B1 S[ N (t, r )] − B1 N (0, r )
−λS[ N (t, r )] = B1 S[ N (t, r )] − B1 N (0, r )
− λS[ N (t)] = (

(86)

(87)

Hence, the solution of Equation (87) is as follows:
)

S[ N (t, r )](λ − B1 ) =
S[ N (t, r )](λ − B1 ) =

)

Thus we extract

S[ N (t, r )] =
S[ N (t, r )] =

1
B N (0, r )
1
B N ( t, r )

(88)

1
−λB+1 N (0, r )
1
−λB+1 N ( t, r )

(89)

So, by utilizing the inverse Sumudu transform the following outcomes can be observed
)

N (t, r ) = N (0, r )S−1 ( −λB1 +1 )
N (t, r ) = N (0, r )S−1 ( −λB1 +1 )
)

where

(90)

N (t, r ) = e−λt N (0, r )
N (t, r ) = e−λt N (0, r )

(91)

Let λ = 1 and N0 = (1, 2, 5), then
)

)

So

N (0, r ) = (1 + r )
N (0, r ) = (5 − 3r )

(92)

N (t, r ) = e−t (1 + r )
N (t, r ) = e−t (5 − 3r )

(93)

Corresponding solution plot is displayed in Figure 7.





U

















[






\[

Figure 7. The solution of the nuclear decay equation under case 2 consideration.

198

Math. Comput. Appl. 2018, 23, 5

6. Conclusions
In this paper, the utilization of FST results in the solution of the ﬁrst order FDEs in such a manner
that it is clariﬁed by using the notion of strongly generalized differentiability. By implementing the
methodology of FST, the FDE reduces to an algebraic problem. Some theorems are given to illustrate
the properties of the FST. The novel method is validated by three real examples. Numerical experiments
along with comparisons demonstrate the excellent behavior of the proposed method. This work makes
a signiﬁcant contribution in initializing a superior starting point for such extensions. Future work
involves studying the application of this method in solving FDEs where the uncertainties are in the
form of Z-numbers.
Author Contributions: All authors contributed equally to this work. All authors read and approve the
ﬁnal manuscript.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

References
1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.
19.
20.

Zwillinger, D. Handbook of Differential Equations; Gulf Professional Publishing: Houston, TX, USA, 1998.
Khalili Golmankhaneh, A.; Porghoveh, N.; Baleanu, D. Mean square solutions of second-order random
differential equations by using Homotopy analysis method. Rom. Rep. Phys. 2013, 65, 350–361.
Buckley, J.J.; Eslami, E.; Feuring, T. Fuzzy Mathematics in Economics and Engineering; Physica-Verlag:
Heidelberg, Germany, 2002.
Diamond, P.; Kloeden, P. Metric Spaces of Fuzzy Sets: Theory and Applications; World Scientific: Singapore, 1994.
Kloeden, P. Remarks on Peano-like theorems for fuzzy differential equations. Fuzzy Set Syst. 1991, 44, 161–164.
Jafari, R.; Yu, W. Fuzzy Control for Uncertainty Nonlinear Systems with Dual Fuzzy Equations. J. Intell.
Fuzzy Syst. 2015, 29, 1229–1240.
Jafari, R.; Yu, W. Fuzzy Differential Equation for Nonlinear System Modeling with Bernstein Neural
Networks. IEEE Access 2016, doi:10.1109/ACCESS.2017.2647920.
Jafari, R.; Yu, W. Uncertainty Nonlinear Systems Modeling with Fuzzy Equations. Math. Probl. Eng. 2017,
doi :10.1155/2017/8594738.
Jafarian, A.; Jafari, R. Approximate solutions of dual fuzzy polynomials by feed-back neural networks. J. Soft
Comput. Appl. 2012, doi:10.5899/2012/jsca-00005.
Jafari, R.; Yu, W.; Li, X.; Razvarz, S. Numerical Solution of Fuzzy Differential Equations with Z-numbers
Using Bernstein Neural Networks. Int. J. Comput. Int. Sys. 2017, 10, 1226–1237.
Jafari, R.; Yu, W.; Li, X. Numerical solution of fuzzy equations with Z-numbers using neural networks.
Intell. Autom. Soft Comput. 2017, 1–7, doi:10.1080/10798587.2017.1327154.
Friedman, M.; Ming, M.; Kandel, A. Numerical solution of fuzzy differential and integral equations.
Fuzzy Set Syst. 1999, 106, 35–48.
Allahviranloo, T.; Ahmadi, M.B. Fuzzy Laplace Transform. Soft Comput. 2010, 14, 235–243.
Ding, Z.; Ma, M.; Kandel, A. Existence of the solutions of fuzzy differential equations with parameters.
Inf. Sci. 1997, 99, 205–217.
Truong, V.A.; Ngo, V.H.; Nguyen, D.P. Global existence of solutions for interval-valued integro-differential
equations under generalized H-differentiability. Adv. Differ. Equ. 2013, 1, 217–233.
Asiru, M.A. Further properties of the Sumudu transform and its applications. Int. J. Math. Educ. Sci. Tech.
2002, 33, 441–449.
Belgacem, F.B.M.; Karaballi, A.A.; Kalla, S.L. Analytical investigations of the Sumudu transform and
applications to integral production equations. Math. Probl. Eng. 2003, 103, 103–118.
Deakin, M.A.B. The Sumudu transform and the Laplace transform. Int. J. Math. Educ. Sci. Technol. 1997, 28,
159–160.
Eltayeb, H.; Kilicman, A. A note on the Sumudu transforms and differential equations. Appl. Math. Sci. 2010,
4, 1089–1098.
Srivastava, H.M.; Khalili Golmankhaneh, A.; Baleanu, D.; Yang, X.J. Local Fractional Sumudu Transform
with Application to IVPs on Cantor Sets. Abstr. Appl. Anal. 2014, doi:10.1155/2014/620529.

199

Math. Comput. Appl. 2018, 23, 5

21.
22.
23.
24.
25.
26.
27.
28.
29.
30.
31.
32.
33.
34.

Abdul Rahman, N.A.; Ahmad, M.Z. Fuzzy Sumudu transform for solving fuzzy partial differential equations.
J. Nonlinear Sci. Appl. 2016, 9, 3226–3239.
Belgacem, F.B.M.; Karaballi, A.A. Sumudu transform fundamental properties investigations and applications.
J. Appl. Math. Stoch. Anal. 2006, doi:10.1155/JAMSA/2006/91083.
Liu, Y.; Chen, W. A new iterational method for ordinary equations using Sumudu transform. Adv. Anal.
2016, doi:10.22606/aan.2016.12004.
Jafari, R.; Razvarz, S. Solution of Fuzzy Differential Equations using Fuzzy Sumudu Transforms. IEEE Int.
Conf. Innov. Intell. Syst. Appl. 2017, doi:10.1109/INISTA.2017.8001137.
Bede, B.; Stefanini, L. Generalized differentiability of fuzzy-valued functions. Fuzzy Set Syst. 2013, 230, 119–141.
Seikkala, S. On the fuzzy initial value problem. Fuzzy Set Syst. 1987, 24, 319–330.
Puri, M.L.; Ralescu, D. Fuzzy random variables. J. Math. Anal. Appl. 1986, 114, 409–422.
Wu, H.-C. The improper fuzzy Riemann integral and its numerical integration. Inform. Sci. 1999, 111, 109–137.
Bede, B.; Gal, S.G. Generalizations of the differentiability of fuzzy-number-valued functions with applications
to fuzzy differential equations. Fuzzy Set Syst. 2005, 151, 581–599.
Bede, B.; Rudas, I.J.; Bencsik, A.L. First order linear fuzzy differential equations under generalized
differentiability. Inf. Sci. 2006, 177, 1648–1662.
Chalco-Cano, Y.; Roman-Flores, H. On new solutions of fuzzy differential equations. Chaos Solitons Fractals
2006, 38, 112–119.
Pletcher, R.H.; Tannehill, J.C.; Anderson, D. Computational Fluid Mechanics and Heat Transfer; Taylor and
Francis: Abingdon, UK, 1997.
Tapaswini, S.; Chakraverty, S. Euler-based new solution method for fuzzy initial value problems. Int. J. Artif.
Intell. Soft Comput. 2014, 4, 58–79.
Streeter, V.L.; Wylie, E.B.; Bedford, K.W. Fluid Mechanics; McGraw Hill: New York, NY, USA, 1998.
c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

200

Mathematical
and Computational
Applications

Article

A Simple Spectral Observer
Lizeth Torres 1,∗ ID , Javier Jiménez-Cabas 2 , José Francisco Gómez-Aguilar 3
and Pablo Pérez-Alcazar 4 ID
1
2
3
4

*

ID

Cátedras CONACYT, Instituto de Ingeniería, Universidad Nacional Autónoma de México,
04510 Ciudad de México, México
Departamento de Ciencias de la Informática y Electrónica, Universidad de la Costa,
Barranquilla, Colombia; jjimenez41@cuc.edu.co
Cátedras CONACYT, Centro Nacional de Investigación y Desarrollo Tecnológico,
Tecnológico Nacional de México, 62490 Cuernavaca, México; jgomez@cenidet.edu.mx
Facultad de Ingeniería, Universidad Nacional Autónoma de México, 04510 Ciudad de México, México;
pperezalcazar@ﬁ-b.unam.mx
Correspondence: ftorreso@iingen.unam.mx

Received: 3 March 2018; Accepted: 10 April 2018; Published: 1 May 2018

Abstract: The principal aim of a spectral observer is twofold: the reconstruction of a signal of time
via state estimation and the decomposition of such a signal into the frequencies that make it up.
A spectral observer can be catalogued as an online algorithm for time-frequency analysis because is a
method that can compute on the ﬂy the Fourier Transform (FT) of a signal, without having the entire
signal available from the start. In this regard, this paper presents a novel spectral observer with an
adjustable constant gain for reconstructing a given signal by means of the recursive identiﬁcation of
the coefﬁcients of a Fourier series. The reconstruction or estimation of a signal in the context of this
work means to ﬁnd the coefﬁcients of a linear combination of sines a cosines that ﬁts a signal such
that it can be reproduced. The design procedure of the spectral observer is presented along with the
following applications: (1) the reconstruction of a simple periodical signal, (2) the approximation of
both a square and a triangular signal, (3) the edge detection in signals by using the Fourier coefﬁcients,
(4) the ﬁtting of the historical Bitcoin market data from 1 December 2014 to 8 January 2018 and (5) the
estimation of a input force acting upon a Dufﬁng oscillator. To round out this paper, we present
a detailed discussion about the results of the applications as well as a comparative analysis of the
proposed spectral observer vis-à-vis the Short Time Fourier Transform (STFT), which is a well-known
method for time-frequency analysis.
Keywords: signal processing; Fourier series; state observer; Short Time Fourier Transform;
time-frequency analysis

1. Introduction
The term spectral observer was proposed by Hostetter in his pioneering work [1] to name the
algorithm that permits the recursive calculation of the Fourier Transform (FT) of a band-limited signal
via state estimation. Since the presentation of such a work, several designs of spectral observers with
improved features have been proposed either to deal with noise [2], disturbances, lack of data [3] or to
estimate other parameters such as frequency [4]. The main goals of a spectral observer are both the
estimation of a given signal and the transformation of such a signal to the frequency domain by means
of the recursive identiﬁcation of the coefﬁcients of a Fourier series [5]. The estimation of a signal in the
context of this work means to ﬁnd the coefﬁcients of a linear combination of functions—sines a cosines
functions in our case—that approximates a signal of interest such that it can be reconstructed [6].
Spectral observers are useful in a wide number of applications, e.g., for determining the source of

Math. Comput. Appl. 2018, 2, 23; doi:10.3390/mca23020023

201

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 2, 23

harmonic pollution in power systems [7], for the simulation of the sea surface [8], for fault diagnosis in
motors [9,10] or in vibrating structures, such as aerospace and mechanical structures, marine structures,
buildings, bridges and offshore platforms.
A spectral observer can be catalogued as an online algorithm to compute the Fourier
Transform (FT) during a time window which slides along the signal, i.e., an algorithm to compute the
Short Time Fourier Transform (STFT). Therefore, a spectral observer can be used for the time-frequency
analysis of frequency variant signals.
The observer that we propose in this contribution is designed from a dynamical system which is
constructed from the N derivatives of a n-th order Fourier series.
To perform the estimation, the observer solely requires: (1) The measurement of the signal to
be approximated, s(t), which actually is used to compute the observation error e(t) = s(t) − ŷ(t),
where ŷ(t) is the observer output, (2) A frequency step ω = 2π/T, where T is a predeﬁned period.
The estimation provided by the observer are both the reconstruction of the original signal and the
Fourier coefﬁcients to compute the signal frequency components.
This paper is organized as follows: Section 2 presents the core of the proposed method which is
the formulation of the spectral observer from the Fourier series. Section 3 presents some examples
with test results of the proposed method utilized in different applications. In Section 4 the main results
are discussed. Finally, in Section 5 some concluding thoughts are given.
2. The Proposed Method
To construct the proposed observer, we formulate a dynamical synthetic system in state space
representation by considering, ﬁrstly, that a given signal expressed as s(t) can be approximated by a
Fourier series, and secondly, that the Fourier series is the ﬁrst state of the system and the rest of the
states are the N ﬁrst-order derivatives of the Fourier series expressed by Equation (1), where n is the
series order.
n
a0
+ ∑ [ ak cos (kωt) + bk sin (kωt)] ,
(1)
y(t) =
2
k =1
where a0 , a1 , b1 , ..., an , bn are the Fourier coefﬁcients and ω is the fundamental angular frequency of the
signal to be estimated.
In this work, we assume that the signal s(t) to be approximated has not a constant component
(offset) or that this offset is removed by an online algorithm prior to be processed by the spectral
observer. For this reason, we remove the term a0 from Equation (1) such that the series for
approximating the time function s(t) can be expressed as follows
y(t) =

n

∑ [ak cos (kωt) + bk sin (kωt)] .

(2)

k =1

If the order of the Fourier series is n = 1, we need to formulate a dynamical system with N = 2
states, each one to recover each coefﬁcient (a1 and b1 ). Thus, the two ﬁrst states are the Fourier series
and its ﬁrst derivative.
ν1 (t) = y(t) = a1 cos (ωt) + b1 sin (ωt),

ν2 (t) = ẏ(t) = −ωa1 sin (ωt) + ωb1 cos (ωt).

(3)

where νi are the states of the synthetic system. Consequently, the dynamical system that results from
the change of coordinates, gives:
ν̇1 (t) = ν2 (t),

ν̇2 (t) = −ω 2 ν1 (t),

202

(4)

Math. Comput. Appl. 2018, 2, 23

which basically is the dynamical model of a harmonic oscillator. Now, what happens if the order of
the Fourier series increases? If the order increases to n = 2, then N = 4, since we need to recover
four coefﬁcients.
ν1 (t)

= y(t) = a1 cos (ωt) + b1 sin (ωt) + a2 cos (2ωt) + b2 sin (2ωt),

ν2 (t)

= ẏ(t) = −ωa1 sin (ωt) + ωb1 cos (ωt) − 2ωa2 sin (2ωt) + 2ωb2 cos (2ωt),

ν3 (t)

= ÿ(t) = −ω 2 a1 cos (ωt) − ω 2 b1 sin (ωt) − 4ω 2 a2 cos (2ωt) − 4ω 2 b2 sin (2ωt),

ν4 (t)

= y(3) (t) = ω 3 a1 sin (ωt) − ω 3 b1 cos (ωt) + 8ω 3 a2 sin (2ωt) − 8ω 3 b2 cos (2ωt),

ν̇4 (t)

= y(4) (t) = ω 4 a1 cos (ωt) + ω 4 b1 sin (ωt) + 16ω 4 a2 cos (2ωt) + 16ω 4 b2 sin (2ωt).

(5)

The dynamical system is then formulated as in Equation (5) which, after some algebraic
manipulations, it becomes
ν̇1 (t) = ν2 (t);

ν̇2 (t) = ν3 (t), ν̇3 (t) = ν4 (t), ν̇4 (t) = −4ω 4 ν1 (t) − 5ω 2 ν3 (t),

(6)

in ν-coordinates.
By generalizing Equation (5) for order n, we obtain the following dynamical system:
ν̇1 (t) = ν2 (t),
ν̇2 (t) = ν3 (t),
.. ..
. = .,

(7)

ν̇N (t) = (−1)

n(mod 2)

ω

2n

22n

1

···

n2n

1 −1
A−
k A ω ν ( t ),

where N = 2n, Aω and Ak are expressed by Equations (8) and (9), respectively.
⎡

1
⎢
⎢0
⎢
⎢0
⎢
⎢0
. ⎢
Aω = ⎢
⎢ ...
⎢
⎢
⎢0
⎢.
⎢.
⎣.
0

0
ω
0
0
..
.
0
..
.
0

0
0
−ω2
0
..
.
0
..
.
0

0
0
0
−ω3
..
.
0
..
.
0

···
···
···
···
..
.
···
..
.
···

⎡

1
⎢0
⎢
⎢1
⎢
. ⎢
0
Ak = ⎢
⎢
⎢ ..
⎢.
⎢
⎣1
0

···
···
···
···
..
.

0
0
0
0
..
.

(−1)(m(mod 4)−m(mod 2))/2

ωm

..
.
0

0
1
1
0
0
4
1
0
..
..
.
.
0 22n−2
1
0

0
2
0
8
..
.
0

22n−1

···
···
···
···
..
.

1
0
n2
0
..
.

0
0
0
0
..
.
0
..
.

···
..
.
· · · (−1)(2n(mod 4)−2)/2 ω 2n−1

· · · n2n−2
···
0

0
n
0
n3
..
.
0

⎤
⎥
⎥
⎥
⎥
⎥
⎥
⎥
⎥,
⎥
⎥
⎥
⎥
⎥
⎥
⎦

(8)

⎤
⎥
⎥
⎥
⎥
⎥
⎥.
⎥
⎥
⎥
⎥
⎦

(9)

n2n−1

Before presenting the state observer for system (7), it is necessary to analyze its observability
conditions. A dynamical system is said to be observable if it is possible to determine its initial state by
knowledge of the input and output over a ﬁnite time interval. In this way, a state observer or state
estimator is a system that estimates the internal states of a system from the measurement of its inputs
and outputs. To verify is a linear systems is observable, the observability rank condition can be used,
which is deﬁned in the net lines.

203

Math. Comput. Appl. 2018, 2, 23

Observability rank condition. A system
ν̇(t)
y(t)

= A(t)ν(t)
= Cν(t)

(10)

is said to satisfy the observability rank condition if ∀ν(t), rank (O(ν(t))) = N, where N is the state
dimension of (10) and O(ν(t)) is the observability matrix deﬁned as
O(ν(t)) = (C CA CA2 ... CA( N −1) ) T .

(11)

Thus, according to the deﬁnition, the observability matrix for system (7), which in fact can be set
as system (10) with
⎡
⎤
0
1 ... 0
0
⎢
⎥
0
0 1 ...
0
⎢
⎥
⎢
⎥
.
..
⎢
⎥
.
.
A=⎢
(12)
.
⎥,
⎢
⎥
.
⎢
⎥
.
⎣
⎦
.
1
...
γn ( ω )
γ1 (ω )
and C = [1, 0, ..., 0], has full rank. Therefore, since system (7) is observable, a spectral observer can be
designed as follows:
ν̂˙ (t) = Aν̂(t) + K (y(t) − C ν̂(t)), ŷ(t) = C ν̂ = ν̂1 .
(13)
where “ ˆ ” means estimation, ŷ(t) is the estimated signals and A is given by (12), with constant
coefﬁcients expressed by γi (ω ). The gain of the state observer K, involved in the correction term
of Equation (13), can be calculated as K = S−1 C T , where S is the unique solution of the following
algebraic Lyapunov equation:
− λS − A T S − SA + C T C = 0
(14)
and λ is a parameter that can be used to tune the convergence rate of the observer. A numerical
solution for solving Equation (14) for a particular but common case is provided in [11].
The Fourier coefﬁcients can be recovered from the new coordinates by the relation ĉk = Ω(t)ν̂(t),
where ĉk = [ â1 b̂1 ... ân b̂n ] T and
⎛

(ωt)
⎜ −ω (ωt)
⎜
⎜
−ω 2 (ωt)
Ω(t) = ⎜
⎜
..
⎜
⎝
.
ω Γ (ωt)

(ωt)
ω (ωt)
−ω 2 (ωt)

(2ωt)
−2ω (2ωt)
−4ω 2 (2ωt)

(2ωt)
2ω (2ωt)
−4ω 2 (2ωt)

...
...
...

(nωt)
−nω (nωt)
−n2 ω (nωt)

−ω Γ (ωt)

2Γ ω Γ (2ωt)

−2Γ ω Γ (2ωt)

...

nΓ ω Γ (nωt)

(nωt)
nω (nωt)
−n2 ω (nωt)
..
.
Γ
Γ
−n ω (nωt)

⎞
⎟
⎟
⎟
⎟
⎟
⎟
⎠

Notice that   cos,   sin and Γ  n − 1. Check Figure 1 to see a schema of the estimation.
Before presenting some possible applications of the spectral observer it is important to highlight an
important point. Notice that matrix A of the spectral observer depends on the fundamental frequency
ω. This means that this variable must be known. In case we want to approximate a periodic signal
with a known fundamental frequency, we just need to use it in matrix A. In case we want to ﬁt a
periodic signal with unknown fundamental frequency or a non-periodic signal, we must assume, as in
the Fourier Transform deduction from the Fourier series, that the period of the signal tends to inﬁnity,
which means that the fundamental frequency tends to zero. As a consequence of this assumption,
ω should be chosen sufﬁciently small or according to the desired precision in the recovery of the
frequency components. In other words ω is the frequency step that determines the resolution of
the discretized frequency domain, such that we have to choose ω thinking how close we want the
frequency components.

204

Math. Comput. Appl. 2018, 2, 23

( ): Signal

Estimated signal
yˆ (t ) Qˆ1 (t )

ck

:(t )Qˆ (t )

cˆk

T
[aˆ1 bˆ1 ... aˆn bˆn ]

State Observer

Figure 1. Schema of the reconstruction of a signal by using the spectral observer.

3. Application Examples
This section presents ﬁve examples of possible applications of the spectral observer, which were
conceived such that the reader can be able to reproduce them.
3.1. Example 1: A Simple Example
Let be the signal s(t) = 4 cos (t) + sin (t) + 2 cos (2t) + 5 sin (2t). It is obvious that the series order
to reproduce the signal is n = 2, then the order of system (7) for the conception of the observer should
be N = 4. Figure 2 shows the estimation of the coefﬁcients that was performed by the observer with a
gain λ = 8, which actually was initialized with ν̂(0) = 0. The step time to perform the estimation in
Simulink was Δt = 0.005 [s] and the used solver was ODE3.
7

a1
b1
a2
b2

6
5
4
3
2
1
0
−1
−2
0

2

4

6

8

10

12

14

16

18

20

[s]

Figure 2. Example 1. Estimated coefﬁcients.

3.2. Example 2: Reconstruction of Basic Signals
This example aims to show the estimation of the coefﬁcients for basic signals such as square and
sawtooth waves. The ﬁrst signal to be estimated is a square wave with angular frequency ω = 1
[rad/s]. The observer was tuned with λ = 15. The order of the series was set n = 2, i.e., N = 4.
The frequency step was set ω = 5 [rad/s]. The step time to perform the estimation in Simulink was set
Δt = 0.01 [s] and the used solver was ODE3. Figure 3 shows the signal reconstruction performed by
the spectral observer and the estimated coefﬁcients. Firstly, notice that the coefﬁcients do not converge
towards a constant value; the reason for this is the number of coefﬁcients used to approximate the
signal, which is not enough to represent each harmonic that composes it. Even though the coefﬁcients
are not constant, the signal is estimated. Notice too that all the coefﬁcients change abruptly at each
discontinuity. This feature can be used for edge detection as will be seen in the next example.

205

Math. Comput. Appl. 2018, 2, 23

D


y(t)
ŷ(t)






í
í 
































E





â1
b̂1
â2
b̂2

í
í
í


































Figure 3. Example 2. (a) Square wave reconstruction and (b) Estimated coefﬁcients.

Both the observer and conditions that were used to reconstruct the square wave were used to
reconstruct the sawtooth signal shown in Figure 4. Notice that the convergence time is less than one
second and the coefﬁcients become greater at the discontinuities.

(a)
2

s(t)
ŷ(t)

1
0
−1
−2
0

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

(b)
40
30
20
10
0
−10
−20
−30
−40
0

â1

1

2

3

4

5

6

7

8

9

â2

b̂1

10

11

12

13

b̂2

14

15

[s]
Figure 4. Example 2. (a) Triangular wave reconstruction and (b) Estimated coefﬁcients.

To end this example, we made several simulations to show how the parameter λ determines the
convergence period of the estimation. Figure 5 shows the estimation of the square signal with different
values of λ. Notice that the bigger its value, the faster is the convergence.

206

Math. Comput. Appl. 2018, 2, 23

2
1.5
1
0.5
0
-0.5
-1
-1.5
-2

0

2

4

6

8

10

12

[s]
Figure 5. Variations of parameter λ.

3.3. Example 3: Edge Detection by Using the Fourier Coefﬁcients
Edge detection and the detection of discontinuities are important in many ﬁelds. In image
processing, for example, one often needs to determine the boundaries of the items of which a picture is
composed, [12] or in applications that utilize time-domain reﬂectometry (TDR), which is a measurement
technique used to determine the characteristics of transmission lines by observing reﬂected waveforms.
TDR analysis begins with the propagation of a step or impulse of energy into a system and the
subsequent observation of the energy reﬂected by the system. By analyzing the magnitude, duration
and shape of the reﬂected waveform, the nature of the transmission system can be determined. TDR is
a common method used to localize faults in transmission lines—such a leaks in pipelines or faults with
small impedance in wires—because faults in transmission lines cause discontinuities in the reﬂected
waveforms. For this reason, methodologies to detect discontinuities are required in order to localize
the nature and position of the faults.
In order to shows how the spectral observer (13) can be used to detect discontinuities in a function,
we present the following example: Let us consider s(t) = sign(sin (0.5t)) − 0.05sign(sin (2t)), which
is plot in Figure 6a. The aim of this test is to detect the discontinuities in the principal signal with
period T = 2 [s]. To identify the discontinuities, the coefﬁcients provided by the spectral observer are
used to calculate the following indicator function:
rk = ln



â2k + b̂k2

(15)

The observer to perform the estimation was tuned with λ = 15. The order of the series was set
n = 2, i.e., N = 4. The frequency step was set ω = 1 [rad/s]. The step time to perform the estimation
in Simulink was set Δt = 0.01 [s] and the used solver was ODE3.

207

Math. Comput. Appl. 2018, 2, 23

(a)
2

s(t)
ŷ(t)

1
0
−1
−2
0

1

2

3

4

5

6

7

8

9

10

11

12

13

14

15

(b)
10
5
0

r1 = ln

−5
−10
0

1

2

3



â21 + b̂21

4

5

6

7

r2 = ln
8

9

10



â22 + b̂22
11

12

13

14

15

[s]
Figure 6. Example 3. (a) Signal reconstruction and (b) Estimated coefﬁcients.

Figure 6a shows s(t) and its reconstruction ŷ(t). Figure 6b shows the index r1 (t) and r2 (t) that
becomes greater at the discontinuities indicating where they are.
3.4. Example 4: Fitting Complex Signal: The Bitcoin Price
Bitcoin is the longest running and best known cryptocurrency in the world. It was released as
open source in 2009 by the anonymous Satoshi Nakamoto. Bitcoin serves as a decentralized medium of
digital exchange, with transactions verified and recorded in a public distributed ledger (the blockchain)
without the need for a trusted record keeping authority or central intermediary. Hereafter, we will
use the proposed spectral observer for fitting the historical Bitcoin market close data every 1000 [min].
The records were downloaded from the website: https://www.kaggle.com/neelneelpurk/bitcoin/data.
The observer to perform the estimation was tuned with λ = 1. The order of the series was set
n = 20, i.e., N = 40. The frequency step was set ω = 10 [rad/s]. The step time to perform the
estimation in Simulink was set Δt = 0.01 [s] and the used solver was ODE8.
In Figure 7, the Bitcoin ﬁtting performed by the spectral observer is shown. Figure 8 shows
the estimated coefﬁcients which are not constant and look as if they were enveloped by exponential
functions. In order to have a model that represents the behavior of the Bitcoin in the speciﬁed interval,
we can ﬁt each coefﬁcient by means of polynomials after calculating the natural logarithm of each one.
In Figure 9, ln (| a1 |) is plotted versus a cubic polynomial calculated to interpolate it.
ln (| a1 |) = 1.2 × 10−9 t3 + 1.5 × 10−6 t2 − 0.0021t − 1.4,

(16)

We can perform the same procedure for each coefﬁcient to obtain a series with the following form:




3
2
3
2
ŷ(t) = e|(αc1 t + β c1 t +γc1 t+δc1 )| cos (ωt) + e|(αs1 t + β s1 t +γs1 t+δs1 )| sin (ωt)




3
2
3
2
+ e|(αc2 t + β c2 t +γc2 t+δc2 )| cos (2ωt) + e|(αs2 t + β s2 t +γs2 t+δs2 )| sin (2ωt)




3
2
3
2
+... + e|(αcn t + β cn t +γcn t+δcn )| cos (nωt) + e|(αsn t + β sn t +γsn t+δsn )| sin (nωt)

(17)

where αck , β ck , γck , δck , αsk , β sk , γsk , δsk are the coefﬁcients of the polynomial that approximates the
natural logarithms of the coefﬁcients.

208

Math. Comput. Appl. 2018, 2, 23

4

2

x 10

1.8

Bitcoin
Bitcoin estimation

1.6
1.4

USD

1.2
1
0.8
0.6
0.4
0.2
0
0

200

400

600

800

1000

1200

1400

1577

1400

1577

samples
Figure 7. Example 4. Bitcoin ﬁtting.
500

300

100

−100

−300

−500
0

200

400

600

800

1000

1200

samples
Figure 8. Example 4. Estimated coefﬁcients.
10

5

0

−5

−10

−15

−20
0

ln (|â1 |)
Interpolation
200

400

600

800

1000

1200

1400

1600

samples

Figure 9. Example 4. log | a1 | vs. interpolation.

3.5. Example 5: Estimation of the Input Force on a Dufﬁng Oscillator
One of the advantages of the proposed spectral observer is its structure, which is a chain of
integrators expressed in state-space representation. Such a structure permits to couple the observer

209

Math. Comput. Appl. 2018, 2, 23

to dynamic models, also expressed in state variables, that represent physical systems for control or
estimation purposes. With this in mind, we present an example to show how the spectral observer can
be coupled to the model of a given system, even with nonlinear structure such as the Dufﬁng oscillator,
in order to estimate an exogenous input affecting its behavior.
The Dufﬁng oscillator is expressed by the following equation:
ẍ (t) + δ ẋ (t) + αx (t) + βx3 (t) = u(t)

(18)

where x (t) is the displacement, which is assumed as available in this example, ẋ (t) is the velocity and
ẍ (t) is the acceleration. In addition, δ, α and β are parameters, which in this example are assumed
to be known. Finally, u(t) is an external force, which is unknown and can be estimated by using our
proposed observer. To achieve this goal, the following steps need to be executed.
Step 1. Equation (18) must be set in state-space representation. To execute this step, we deﬁne
x1 (t) = x (t) and x2 (t) = ẋ (t) as the state variables, such that we obtain the following equation system:
ẋ1 (t) = x2 (t),
ẋ2 (t) = −δx2 (t) − αx (t) − βx3 (t) + u(t),

(19)

y ( t ) = x1 ( t ).
If the Liénard transform [13] is applied to system (18) in order to set it in a more appropriate form
for estimation purposes [14], it becomes
ẋ1 (t) = x2 (t) − δx1 (t),
ẋ2 (t) = −αx1 (t) − βx13 (t) + u(t),

(20)

Step 2. Since u(t) is unknown and needs to be estimated, we propose its estimation by using a
spectral observer with n = 1. Therefore, we coupled in cascade equation system (18) with equation
system (4) as follows:
ẋ1 (t) = x2 (t) − δx1 (t),
ẋ2 (t) = −αx1 (t) − βx13 (t) + ν1 (t),

(21)

ν̇1 (t) = ν2 (t),
ν̇2 (t) = −ω 2 ν1 (t),
y ( t ) = x1 ( t ),
where ν1 (t) = u(t), i.e., it is the force to be estimated.
System (21) can be set in the following form:
⎛

ẋ1 (t)
⎜ ẋ (t)
⎜ 2
⎜
⎝ ν̇1 (t)
ν̇2 (t)
01
/
ξ̇ (t)

⎞

⎛
0
⎟ ⎜ 0
⎟ ⎜
⎟=⎜
⎠ ⎝ 0
0
2 /

1
0
0
0

0
1
0
−ω2
01

0
0
1
0

⎞⎛

x1 ( t )
⎟ ⎜ x (t)
⎟⎜ 2
⎟⎜
⎠ ⎝ ν1 (t)
ν2 (t)
2/
01
ξ (t)

A

y(t) = [1 0 0 0]ξ (t) = Cξ (t) = x1 (t),

⎞

⎛
−δy(t)
⎟ ⎜ −αy(t) − βy3 (t)
⎟ ⎜
⎟+⎜
⎠ ⎝
0
0
2 /
01
ϕ(ξ (t))

⎞
⎟
⎟
⎟,
⎠

(22)

2
(23)

which according to [15] is uniformly observable. Therefore, a state observer expressed as
ξ̇ˆ(t) = Aξ (ˆt) + ϕ(ξ (ˆt)) + K ( x1 (t) − ξ̂ 1 (t)) can be designed for system (22), where K can be calculated
by means of Equation (14).
For the simulation, the paramaters of the Dufﬁng oscillator were set: α = 1, β = 1 and δ = 0.3;
and their initial conditions were set x (0) = [−1 − 5]. The force applied to the oscillator was
210

Math. Comput. Appl. 2018, 2, 23

u(t) = 2 cos (2t) + 5 sin (2t) + 4 sin (0.5t). The observer was tuned with λ = 10, ω = 1 [rad/s]
and their initial conditions were ﬁxed as ξ̂ (0) = [0 0 0 0]. Finally, the used solver was ODE 3 with
a step time Δt = 0.01 [s]. The results of the estimation are shown in Figure 10, which particularly
presents a comparison between the force and its estimation. Notice that the estimation converges to
the force in 1 [s].
40
20
0
-20
-40
-60
-80
-100
10 -2

10 -1

10 0

10 1

[s]

Figure 10. Example 5. Force estimation.

4. Comparative Analysis Vis-à-Vis the STFT
A spectral observer can be used to determine the frequency content of local sections of a signal as
it changes over time. The classic technique for performing this task is the Short Time Fourier Transform,
which is the Fourier Transform with a suitable chosen windowing function. Ensuing, we present an
example to compare the results of using the STFT with the results provided by the spectral observer.
c
For this purpose, we used the MATLAB
codes created by Hristo Zhivomirov to compute STFT and
its inverse [16]. The signal analyzed was
⎧
0 0 ≤ t < 100[s]
⎪
⎪
⎪
⎪
⎪
⎨ sin (10πt) 0 ≤ t < 300[s]
s(t) =
0 300 ≤ t < 400[s]
⎪
⎪
⎪ sin (4πt) 400 ≤ t < 600[s]
⎪
⎪
⎩
0 600 ≤ t < 700[s]

(24)

sampled at 1000 [Hz]. To compute the STFT by using the code of Zhivomirov, the following parameters
were set: τw = 28 [s] as the window length, h = τw /4 [s] as the hop size and n f f t = 210 as the number
of FFT points. The tuning of the spectral observer was done by setting n = 10, λ = 1, ω = π [rad/s]
and ν̂(0) = 0. The solver used for the numerical solution was ODE4 (Runge-Kutta) with a ﬁxed
step size Δt = 0.01 [s]. The spectrograms that were produced by the STFT and the spectral observer,
respectively, are presented in Figure 11. To construct the observer spectrogram, we computed de
magnitude of each harmonic by means of the following equation:

| Ak | =

%

a k + bk .

(25)

On the one hand, since n = 10, the resulting vector containing the magnitude of each harmonic
was A = [ A1 A2 A3 A4 A5 A6 A7 A8 A9 A10 ]. On the other hand, since the angular frequency step
was chosen ω = π [rad/s], the resulting frequency vector was f = [0.5 1 1.5 2 2.5 3 3.5 4 4.5 5] [Hz].
Then, the spectrogram resulted of plotting f versus A.
Notice that the spectrogram generated by using the spectral observer presents a better frequency
resolution with respect to the spectral observer. This fact can be better appreciated in Figure 12.

211

Math. Comput. Appl. 2018, 2, 23

However, this does not mean that the observer’s performance is superior, since it is well known that
the frequency resolution can be improved by widening the time window length of the STFT, even
if this widening implies a decreasing of the time resolution. In the case of the spectral observer, the
frequency resolution is adjusted by manipulating the parameter λ.

Figure 11. (a) STFT spectrogram (b) Spectral observer spectrogram.

Figure 12. (a) STFT spectrogram (b) Spectral observer spectrogram.

It is necessary to point out here that both the frequency resolution and the time resolution do not
only depend on the parameters τ and λ, also the parameters h y n f f t used in the STFT algorithm and
ω and n used in the spectral observer, play an important factor; nevertheless, the adjustment of these
parameters directly affects in the computational burden and the amount of data to be processed.
5. Results and Discussion
We have introduced an algorithm to reconstruct signals at the same time that their frequency
components are calculated: a new spectral observer. In order to show its applicability, we have
presented some examples, which in addition, have allowed us to glimpse some advantages and
disadvantages of its use. Firstly, we found the following beneﬁts: (1) The structure of the observer,
as a chain of integrators, is very adequate for control and parameter estimation purposes; (2) The
signal is progressively incorporated at each iteration; (3) The operations required for the observer
implementation are with real numbers, which simpliﬁes its programming in single-board computers;
(4) The gain of the observer can be easily computed by means of a simple numerical algorithm; (5) The
convergence of the observer is exponential, this means that the convergence period can be adjusted
by means of a unique parameter λ, which is a clear advantage with respect to other well-known
algorithms such as the proposed in [17], where the convergence period cannot be manipulated by a
unique parameter. However, there are some drawbacks that we have found for the proposed observer.

212

Math. Comput. Appl. 2018, 2, 23

(1) The computational cost can be high for a small frequency resolution; (2) The algorithm must be
complemented with a methodology to choose ω and λ in order to obtain the best estimation.
To conclude the discussion, it is necessary to emphasize that the spectral observer is an algorithm
that, like the STFT, can be used to perform a frequency-time analysis of a frequency varying signal
by computing the Fourier Transform (FT) during time intervals. However, there are some differences
to remark. (a) The STFT requires operations with complex numbers, the spectral observer does not;
(b) The spectral observer computes the FT and its inverse at the same time, which is a clear bonus,
because in case of using a recursive STFT we only get the FT, if we want to recover the reconstructed
signal, we must compute the Inverse Short Fourier Transform.
6. Conclusions
In this paper, we presented the design of a novel spectral observer, which can be used to
approximate periodical and non-periodical signals via state estimation. To design the spectral observer,
we constructed a synthetic system in state space representation from the Fourier series. We presented
some application examples to reconstruct periodical signals but also a well-know non-periodical one
such as the price of the Bitcoin from its genesis. Some important aspects were not discussed in this
article that require a deeper analysis, such as a comparison between the computational burden of the
spectral observer and that of the Fourier Transform or an analysis of the spectral observer vis-à-vis
perturbations and noise. These aspects must be treated in a continuation of this research work.
Author Contributions:
Lizeth Torres conceived the spectral observer presented in this article.
Javier Jiménez-Cabas and José Francisco Gómez-Aguilar conceived, designed and performed the simulation tests.
Pablo Pérez-Alcazar advised the rest of the authors. All the authors wrote the paper.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

Appendix A. MATLAB CODES
Appendix A.1. Symbolic Computation of Matrix Aω
syms w t
n=10; %Order of the Fourier Series
for k=1:2*n;
Aw(k,k)=((-1)^((mod(k-1,4)-mod(k-1,2))/2))*w^(k-1);
end
Appendix A.2. Symbolic Computation of Matrix Aω
syms w t
n=10; %Order of the Fourier Series
for k=1:n
for m=1:n
Ak(2*m-1,2*k-1)=k^(2*m-2);
Ak(2*m,2*k)=k^(2*m-1);
end
end
Appendix A.3. Symbolic Computation of Matrix Ω
syms w t
n=10; %Order of the Fourier Series
for k=1:n
for m=2:2*n
O(1,(2*k)-1)=cos(k*w*t);
O(1,(2*k))=sin(k*w*t);
213

Math. Comput. Appl. 2018, 2, 23

O(m,(2*k)-1)=diff(O(m-1,2*k-1),’t’);
O(m,(2*k))=diff(O(m-1,2*k),’t’);
end
end
References
1.
2.
3.

4.
5.
6.

7.
8.
9.
10.
11.
12.
13.
14.
15.
16.

17.

Hostetter, G.H. Recursive discrete Fourier transformation. IEEE Trans. Acoust. Speech Signal Proc. 1980,
28, 184–190. [CrossRef]
Bitmead, R.R.; Tsoi, A.C.; Parker, P.J. A Kalman ﬁltering approach to short-time Fourier analysis. IEEE Trans.
Acoust. Speech Signal Proc. 1986, 34, 1493–1501. [CrossRef]
Orosz, G.; Sujbert, L.; Peceli, G. Spectral observer with reduced information demand. In Proceedings of the
2008 IEEE Instrumentation and Measurement Technology Conference, Victoria, BC, Canada, 12–15 May 2008;
pp. 2155–2160.
Na, J.; Yang, J.; Wu, X.; Guo, Y. Robust adaptive parameter estimation of sinusoidal signals. Automatica 2015,
53, 376–384. [CrossRef]
Bitmead, R.R. On recursive discrete Fourier transformation. IEEE Trans. Acoust. Speech Signal Proc. 1982,
30, 319–322. [CrossRef]
Torres, L.; Gómez-Aguilar, J.; Jiménez, J.; Mendoza, E.; López-Estrada, F.; Escobar-Jiménez, R. Parameter
identiﬁcation of periodical signals: Application to measurement and analysis of ocean wave forces.
Digit. Signal Proc. 2017, 69, 59–59. [CrossRef]
Dash, P.K.; Khincha, H. New algorithms for computer relaying for power transmission lines. Electr. Mach.
Power Syst. 1988, 14, 163–178. [CrossRef]
Houmb, O.; Overvik, T. Some applications of maximum entropy spectral estimation to ocean waves and
linear systems response in waves. Appl. Ocean Res. 1981, 3, 154–162. [CrossRef]
Blödt, M.; Chabert, M.; Regnier, J.; Faucher, J. Mechanical load fault detection in induction motors by stator
current time-frequency analysis. IEEE Trans. Ind. Appl. 2006, 42, 1454–1463. [CrossRef]
Benbouzid, M.E.H.; Vieira, M.; Theys, C. Induction motors’ faults detection and localization using stator
current advanced signal processing techniques. IEEE Trans. Power Electron. 1999, 14, 14–22. [CrossRef]
Busawon, K.; Farza, M.; Hammouri, H. A simple observer for a class of nonlinear systems. Appl. Math. Lett.
1998, 11, 27–31. [CrossRef]
Engelberg, S. Edge detection using Fourier coefﬁcients. Am. Math. Mon. 2008, 115, 499–513. [CrossRef]
Liénard, A. Étude des oscillations entretenues. Revue Générale de l’Électricité 1928, 23, 901–912.
Torres, L.; Verde, C.; Vázquez-Hernández, O. Parameter identiﬁcation of marine risers using Kalman-like
observers. Ocean Eng. 2015, 93, 84–97. [CrossRef]
Hammouri, H. Uniform observability and observer synthesis. In Nonlinear Observers and Applications;
Besançon, G., Ed.; Springer: Berlin, Germany, 2007; pp. 35–70.
Zhivomirov, H. Short-Time Fourier Transformation (STFT) with Matlab Implementation. Available online:
https://www.mathworks.com/matlabcentral/ﬁleexchange/45197-short-time-fourier-transformation-stft--with-matlab-implementation (accessed on 27 April 2018).
Kušljević, M.D.; Tomić, J.J. Multiple-resonator-based power system Taylor-Fourier harmonic analysis.
IEEE Trans. Instrum. Meas. 2015, 64, 554–563. [CrossRef]
c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

214

Mathematical
and Computational
Applications

Article

Differential Evolution Algorithm for Multilevel
Assignment Problem: A Case Study in
Chicken Transportation
Sasitorn Kaewman 1, *, Tassin Srivarapongse 2 , Chalermchat Theeraviriya 3 and
Ganokgarn Jirasirilerd 4
1
2
3
4

*

Faculty of Informatics, Mahasarakham University, Maha Sarakham 44150, Thailand
Department of Economics, Rajamangala University of Technology Thanyaburi, Patumthani 12110, Thailand;
tassin66@hotmail.com
Faculty of Engineering, Nakhon Phanom University, Nakhon Phanom 48000, Thailand;
chalermchat.t@npu.ac.th
Faculty of Liberal Arts and Sciences, Sisaket Rajabhat University, Sisaket 33000, Thailand;
ganokgarn.kung@gmail.com
Correspondence: sasitorn.k@msu.ac.th; Tel.: +66-89-861-6143

Received: 12 September 2018; Accepted: 30 September 2018; Published: 2 October 2018

Abstract: This study aims to solve the real-world multistage assignment problem. The proposed
problem is composed of two stages of assignment: (1) different types of trucks are assigned to chicken
farms to transport young chickens to egg farms, and (2) chicken farms are assigned to egg farms.
Assigning different trucks to the egg farms and different egg farms to the chicken farms generates
different costs and consumes different resources. The distance and the idle space in the truck have to
be minimized, while constraints such as the minimum number of chickens needed for all egg farms
and the longest time that chickens can be in the truck remain. This makes the problem a special case
of the multistage assignment (S-MSA) problem. A mathematical model representing the problem
was developed and solved to optimality using Lingo v.11 optimization software. Lingo v.11 can solve
to optimality only small- and medium-sized test instances. To solve large-sized test instances, the
differential evolution (DE) algorithm was designed. An excellent decoding method was developed
to increase the search performance of DE. The proposed algorithm was tested with three randomly
generated datasets (small, medium, and large test instances) and one real case study. Each dataset
is composed of 12 problems, therefore we tested with 37 instances, including the case study. The
results show that for small- and medium-sized test instances, DE has 0.03% and 0.05% higher cost
than Lingo v.11. For large test instances, DE has 3.52% lower cost than Lingo v.11. Lingo v.11 uses an
average computation time of 5.8, 103, and 4320 s for small, medium and large test instances, while DE
uses 0.86, 1.68, and 8.79 s, which is, at most, 491 times less than Lingo v.11. Therefore, the proposed
heuristics are an effective algorithm that can ﬁnd a good solution while using less computation time.
Keywords: assignment problem; chicken transportation; differential evolution algorithm;
mathematical model

1. Introduction
Thailand has long been known as a farming country due to the inﬂuence of Southeast Asian
monsoons, which make the landscape, resources, environment, and climate conducive to agriculture.
Most of the population works in agriculture or is involved in it in some manner. Although there have
been efforts to develop Thailand into an industrialized country, it still largely depends on agriculture.
The evolution and development of Thai agriculture has changed over time, reﬂecting the worldwide
ﬂow of changes. Hens are considered to be economic animals, as farmers can generate revenue from
Math. Comput. Appl. 2018, 23, 55; doi:10.3390/mca23040055 215

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 55

them throughout the year. In Thailand, there is a nationwide demand for eggs, which are popular
among consumers. Breeding hens, therefore, are important to the economic balance and well-being
of the Thai people. However, the problem that most farmers face is that they have high operating
costs and generate little proﬁt, thus they struggle to afford the costs incurred for labor, raw materials,
transportation, etc.
In recent years, the logistics cost in Thailand is 14% of gross domestic product (GDP), which is
valued at more than 1912.9 million baht. Many Thai businesses face the problem of high logistics
cost, especially in agricultural businesses. In this study, we focus on reducing the cost of chicken
transportation, which is one of the most important business groups of the Thai agricultural industry.
Chicken transportation starts from delivering young chickens to egg farms in many different areas,
which affects the resource usage of trucks (road conditions). It is not possible to travel on some Thai
roads with some types of trucks, and even with some types of trucks the fuel consumption is different
from the average speed limit. A suitable assignment approach needs to be decided on so that the total
cost is minimized. Moreover, suitable trucks should be assigned to suitable chicken farms. Suitable
farms and trucks means the truck does not have much idle space during delivery. Too much idle
space means the use of bigger trucks, and bigger trucks always consume more fuel than smaller trucks
because the weight of the truck affects the fuel consumption rate.
In transporting chickens from farmers to buyer farms, a number of factors must be taken into
account—such as the mode of transportation, time to transport, temperature, etc.—as well as making
sure that chickens from different farms are not mixed during transport. Therefore, it essential to
ﬁnd an appropriate vehicle that meets the needs of chicken farmers to avoid mixing chickens during
transport to customers. This would help to minimize assignment or production costs and would be
beneﬁcial to the chicken farms, resulting in lower production costs and higher quality chickens for
the egg farms. Thus, the overall condition of the chicken industry would be improved. Furthermore,
chicken farms and egg farms can use the money saved to accomplish other farm activities, such as
feeding, vaccinating, or researching—that is, to further develop their farms.
This study investigated a solution to the problem of chicken transport, which is a problem
of multistate assignment. This was a case study regarding appropriate vehicle assignment for the
transportation of chickens directly from chicken farms to egg farms by using the lowest cost of
assignment. The differential evolution was developed to solve the problem because it is effective and
uses short computation time. This paper has four contributions:
(1)

(2)

(3)
(4)

The special case of the multistage assignment problem is proposed. The attribute that makes it
a special case is that the experience of the workers and the type of shipping instrument will be
considered in the assignment of trucks to farms. These affect the time to ship chickens in trucks
and will affect the total time that chickens can be in the trucks during transport.
The idle space in the truck is considered as the objective function and it is converted into lost
opportunity due to higher fuel consumption of bigger trucks, therefore using unsuitable trucks
will generate more cost.
The new decoding method of the DE algorithm is presented so that the proposed problem can
be solved.
The mathematical model of the proposed problem is presented.

The paper is organized as follows. Section 2 presents the related research. Section 3 presents the
problem statement and mathematical model. Section 4 shows the proposed heuristics (differential
evolution algorithm). The computational result and a conclusion are presented in Sections 5
and 6, respectively.
2. Literature Review
Assignment problem (AP): The AP evolved from the transportation problem, which is a form
of proper task assignment to an employee or machine considering cost effectiveness or proﬁt
216

Math. Comput. Appl. 2018, 23, 55

maximization in some cases. The assignment problem is a type of combinatorial problem. It has
been addressed as a transportation problem, where transportation affects other jobs. The aim is
to minimize the total cost of transportation. Therefore, this problem could be considered a task
assignment problem [1]. The key condition of this problem is that the assignments must be on a
one-on-one basis; that is, once a task has been assigned to an employee, it cannot be assigned to
another employee as well.
Previously, task assignment problems were resolved by bipartite matching. This matching method
was proposed by Frobenius and Konig [2,3]. Later, Dantzig [4] presented the assignment problem in
the form of a linear programming problem and used the simplex method to solve it. However, there
might be limitations on the size of the problem, the number of variables, and the number of constraint
equations. This means that if the limitations were too great or the computer was not sufﬁciently
capable, the simplex method would not work. Kuhn [5] subsequently presented a solution to assigning
tasks through the Hungarian method, which is a quick way to solve problems compared to simplex.
Generalized assignment problem (GAP): GAP is more ﬂexible than AP. Unlike AP, where
assignments are made on a one-on-one basis, with GAP, one task can be assigned to multiple employees
or to the same employee. However, it must not exceed the capacity of the employee. Thus, GAP is
more comprehensive and more closely resembles the actual situation than AP. GAP was ﬁrst proposed
by Ross and Soland [6] and was found to be an NP-hard problem [7]. This is often corrected by the
exact method with small problems. The problem of 200 tasks and 20 employees was considered to be
the biggest problem that could be solved by the exact method [8]. Therefore, the heuristics method has
been used to solve GAP.
The proposed problem is the multistage GAP. The GAP has no restrictions that the case study
has, such as (1) the longest traveling time; (2) the effect of the shipping instrument and the experience
of the workers, which affects the operating cost; (3) the idle space in the truck is considered as the
objective function; (4) at least half of the demand of the egg farm has to be considered; and (5) the
multistage GAP was never found in the literature.
We will move on to review the methodology to solve the special multistage assignment (S-MSA)
problem. Many worldwide methods have been used to solve GAP. Both exact methods—such as
branch and bound, branch and price, etc.—and heuristics methods have been used to solve the
problem. Metaheuristics is one of the most commonly used methods to solve GAP. Metaheuristics is
an approximation method where it is not guaranteed that the solution optioned from the method is
the optimal solution. The advantage is that it uses much less computation time than the exact method,
which makes it possible to solve real-world problems that cannot be solved by exact methods.
The well-known metaheuristics are the krill herd (KH) algorithm [9–11], the cuckoo
algorithm [12,13], the monarch butterﬂy optimization (MBO) [14,15], the hybridizing harmony
search [16], the Lévy-ﬂight krill herd algorithm [17], the bat algorithm [18], elephant herding
optimization (EHO) [19], and the earthworm optimization algorithm (EWA) [20].
Enhancing the quality of the heuristics method can be achieved in many ways, such as adjusting
suitable parameters for the proposed method, increasing the search area by introducing ways to move
from local optimal, and applying local search to increase the intensive search of the method [21–25]. The
most recent successful method was proposed by Wang [26]. The method is called the krill herd (KH)
algorithm. Many papers have proposed improving the solution quality of the KH, such as adding new
attributes to the algorithm [22], using a hybrid KH with other methods [23–26], exchanging information
between top krill during the motion calculation process [27], using the best parameters [28], and adding
local searches to improve search ability [29]. Aside from being applicable to many types of problems,
KH is valid for function optimization [30] as well. An excellent review of the KH method has been
proposed by Wang et al. [31].
Metaheuristics has been applied to many combinatorial optimization and real-world problems,
such as the parallel hurricane optimization algorithm [32], ﬁreﬂy-inspired krill herd (FKH) [33],
the moth search (MS) algorithm [34], monarch butterﬂy optimization [35–37], across neighborhood

217

Math. Comput. Appl. 2018, 23, 55

search (ANS) [38], chaotic particle-swarm krill herd (CPKH) [39], chaotic cuckoo search (CCS) [40],
self-adaptive probabilistic neural network [41], and the differential evolution (DE) algorithm [42].
Differential evolution is a frequently used heuristics method. It is a way to apply the principles
of evolution, and the steps are as follows: (1) initial solution, (2) mutation, (3) recombination, and
(4) selection. Differential evolution was ﬁrst used by Storn and Price [43] and has since been used
since to solve many problems, such as production scheduling [44] and manufacturing problems [45].
Liao et al. [46] proposed two hybrid DEs to obtain truck sequences for cross-docking operations. Later,
Liao et al. [47] proposed six metaheuristic algorithms for sequencing inbound trucks for multi-door
cross-docking operations under a ﬁxed schedule of outbound truck departure. Hou [48] proposed
discrete DE (DDE) by modifying a mutation operator for the vehicle routing problem (VRP) with
simultaneous pickups and deliveries (VRPPD). Recently, Dechampai et al. [49] proposed DE to solve
the capacitated VRP with the ﬂexibility of mixing pickup and delivery services and maximum duration
of a route in the poultry industry. Sethanan and Pitakaso [50] improved DE by adding two more
steps, reincarnation and survival process, to improve its intensiﬁcation search [51]. It has been proven
that using different pairs of mutation and recombination processes gives different solution qualities,
such as in Pitakaso and Sethanan [50] and Boon et al. [52]. Sethanan and Pitakaso [50,51] suggested
that improving the DE algorithm, such as by adding more steps to the original DE, inserting local
search, and adding more attributes, can improve the solution quality, but the design of the decoding
method must make sure that the most important rules in solution quality are obtained. In this paper,
the excellent design of a decoding method from real numbers obtained from the DE mechanism to ﬁnd
the solution of the proposed problem is reported. The decoding method not only makes it possible to
obtain the solution, but also local search has been added to the decoding method routine. Therefore,
excellent results can be gained from the proposed method.
3. Problem Statement and Mathematical Modeling
This section explains the problem statement and the mathematical model to represent the problem
so that the reader has more understanding of the proposed problem.
3.1. Problem Statement
Figures 1 and 2 represent the unsolved problem and the solved problem, respectively. Chicken
farms have different amounts of young chickens. The chicken farms transport the chickens to egg farms,
which grow the chickens and collect the eggs to sell to end customers. The egg farms have different
capacities and demands for young chickens from chicken farms. The transportation of chickens needs
to use trucks. The chicken farms have workers and loading/unloading instruments such as forklifts,
carts, etc. This can make for different delivery times for the chicken farm in different types of trucks.
When the truck arrives at the egg farm, the egg farm also has instruments for unloading chickens
from the truck, which causes different shipping times. The objective function is not only to minimize
the total distance of assignment under many constraints, which will be explained later, but also to
minimize the idle space of the truck when transporting chickens. The idle space is assumed to be a lost
opportunity to use the suitable truck for the suitable route. Moreover, it is possible that some trucks
are not used. Therefore, the problem comprises the following components:
(1)

(2)

Assign the right truck to the right egg farm so that free space is minimized. Different farms have
different levels of experience with different trucks, which can affect the loading of chickens onto
the truck, which can affect the total time that the chickens are in transport.
Assign the right egg farm to the right chicken farm to minimize so travel distance. The workers
at the chicken farm and the egg farm need to be coordinated so that shipping chickens out on the
trucks uses as little time as possible, therefore the quality of the chickens remains unchanged.

218

Math. Comput. Appl. 2018, 23, 55

&KLFNHQ)DUP

'LIIHUHQWVL]HRIWUXFN

(JJIDUP

Figure 1. Unsolved problem.

8QXVHGWUXFN

&KLFNHQ)DUP

(JJIDUP

'LIIHUHQWVL]HRIWUXFN

Figure 2. Solved problem.

The problem is a special case of the multistage assignment problem (S-MAP). The objective
function is to minimize total distance and minimize free space in the truck. This objective needs to be
optimized while keeping the following limitations or constraints:
(1)

(2)
(3)
(4)
(5)

(6)
(7)

Transportation of chickens from chicken farms to egg farms is done only by direct transport. There
is no chicken picking from other farms and no eggs are sent to other farms. This is because egg
farms need to control the quality and breed of the chickens and prevent communicable diseases.
A chicken farm can send chickens to an egg farm more than once.
A chicken farm can sell all of its chickens.
Egg farms may receive chickens from more than one farm, but they may not exceed the capacity
of such farms.
Egg farms will receive chickens for at least 50% of the demand. However, some egg farms may
not be able to do this. Transportation time should not exceed 8 h, which includes the time spent
loading the chickens onto the vehicle, transfer, and removal.
The vehicles used for transport are sufﬁcient for the needs.
Chicken farms may use more than one type of vehicle and each type can be used for more than
one round.

There are 40 chicken farms in the case study, and the capacity of a chicken farm is from 5000 to
20,000 chickens per planning period. There are four types of truck available, which have a capacity of
2000 to 12,000 chickens per round of travel. There are 60 egg farms in the system, for which chicken
farms need to deliver at least 50% of the demand.
219

Math. Comput. Appl. 2018, 23, 55

3.2. Mathematical Modelling
The S_MAP can be modeled as follows:
Indices
i = 1, 2, 3, 4 (4 truck types)
j = 1, 2, 3, . . . , J (J number of chicken farms; 40 farms)
k = 1, 2, 3, 4 (4 rounds of transportation)
l = 1, 2, 3, . . . , L (L number of egg farms; 60 farms)

Decision Variables
xijkl
xijkl = 1
xijkl = 0
qijkl

Decision variable
Truck (i) is assigned to transport chickens from chicken farm (j) on the round of transporting (k)
to egg farm (l)
Truck (i) is assigned to transport chickens from chicken farm (j) on the round of transporting (k)
to egg farm (l)
Number of chickens transported by truck (i) from chicken farm (j) on round (k) to egg farm (l)

Parameters
cijl
ti
ocijl
dl
sj
tupij
zupij
tdnil
zdnil
ttrijkl
tdjl

timejkl

ttrucki

Cost of truck type assignment (i) to transport chickens from farm (j) to egg farm (l)
Capacity of truck (i) to transport chickens (unit: chicken)
Cost of lost opportunity due to truck not completely loaded (i) from chicken farm (j) to egg farm
(l) (unit: baht per chicken)
Demand for chickens by egg farm (l)
Capacity of chicken breeding of farm (j)
Time spent loading chickens onto truck (i) at chicken farm (j)
Performance of employees at chicken farm (j) to carry chickens into truck (i)
Time spent removing chickens from truck (i) at egg farm (l)
Performance of employees at egg farm (l) to remove chickens from truck (i)
Time spent traveling from the truck station to chicken farm (j) then to egg farm (l), and then
from egg farm (l) back to the truck station
Time spent for truck (i) to go from the station to chicken farm (j) to convey chickens on round (k)
to egg farm (l)
Time spent for an assignment
 round, not to exceed 8 h, consisting of the timeto load

 of each
chickens at chicken farm (i) tupijkl , time to transport from farm (i) to egg farm (l) ttrijkl ,


and time to remove chickens from the truck at egg farm (l) tdnijkl , or the overall time to use
the truck
Usage time of truck type

Remark 1. The time for ttrijkl and tdijkl does not include the usage time to load and remove chickens from
the truck.
Objective Function



I J K L 
I J K L 
min∑ ∑ ∑ ∑ cijl × xijkl + ∑ ∑ ∑ ∑[ xijkl × ti − qijkl × ocijl ]
i

/

j

k

l

01

2

i

/

j

k

l

01

(1)

2

Part2

Part1

xijkl ∈ {0, 1}

f or ∀ijkl

(2)

qijkl ∈ {0, 1}

f or ∀ijkl

(3)

220

Math. Comput. Appl. 2018, 23, 55

L

∑ xijkl ≤ 1

f or ∀ijk

(4)

l

I

J

K

i

j

k

I

J

K

i

j

k

I

K

L

i

k

l

∑ ∑ ∑ qijkl ≤ dl

f or ∀l

∑ ∑ ∑ qijkl ≥ 0.5 × dl
∑ ∑ ∑ qijkl = s j
qijkl ≤ M × xijkl
qijkl ≤ ti

(5)

f or ∀l

f or ∀ j

(7)

f or ∀ijkl

(8)

f or ∀ijkl

tupij = zupij × qijkl

(6)

(9)

f or ∀ijkl

(10)

tdnil = zdnil × qijkl

f or ∀ijkl

(11)

ttrijkl = td jl × xijkl

f or ∀ijkl

(12)

timeijkl = tupijkl + tdnijkl + ttrijkl
timeijkl ≤ 8
J

K

L

j

k

l

f or ∀ijkl

∑ ∑ ∑ timeijkl ≤ ttruck(i)
xijkl ≥ xij(k+1)l

f or ∀ijkl

f or ∀i

f or ∀ijkl

(13)
(14)
(15)
(16)

This mathematical model was created to solve multistage assignment problems. The objective
function aims to investigate how to assign the task in order to gain the lowest cost of the assignment,
for which distance is the key factor (part1 of Equation (1)). The cost of opportunity loss is due to the
truck not being completely loaded. This means that there is free space on the truck for each round of
transporting (part2 of Equation (1)).


The relevant limitations begin from the decision variables xijkl , which are the counting numbers


and equal to 0 or 1 only (Equation (2)). The number of chickens prepared for transport qijkl must be
equal in the positive integer only (Equation (3)). Egg farm (i) can receive chickens from farm (j) by
using truck (i) for transportation round (k) only one time (Equation (4)). Epidemics may be prevented
because chickens are transported from different places, and an egg farm (l) may not receive as many
chickens as it needs (Equation (5)). Each egg farm (i) will receive at least 50% of the chickens it needs
(Equation (6)). Each chicken farm (j) will be able to deliver all chickens to
 the eggfarm until there

are no more chickens at the farm (Equation (7)). If there is no assignment xijkl = 0 , the number to


transport is equivalent to 0 qijkl = 0 as well (Equation (8)).
The quantity to be transported (q) in each round shall not exceed the capacity of the truck
(Equation (9)). The time spent loading chickens onto the truck is represented by Equation (10). The
quantity of chickens to be transported (q), the performance of the workers in loading chickens (zup),
and the time taken to remove chickens from the truck are represented by Equation (11). The quantity
of chickens to be transported (q), the performance

of the workers in removing chickens from the truck

(zdn), and the time spent on transportation ttrijkl from the station to the chicken farm, and then from
the chicken farm to the egg farm, and ﬁnally getting back to the station, which does not include time for
loading and removing chickens, depends on distance and driving speed (Equation (12)). Equation (13)
is the overall time for an assignment. The time spent loading chickens (tup), time spent traveling

221

Math. Comput. Appl. 2018, 23, 55

(ttrans), and time spent removing chickens from the truck (tdn) must not exceed 8 h (Equation (14)). The
usage time of each type of truck may not exceed the working hours that have been set (Equation (15)).
Equation (16) ﬁxes a round of assignments starting at the ﬁrst round.
4. Proposed Algorithm
The proposed method that is used to solve the S-MSA is the differential evolution (DE) algorithm.
DE comprises four steps: (1) initialize the target vectors, (2) perform the mutation process, (3) perform
the recombination process, and (4) perform the selection process. The proposed method can be
explained as follows.
4.1. Initial Vector (Initial Population)
This step requires deﬁning the number of the population and the random number of the
population. The population must be at least four, because the DE process uses three vectors to
determine the direction of the searching. If the population is small, it will not spread to ﬁnd the answer.
When the initial population is determined, it will be entered into the encoding process as the next DE
method. The end product of this step is the ﬁrst target vector.
The initialization needs to generate the vector representing the problem solution. We call it
encoding. The encoding is the coding for three factors, such as the type of truck, chicken farm, and egg
farm. In this case study, there are ﬁve vectors and each vector has four positions. This process starts
by specifying a random number for each position in each vector, for which the random numbers are
equivalent between 0 and 1, as shown in Tables 1–3 respectively.
Table 1. Initial target vectors of truck types.
Vectors of Truck Types

Position
1
2
3
4

1

2

3

4

5

0.853
0.335
0.757
0.967

0.956
0.397
0.391
0.293

0.886
0.639
0.519
0.063

0.521
0.863
0.098
0.595

0.545
0.471
0.443
0.824

Table 2. Initial target vectors of chicken farms.
Vectors of Chicken Farms

Position
1
2
3
4

1

2

3

4

5

0.234
0.257
0.512
0.164

0.713
0.082
0.979
0.780

0.396
0.696
0.186
0.873

0.417
0.829
0.475
0.522

0.806
0.091
0.502
0.671

Table 3. Initial target vectors of egg farms.
Vectors of Egg Farms

Position
1
2
3
4

1

2

3

4

5

0.544
0.004
0.564
0.499

0.766
0.045
0.436
0.250

0.067
0.313
0.051
0.263

0.171
0.300
0.498
0.178

0.634
0.042
0.485
0.396

From the random number of the position in each initial vector, the initial vectors of truck type,
chicken farm, and egg farm are sorted by random numbers. The lowest of the random numbers is set

222

Math. Comput. Appl. 2018, 23, 55

to be in the ﬁrst position. The higher random numbers will be set in the last row of each column, as
shown in Tables 4–6.
Table 4. Positions of initial vectors of truck types.
Vectors of Truck Types

Position
1
2
3
4

1

2

3

4

5

3
1
2
4

4
3
2
1

4
3
2
1

2
4
1
3

3
2
1
4

Table 5. Positions of initial vectors of chicken farms.
Vectors of Chicken Farms

Position
1
2
3
4

1

2

3

4

5

2
3
4
1

2
1
4
3

2
3
1
4

1
4
2
3

4
1
2
3

Table 6. Positions of initial vectors of egg farms.
Vectors of Egg Farms

Position
1
2
3
4

1

2

3

4

5

3
1
4
2

4
1
3
2

2
4
1
3

1
3
4
2

4
1
3
2

For this study, ﬁrst, vectors of truck type, chicken farm, and egg farm were assigned. The lowest
random number, or position no. 1, was selected as the ﬁrst order, as shown in Table 7.
Table 7. Sequence of position in vectors of truck type, chicken farm, and egg farm.
Position

Truck Type

Chicken Farm

Egg Farm

1
2
3
4

2
4
1
3

1
4
2
3

1
3
4
2

The vectors shown in Tables 1–4 need to be decoded to get the proposed problem’s solution. This
step is called decoding. Decoding is the sequential ordering in the assignment table, as shown in
Table 8, to encode. For the operation of decoding, all constraints must be accomplished at the same
time. For example, each type of truck cannot be overloaded and must not exceed the speciﬁed working
hours. The working hours start from the time spent loading chickens at chicken farms. Travel time
includes the time to travel from the station to the chicken farm and from the chicken farm to the egg
farm, including the time to get back to the station and the time to remove chickens from the truck at the
egg farm. The chicken farm can deliver all of the chickens without the rest of the chickens at the farm.
The ﬁrst assignment must be completed before another assignment can be given to the chicken farm.
The egg farm will receive at least 50% of the demand in the beginning, after which more chickens will
be added. The chicken farm in the ﬁrst sequence usually receives the amount of chickens it demands.
However, the farm in the latter sequence may not get the number of chickens it wants. All factors
223

Math. Comput. Appl. 2018, 23, 55

involved must be considered simultaneously. An important factor in task assignment is the quantity
assigned each time, which will be affected by the type of truck and the number of rounds, which
includes transportation costs. The amount of chickens to be transported ( AssignQ) is determined by
the number of chickens from one farm, including the demand from the egg farm to assign up to 50%
of its demand before providing the rest. The transported chickens are counted from the quantity of
chickens at the farm and the demands of the egg farm. If any quantity is less, it will be transported
using such a quantity. The assignment is shown in Equation (17)
)

QdA i f Qd ≤ Qs
Qs otherwise

AssignQ =

(17)

AssignQ means quantity to be transported, QdA means the initial chicken demands of the egg
farm equivalent to 50% of the entire demand, and Qs means productivity of the chicken farm.
Table 8. Results of the decoding method.
Truck

Time
1
2
3
4
5
6
7
8
9
10

Type

Empty

2
3
3
3
4
2
3
4
3
4

3000
0
1500
500
500
3000
500
1500
1500
0

Chicken Farm

Round
1
1
1
1
1
1
1
1
1
1

Egg Farm

Farm

Assignment

Remaining

Farm

Assignment

Remaining

2
3
3
3
1
1
1
4
4
4

5000
4000
2500
3500
1500
5000
3500
500
2500
2000

0
6000
3500
0
8500
3500
0
4500
2000
0

1
2
4
3
3
1
2
2
4
3

5000
4000
2500
3500
1500
5000
3500
500
2500
2000

0
0
0
1500
0
0
500
0
0
3000

Another factor is the quantity to carry, which has a great inﬂuence on the type of truck selected.
Choosing the proper vehicle will save transportation costs. If a truck is chosen that has less capacity
than the amount it is required to carry, it will require several trips to complete the transport. This
results in fuel consumption and increases transportation cost. If a truck is chosen that is larger than
the amount to transport, there is free space, which raises the cost. Therefore, selecting the truck type
should be based on a capacity that is larger than—but similar to—the quantity to be delivered, to avoid
several rounds of transportation, which could cost more than a single trip with a large truck, as shown
in Equation (18)
(18)
min TruckQk ≥ AssignQ
TruckQk means the capacity of truck type k; k = 1, 2, 3, and 4.
The assignment of chicken farms will be carried out in the order shown in Table 10, starting from
the initial order farm since the ﬁrst farm has been completely assigned. Then, another farm can be
assigned when the all farms have been assigned and no chickens remain. The assignment for the egg
farms is different, as they require at least 50% of their demands. After that, additional chickens will be
provided. The chicken farm in the ﬁrst sequence usually receives the amount of chickens it demands.
However, the farm in the latter sequence may not get the chickens it wants. Once the assigned quantity
has been determined, the type of vehicle will be assigned. Also, the second round of transport will
take place when the same vehicle is assigned from the same chicken farm to the same egg farm until
the requirement is met. With the initial decoding for an assignment to provide 50% of chickens to egg
farms as the limitation, the ﬁrst assignment is shown in Table 8, in which chicken farm no. 2 has been
assigned as the ﬁrst and has an order of 5000 chickens, while the ﬁrst egg farm needs 10,000 chickens.
Therefore, this egg farm will receive at least 50% of its demand (5000 chickens) from chicken farm no. 2.
To avoid several rounds of transportation, trucks that have more capacity than the assigned quantity
are used.
224

Math. Comput. Appl. 2018, 23, 55

However, choosing a more capable truck will result in costs of lost opportunity. In order to avoid
this cost, trucks should be selected with a capacity closest to the quantity to be commissioned. In the
case of 5000 chickens, this will be assigned to a truck that has capacity for 8000 chickens, which also
results in 3000 empty spaces and lost opportunity cost.
4.2. Perform Mutation Process
Mutation is a method of modifying the values in the vector position, which is a step to extend the
scope for ﬁnding the answers. It starts from three random vectors from the initial population in the
same group (truck type, chicken farm, and egg farm), combining the ﬁrst vector with the difference
from the other two to form a new vector. This principle is unique to differential evolution and can be
expressed as


(19)
vi,j,G+1 = xr1 ,j,G + F xr2 ,j,G − xr3 ,j,G
xr1 ,j,G = target vector (r1 ) of chicken farm group (j) acquired from random G population, for which
there are three vectors, and the next vectors are xr2 ,j,G and xr3 ,j,G .
vi,j,G+1 = mutant vector, or the vector from the steps of modifying the values of the vector in population
position (i) of vector group (j) for the new population (G + 1).
F = mutant factor; F is equal to 0.8 (Qin et al., 2009), acquired from the experiment to ﬁnd the
optimal value.
i = 1, 2, 3, . . . , N (N means the number of population).
j = 1, 2, 3 means the vector from type of truck, chicken farm, and egg farm, respectively.
The target vectors of truck type, chicken farm, and egg farm, as shown in Tables 1–3 respectively,
are taken into the modiﬁcation of the vector position to obtain the mutant vector of the truck type
(Table 9), of the chicken farm (Table 10), and of the egg farm (Table 11). Evaluating the mutant vector,
F = 0.8 [53], this is a good starting point to randomly select three vectors from Xi,G and then substitute
them into Equation (19), which produces 0.853 + 0.8 (0.757–0.335), which is equal to 1.191. Then, it
leads to the recombination of the vectors.
Table 9. Mutant vectors of truck type.
Mutant Vectors of Truck Type

Position
1
2
3
4

1

2

3

4

5

1.191
0.412
0.848
0.629

0.961
0.849
0.308
0.745

0.982
−0.019
0.321
0.159

0.735
0.525
0.157
1.207

0.850
0.553
0.384
0.906

Table 10. Mutant vectors of chicken farm.
Mutant Vectors of Chicken Farm

Position
1
2
3
4

1

2

3

4

5

0.512
0.035
0.438
0.386

0.872
0.028
0.474
1.498

−0.154
0.146
−0.054
0.705

0.663
0.875
0.229
0.192

0.477
−0.017
1.074
0.428

Table 11. Mutant vectors of egg farm.
Mutant Vectors of Egg Farm

Position
1
2
3
4

1

2

3

4

5

0.940
−0.012
0.168
0.947

0.915
−0.104
−0.141
0.563

0.277
0.326
0.091
0.053

0.073
0.038
0.596
0.336

0.988
−0.029
0.202
0.870

225

Math. Comput. Appl. 2018, 23, 55

4.3. Perform the Recombination Process
The recombination process uses the mutant vector (vi,j,G ) and the target vector (xi,j,G ) to select
once again to be a trial vector (ui,j,G ) by choosing only one vector. The process must not choose the
same vector. The method can be expressed as
)
ui,j,G =

vi,j,G when CR ≤ rand
xi,j,G when CR > rand

(20)

The recombination method aims to use the target vector from the ﬁrst step to ﬁnd the difference
of vectors in the mutant vector of position but still allow the target vector to return to the process by
setting the crossover rate (CR) to 0.2. If the random number for each vector is greater than or equal to
a CR of 0.2, the mutant vector will be selected. If the random number is less than the CR, the target
vector will be selected, as shown in Table 12.
Table 12. Random number values for each vector.
Random Number of Vectors

Type of Vector
Truck type
Chicken farm
Egg farm

1

2

3

4

5

0.614
0.141
0.697

0.130
0.229
0.603

0.963
0.764
0.158

0.601
0.147
0.744

0.074
0.622
0.796

Applying the random number obtained from Table 12 to the mutant vector demonstrates that
most of the vectors taken into consideration in the vector selection procedure were the ones that
already passed the mutant vector process. The selected vector of the truck type is shown in Table 13,
that of the chicken farm is shown in Table 14, and that of the egg farm is shown in Table 15. Then, the
vector selection procedure continues.
Table 13. Vectors after mutation of vector positions of truck type.
Vectors of Truck Type

Position
1
2
3
4

1

2

3

4

5

1.191
0.412
0.848
0.629

0.956
0.397
0.391
0.293

0.982
−0.019
0.321
0.159

0.735
0.525
0.157
1.207

0.545
0.471
0.443
0.824

Note: Target vectors are in bold.

Table 14. Vectors after mutation of vector positions of chicken farm.
Vectors of Chicken Farm

Position
1
2
3
4

1

2

3

4

5

0.234
0.257
0.512
0.164

0.872
0.028
0.474
1.498

−0.154
0.146
−0.054
0.705

0.417
0.829
0.475
0.522

0.477
−0.017
1.074
0.428

Note: Target vectors are in bold.

226

Math. Comput. Appl. 2018, 23, 55

Table 15. Vectors after mutation of vector positions of egg farm.
Vectors of Egg Farm

Position
1
2
3
4

1

2

3

4

5

0.94
−0.012
0.168
0.947

0.915
−0.104
−0.141
0.563

0.067
0.313
0.051
0.263

0.073
0.038
0.596
0.336

0.988
−0.029
0.202
0.87

Note: Target vectors are in bold.

4.4. Perform the Selection Process
The selection process is the vector selection step in DE that compares the cost of assignment
(ﬁtness function) with the cost of the target and trial vectors from the mutation process.
)




ui,j,G+1 i f f ui,j,G+1 ≤ f xi,j,G
xi,j,G+1 =
xi,j,G
otherwise
If the cost of the assignment from the trial vector is less than or equal to the cost of the assignment
from the target vector, then the trial vector will be selected and collected for the next population.
On the other hand, if the cost of the assignment given by the trial vector is greater than the target vector,
then the target vector will be collected from this population to be the vector for further population.
Repeat steps 2–6 until the best answer is acquired.
From the explanation in Sections 4.1–4.4, the proposed heuristics procedure is shown in
Algorithm 1.
Algorithm 1. Pseudocode of the proposed heuristics.
Set NP, CR, F, NP (size of vector)
Generate initial solution
Begin
For G = 1 to Gmax , where G = iterations and Gmax = maximum iterations
For N = 1 to NP
Generate random target vector Xr1 ,j,G and RV and update BV
Produce mutant vector N (mutation process) (Equation (19))


vi,j,G+1 = xr1 ,j,G + F xr2 ,j,G − xr3 ,j,G
Produce trial vector N (recombination process)
• Using Equation (20):
)
ui,j,G =

vi,j,G when CR ≤ rand
xi,j,G when CR > rand

Produce new target vector (selection\process)
)
Xi,j,G+1 =

Ui,j,G





if f Ui,j,G ≤ f Xi,j,G

Xi,j,G

otherwise

End

227

Math. Comput. Appl. 2018, 23, 55

5. Computational Framework and Result
The proposed heuristics were executed and compared with the solution generated by Lingo v.11.
We reprogrammed the proposed heuristics in C++ and simulated it on a computer with Intel (R) Core
i7-3520M CPU @ 2.90 GHz Ram 8.00 GB. We tested our algorithms with three groups of test instances,
small, medium, and large. The simulation was executed ﬁve times until the best solution was selected,
as shown in the table. Details of the test instances are shown in Table 16.
Table 16. Details of the test instances.
Group Test
Instance

Number of Test
Instances

Number of
Chicken Farms

Number of
Egg Farms

Number of
Trucks

Compare
Method

St

Small
Medium
Large
Case study

12
12
12
1

5
10
20
40

5
10
20
60

5–10
10–20
20–30
54

Exact
Exact
Lower bound
Lower bound

it
it
it
it

ST, stopping criteria; it, number of iterations; compare method, method that the proposed heuristic will be
compared with.

From Table 16, we test our 37 tested instances, composed of 12 small, medium, and large instances
and 1 case study. For small and medium test instances, the proposed method was compared with the
exact method. The exact method used here is Lingo v.11. For the large instances and the case study, the
proposed method was compared with the lower bound generated by Lingo v.11 within 72 h.
The ﬁrst experiment was executed with the small and medium test instances. The stopping
criterion for Lingo v.11 was when it found the optimal solution. The best solution and computation
time were collected. The stopping criterion for DE was when it found the optimal solution (the same as
Lingo v.11) or when it reached 500 iterations. The results are shown in Tables 17 and 18 for small and
medium randomly generated datasets, respectively. The simulation was executed in 12 test instances,
each of which had a size of 5 × 5 (number of egg farms × number of chicken farms). The best solutions
out of ﬁve runs are shown in Tables 17 and 18.
Table 17. Results of small samples (5 × 5) showing cost and time of assignment.
Lingo v.11

Dataset

Differential Evolution

%Diff.

Cost (Baht) (a)

Time (s)

Cost (Baht) (b)

Time (s)

1
2
3
4
5
6
7
8
9
10
11
12

9723
8753
5330
7056
7317
6098
7004
7649
7761
7894
7566
7683

6.9
2
10.7
4.8
4.7
8.9
9.6
9.4
4.8
12.8
13.7
20.8

9723
8753
5330
7059
7317
6107
7004
7649
7761
7894
7575
7683

0.5
0.2
0.2
0.2
0.2
0.7
0.3
0.8
1.7
1.8
2.9
0.8

0.00
0.00
0.00
0.04
0.00
0.15
0.00
0.00
0.00
0.00
0.12
0.00

Average

7486.17

7487.92

0.86

0.03

9.09
Note: %diff. =

228

b− a
a

× 100%.

Math. Comput. Appl. 2018, 23, 55

Table 18. Experimental results of the medium sample (10 × 10) showing cost of assignment and
processing time.
Lingo v.11

Dataset

Differential Evolution

%Diff.

Cost (Baht) (a)

Time (s)

Cost (Baht) (b)

Time (s)

1
2
3
4
5
6
7
8
9
10
11
12

11,989
11,397
11,572
12,898
12,184
11,315
14,508
12,613
10,902
11,870
15,817
12,114

175
79
84
91
92
98
105
93
92
108
114
79

11,989
11,401
11,572
12,898
12,184
11,315
14,508
12,613
10,921
11,890
15,849
12,114

0.6
0.6
0.5
2.8
1.4
0.9
1.8
2.9
1.6
1.8
1.5
3.7

0.00
0.04
0.00
0.00
0.00
0.00
0.00
0.00
0.17
0.17
0.20
0.00

Average

12431.58

12437.83

1.68

0.05

100.83
b− a
a

Notes: % diff. =

× 100%.

Table 17 shows a small group of problem instances. In one out of ﬁve instances, the proposed
heuristic could not ﬁnd the optimal solution. The average gap (%diff.) of DE from the solution
generated by Lingo v.11 was 0.03% and it used 10.57 times (9.09/0.86) less computation time.
The simulation was executed for 12 test instances, each with a size of 10 × 10 (number of egg
farms × number of chicken farms). The best solutions out of ﬁve runs are shown in Table 18.
Table 18 shows a medium-sized test, for which the sample size is 10 × 10. Lingo v.11 took 100.83 s
on average to ﬁnd a 0.05% better solution than DE, but DE used only 1.68 s computation time on
average to ﬁnd that solution.
The next experiment was executed with a large size of test instances. The stopping criterion of
Lingo v.11 was 72 h or 4320 min. The best solution found within that time was collected to compare
with the result generated by DE. The stopping criterion of DE was set at 1000 iterations. The solution
is shown in Table 19. This group includes the case study (40 × 60).
Table 19. Experimental results for large samples (20 × 20) and the case study showing the cost of
assignment and processing time.
Lingo v.11

Dataset

DE

%Diff.

Cost (Baht) (a)

Time (min)

Cost (Baht) (b)

Time (min)

1
2
3
4
5
6
7
8
9
10
11
12
Case study

33,249
29,943
37,672
38,891
39,781
31,480
58,984
89,872
90,164
35,878
29,095
29,892
125,593

4320
4320
4320
4320
4320
4320
4320
4320
4320
4320
4320
4320
4320

32,716
29,094
36,128
37,781
37,895
30,084
57,738
87,573
89,079
34,871
28,049
29,152
114,932

5.1
5.1
3.6
4.8
5.9
11.2
14.5
15.8
19.1
11.5
3.7
3.7
10.3

1.63
2.92
4.27
2.94
4.98
4.64
2.16
2.63
1.22
2.89
3.73
2.54
9.28

Average

51,576.46

49,622.46

8.79

3.52

4320
Note: %diff. =

a−b
b

229

× 100%.

Math. Comput. Appl. 2018, 23, 55

Table 19 shows a large-scale problem test, for which the sample size was 20 × 20. The result
generated by Lingo v.11 within 72 h had an average cost of 51,576.46 baht, while the result generated
by DE was 49,622.46 baht, or 4.52% less, using 491 times less computation time. The comparison of
Lingo v.11 and DE shown in Tables 17–19 was statistically tested using Wilcoxon signed-rank test with
95% conﬁdence interval. The statistical test results are shown in Table 20.
Table 20. Statistical test results.
Problem Size
Small
Medium
Large

Signiﬁcance Level

Critical Value

p-Value

W

p-Value

W

0.89812
0.65994
0.00148

17.5
10
0

0.05
0.05
0.05

8
6
17

Result
Lingo V.11 = DE
Lingo V.11 = DE
Lingo V.11 ≥ DE

From Table 20, we can see that in the small and medium groups, the performance of DE and Lingo
v11 was not signiﬁcant different, and for the large size, DE had signiﬁcantly lower cost than Lingo v.11.
6. Conclusions and Suggestions
The purpose of resolving the multistage assignment problem is to minimize the cost of assignment.
The case study in this research consisted of the main cost of transportation, which relies on the distance
to transport as well as the cost of opportunity loss related to truck incapacity.
The resolution started from the development of a mathematical model that consisted of the cost
of chicken transportation and opportunity loss. The model had to comply with the conditions as well.
Then, the mathematical model was applied to ﬁnd the best answer using Lingo v.11. Unfortunately,
when the problem size is large, Lingo v.11 is not able to solve the problem into optimality, therefore
the metaheuristics have to be further developed to get the solution for the case study and the large
problem size.
Later, DE was developed to solve the multistage assignment problem, and the results of the
efﬁciency of DE vs. Lingo v.11 were compared. In the case that Lingo v.11 can ﬁnd the optimal solution,
we compared the proposed heuristic (DE) with the optimal solution. The time Lingo v.11 used to ﬁnd
the optimal solution was recorded for all test instances. In this case, DE will use number of iterations
(set to 500 from the preliminary test). The computation results show that in small- and medium-sized
test instances, DE uses much less computation time than Lingo v.11 while obtaining less than a 1%
cost difference (0.03% and 0.05%, respectively) from the optimal solution. In the large-sized problem
instances, DE found a 3.52% better solution while using 491 times less computation time than Lingo
v.11. Thus, we can see that the performance of DE is better when the problem size is larger. DE obtains
better solutions than Lingo v.11 when it uses much more computation time. DE is suitable to solve big
problems that an exact method like Lingo v.11 cannot solve.
From the computation results shown in Tables 18–20, we can see that when the problem size is
small, Lingo v.11 can always ﬁnd the optimal solution and DE sometimes has worse solution quality
than Lingo v.11. This is the weak point of the proposed heuristics: in small- and medium-sized test
instances, it cannot ﬁnd the optimal solution even when we increase the iterations to 1000 or 1500.
This means that, in small-sized test instances, DE converts fast and sticks on the local optimal. When
there is a large size of test instances, DE can ﬁnd a better solution than Lingo v.11, because when the
problem size is large, it is hard for the exact method to solve to optimality, and when the computation
time is set at 72 h, Lingo v.11 is not yet ﬁnished with the search while DE, the metaheuristic, can ﬁnish
the search activity.
Future research should study more complicated assignment problems as well as the current
problems or other metaheuristic methods to enhance solutions through hybrid methodologies.
Algorithm designers need to add a search mechanism that allows the proposed solution to escape from

230

Math. Comput. Appl. 2018, 23, 55

the local optimal to the general mechanism of DE so that the ability to escape from the local optimal
will be increased.
Author Contributions: S.S. designed the algorithm; T.S. and C.T. gathered data and programed the algorithm;
G.J. made the summary and conclusion.
Funding: We would like to express our thanks to Mahasarakham University, Rajamangala University of
Technology Thanyaburi, Ubon Ratchathani University, Nakhon Phanom University, and Sisaket Rajabhat
University for funding this project.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

References
1.
2.
3.
4.

5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.

18.
19.
20.

Monge, G. Sur le CalculIntégraldes Équations Aux Differences Partielles. Available online: http://verbit.ru/
MATH/TALKS/India/History-MA.pdf (accessed on 10 May 2016).
Frobenius, F.G. Ferdinand Georg Frobenius; Gesammelte Abhandlungen, Band III; Serre, J.-P., Ed.; Springer: Berlin,
Germany, 1968.
Konig, D. Vonalrendszerek és determinánsok. Mathenatikaies Termeszettudomanyi Ertesito 1915, 33, 221–229.
Dantzig, G.B. Application of the simplex method to a transportation problem. In Activity Analysis of
Production and Allocation, Proceedings of Linear Programming, Chicago, Illinois, 1949; Wiley: New York, NY, USA,
1951; pp. 359–373.
Kuhn, H.W. The Hungarian method for the assignment problem. Nav. Res. Logist. Q. 1956, 2, 83–97.
[CrossRef]
Ross, G.T.; Soland, R.M. A branch and bound algorithm for the generalized Assignment problem.
Math. Program. 1975, 8, 91–103. [CrossRef]
Fisher, M.L.; Jaikumar, R. A generalized assignment heuristic for vehicle routing. Networks 1981, 11, 109–124.
[CrossRef]
Liu, L.; Mu, H.; Song, Y.; Luo, H.; Li, X.; Wu, F. The equilibrium generalized Assignment problem and genetic
algorithm. Appl. Math. Comput. 2012, 218, 6526–6535. [CrossRef]
Wang, G.; Tan, Y. Improving Metaheuristic Algorithms with Information Feedback Models.
IEEE Trans. Cybern. 2017, 99, 1–14. [CrossRef] [PubMed]
Wang, G.; Guo, L.; Gandomi, A.H.; Hao, G.; Wang, H. Chaotic Krill Herd algorithm. Inf. Sci. 2014, 274, 17–34.
[CrossRef]
Wang, G.; Gandomi, A.H.; Alavi, A.H. An effective krill herd algorithm with migration operator in
biogeography-based optimization. Appl. Math. Model. 2014, 38, 2454–2462. [CrossRef]
Cui, Z.; Sun, B.; Wang, G.; Xue, Y.; Chen, J. A novel oriented cuckoo search algorithm to improve DV-Hop
performance for cyber-physical systems. J. Parallel Distrib. Comput. 2016, 103. [CrossRef]
Wang, G.; Alavi, A.H.; Zhao, X.; Hai, C.C. Hybridizing harmony search algorithm with cuckoo search for
global numerical optimization. Soft Comput. 2016, 20, 273–285. [CrossRef]
Feng, Y.; Wang, G. Binary Moth Search Algorithm for Discounted {0-1} Knapsack Problem. IEEE Access 2018.
[CrossRef]
Wang, G.; Deb, S.; Cui, Z. Monarch Butterﬂy Optimization. Neural Comput. Appl. 2015. [CrossRef]
Wang, G.; Guo, L.; Gandomi, A.H.; Cao, L.; Alavi, A.H.; Duan, H.; Li, J. Lévy-Flight Krill Herd Algorithm.
Math. Probl. Eng. 2013. [CrossRef]
Wang, G.; Guo, L.; Duan, H.; Wang, H.; Liu, L.; Shao, M. Hybridizing Harmony Search with Biogeography
Based Optimization for Global Numerical Optimization. J. Comput. Theor. Nanosci. 2013, 10, 2312–2322.
[CrossRef]
Wei, Z.J.; Wang, G. Image Matching Using a Bat Algorithm with Mutation. Appl. Mech. Mater. 2012, 203,
88–93. [CrossRef]
Wang, G.; Coelho, L.; Gao, X.Z.; Deb, S. A new metaheuristic optimisation algorithm motivated by elephant
herding behavior. Int. J. Bio-Inspir. Comput. 2016, 8, 394. [CrossRef]
Wang, G.; Deb, S.; Coelho, L.D.S. Earthworm optimization algorithm: A bio-inspired metaheuristic algorithm
for global optimization problems. Int. J. Bio-Inspir. Comput. 2018, 12, 1–12. [CrossRef]

231

Math. Comput. Appl. 2018, 23, 55

21.
22.
23.
24.
25.
26.
27.
28.

29.
30.
31.
32.
33.

34.
35.
36.
37.
38.
39.
40.
41.
42.
43.
44.
45.

Wang, G.; Guo, L.; Wang, H.; Duan, H.; Liu, L.; Li, J. Incorporating mutation scheme into krill herd algorithm
for global numerical optimization. Neural Comput. Appl. 2014, 24, 853–871. [CrossRef]
Wang, G.; Gandomi, A.H.; Alavi, A.H. Stud krill herd algorithm. Neurocomputing 2014, 128, 363–370.
[CrossRef]
Wang, G.; Gandomi, A.H.; Yang, X.; Alavi, A.H. A new hybrid method based on krill herd and cuckoo search
for global optimisation tasks. Int. J. Bio-Inspir. Comput. 2016, 8, 286–299. [CrossRef]
Wang, H.; Yi, J.H. An improved optimization method based on krill herd and artiﬁcial bee colony with
information exchange. Memet. Comput. 2017, 10, 177–198. [CrossRef]
Wang, G.; Gandomi, A.H.; Alavi, A.H.; Deb, S. A hybrid method based on krill herd and quantum-behaved
particle swarm optimization. Neural Comput. Appl. 2016, 27, 989–1006. [CrossRef]
Wang, G.; Guo, L.; Gandomi, A.H.; Alavi, A.H.; Duan, H. Simulated Annealing-Based Krill Herd Algorithm
for Global Optimization. Abstr. Appl. Anal. 2013, 2013, 213853. [CrossRef]
Guo, L.; Wang, G.; Gandomi, A.H.; Alavi, A.H.; Duan, H. A new improved krill herd algorithm for global
numerical optimization. Neurocomputing 2014, 138, 392–402. [CrossRef]
Wang, G.; Gandomi, A.H.; Alavi, A.H. Study of Lagrangian and Evolutionary Parameters in Krill Herd
Algorithm. In Adaptation and Hybridization in Computational Intelligence. Adaptation, Learning, and Optimization;
Fister, I., Fister, I., Jr., Eds.; Springer: Cham, Switzerland, 2015.
Wang, G.; Gandomi, A.H.; Alavi, A.H.; Deb, S. A Multi-Stage Krill Herd Algorithm for Global Numerical
Optimization. Int. J. Artif. Intell. Tools 2016, 25. [CrossRef]
Wang, G.; Deb, S.; Gandomi, A.H.; Alavi, A.H. A Opposition-based krill herd algorithm with Cauchy
mutation and position clamping. Neurocomputing 2016, 177, 147–157. [CrossRef]
Wang, G.; Gandomi, A.H.; Alavi, A.H.; Gong, D. A comprehensive review of krill herd algorithm: Variants,
hybrids and applications. Artif. Intell. Rev. 2017. [CrossRef]
Rizk, M.; Rizk, A.; Ragab, A.; El-Sehiemy, R.A.; Wang, G. A novel parallel hurricane optimization algorithm
for secure emission/economic load dispatch solution. Appl. Soft Comput. 2018, 63, 206–222. [CrossRef]
Wang, G.; Gandomi, A.H.; Alavi, A.H.; Dong, Y. A Hybrid Meta-Heuristic Method Based on Fireﬂy Algorithm
and Krill Herd. In Handbook of Research on Advanced Computational Techniques for Simulation-Based Engineering;
IGI: Hershey, PA, USA, 2016; pp. 521–540. [CrossRef]
Wang, G. Moth search algorithm: A bio-inspired metaheuristic algorithm for global optimization problems.
Memet. Comput. 2018, 10, 151–164. [CrossRef]
Feng, Y.; Wang, G.; Deb, S.; Lu, M.; Zhao, X. Solving 0–1 knapsack problem by a novel binary monarch
butterﬂy optimization. Neural Comput. Appl. 2017, 28, 1619–1634. [CrossRef]
Feng, Y. Solving 0–1 knapsack problems by chaotic monarch butterﬂy optimization algorithm with Gaussian
mutation. Memet. Comput. 2016. [CrossRef]
Wang, G.; Deb, S.; Zhao, X.; Cui, Z. A new monarch butterﬂy optimization with an improved crossover
operator. Oper. Res. 2016, 3, 731–755. [CrossRef]
Wu, G. Across neighborhood search for numerical optimization. Inf. Sci. 2016, 329, 597–618. [CrossRef]
Wang, G.; Gandomi, A.H.; Alavi, A.H. A chaotic particle-swarm krill herd algorithm for global numerical
optimization. Kybernetes 2013, 42, 962–978. [CrossRef]
Wang, G.; Deb, S.; Gandomi, A.H.; Zhang, Z.; Alavi, A.H. A Fusion of Foundations, Methodologies and
Applications. Soft Comput. 2016, 20, 3349–3362. [CrossRef]
Yi, J.; Wang, J.; Wang, G. Improved probabilistic neural networks with self-adaptive strategies for transformer
fault diagnosis problem. Adv. Mech. Eng. 2016, 8. [CrossRef]
Storn, R.; Price, K. Differential evolution—A simple and efﬁcient heuristic for global Optimization over
continuous spaces. J. Glob. Optim. 1977, 11, 341–359. [CrossRef]
Pitakaso, R. Differential evolution algorithm for simple assembly line balancing type 1 (SALBP-1). J. Ind.
Prod. Eng. 2015, 32, 104–114. [CrossRef]
Pitakaso, R.; Sethanan, K. Modiﬁed differential evolution algorithm for simple assembly line balancing with
a limit on the number of machine types. Eng. Optim. 2015, 48, 253–271. [CrossRef]
López Cruz, I.L.; Van Willigenburg, L.G.; Van Straten, G. Optimal control of nitrate in lettuce by a hybrid
approach: Differential evolution and adjustable control weight gradient algorithms. Comput. Electron. Agric.
2003, 40, 179–197. [CrossRef]

232

Math. Comput. Appl. 2018, 23, 55

46.
47.

48.
49.

50.
51.
52.
53.

Liao, T.W.; Egbelu, P.J.; Chang, P.C. Two hybrid differential evolution algorithms for optimal inbound and
outbound truck sequencing in cross docking operations. Appl. Soft Comput. 2012, 12, 3683–3697. [CrossRef]
Liao, T.W.; Egbelua, P.J.; Chang, P.C. Simultaneous dock assignment and sequencing of inbound trucks
under a ﬁxed outbound truck schedule in multi-door cross docking operations. Int. J. Prod. Econ. 2013, 141,
212–229. [CrossRef]
Hou, L.; Zhou, H.; Zhao, J. A novel discrete differential evolution algorithm for stochastic VRPSPD. J. Comput.
Inf. Syst. 2010, 6, 2483–2491.
Dechampai, D.; Tanwanichkul, L.; Sethanan, K.; Pitakaso, R. A differential evolution algorithm for the
capacitated VRP with ﬂexibility of mixing pickup and delivery services and the maximum duration of a
route in poultry industry. J. Intell. Manuf. 2015, 28, 1357–1376. [CrossRef]
Sethanan, K.; Pitakaso, R. Differential evolution algorithms for scheduling raw milk transportation.
Comput. Electron. Agric. 2016, 121, 245–259. [CrossRef]
Sethanan, K.; Pitakaso, R. Improved differential evolution algorithms for solving generalized assignment
problem. Expert Syst. Appl. 2016, 45, 450–459. [CrossRef]
Boon, E.T.; Ponnambalam, S.G.; Kanagara, G. Differential evolution algorithm with local search for
capacitated vehicle routing problem. Int. J. Bio-Inspir. Comput. 2013, 7. [CrossRef]
Qin, A.K.; Huang, V.L.; Suganthan, P.N. Differential Evolution Algorithm with Strategy Adaptation for
Global Numerical Optimization. IEEE Trans. Evol. Comput. 2009, 13, 398–417. [CrossRef]
© 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access
article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

233

Mathematical
and Computational
Applications

Article

Modeling and Simulation of a Hydraulic Network for
Leak Diagnosis
José-Roberto Bermúdez 1,2 , Francisco-Ronay López-Estrada 1, * , Gildas Besançon 2 ,
Guillermo Valencia-Palomo 3, * , Lizeth Torres 4 and Héctor-Ricardo Hernández 1
1

2
3
4

*

TURIX-Dynamics Diagnosis and Control Group, Tecnológico Nacional de México, Instituto Tecnológico de
Tuxtla Gutiérrez, Tuxtla Gutiérrez 29050, Mexico; bermudez_r10@hotmail.com (J.-R.B.);
hhernandezd@ittg.edu.mx (H.-R.H.)
GIPSA-lab, CNRS, Grenoble INP, Université Grenoble Alpes, 38000 Grenoble, France;
Gildas.Besancon@gipsa-lab.grenoble-inp.fr
Tecnológico Nacional de México, Instituto Tecnológico de Hermosillo, Hermosillo 83170, Mexico
Cátedras CONACYT, Instituto de Ingeniería, Universidad Nacional Autónoma de México,
Ciudad de México 04510, Mexico; ftorreso@iingen.unam.mx
Correspondence: frlopez@ittg.edu.mx (F.-R.L.-E.); gvalencia@ith.mx (G.V.-P.)

Received: 28 September 2018; Accepted: 4 November 2018; Published: 6 November 2018

Abstract: This work presents the modeling and simulation of a hydraulic network with four nodes
and two branches that form a two-level water distribution system. It also proposes a distribution of
hydraulic valves that allows emulating a leak using a valve and different network conﬁgurations,
e.g., simple ducts, closed networks and branched networks. The network is modeled in the steady
state considering turbulent ﬂow. Numerical experiments are performed, and the results show that
the proposed network is useful for the design of leakage diagnosis and control algorithms in different
conﬁgurations and leakage scenarios.
Keywords: hydraulic networks; leaks in pipes; pipe model; leak diagnosis

1. Introduction
Safety and proper functioning of hydraulic networks are very important, since these systems are
used in the industrial and governmental sectors for the transportation of different types of ﬂuids such
as gases, hydrocarbons and water. In this sense, one of the main problems in the distribution networks
of liquids are hydraulic leaks, where a hydraulic leak is deﬁned as the uncontrolled output of ﬂuid that
occurs in any section of the network. A leak can occur when there is corrosion on the inside or outside
of the pipe, or it can be caused by blows, by the theft of transported product, etc. [1]. Leaks have serious
consequences such as environmental pollution, economic losses and human deaths from hydrocarbon
explosions. Leaks occur more frequently in worn pipes, pipes with low maintenance, pipe joints or in
some accessories such as elbows and valves, among others [2].
Due to the strong environmental and social impact caused by leaks in water distribution systems,
it is necessary to reduce this problem [3], taking into account that the water demands increase as the
population multiplies, and water losses in highly populated cities increase in a high percentage as
well. The Organization for Economic Cooperation and Development (OECD) conducted a survey
in 42 cities with the highest leakage problem in their distribution networks. In the list, one can ﬁnd
Mexican cities like Tuxtla Gutiérrez with a ﬂow loss of 70%, San Luis Potosí with 50% and Mexico City
with more than 40%. Other important cities around the world are Paris with loses of 10%, Hong Kong
(China) with more than 15% and Liverpool with more than 20% [4]. These percentages of water losses
in distribution networks give evidence of the need to develop solutions in order to solve or at least
mitigate this problem.
Math. Comput. Appl. 2018, 23, 70; doi:10.3390/mca23040070 234

www.mdpi.com/journal/mca

Math. Comput. Appl. 2018, 23, 70

Different works have been developed that focus on leak detection and control of hydraulic
network systems. For example, Van Pham et al. [5] used a receding horizon optimal control method
applied to the ﬂow model of the network, guaranteeing the convergence of pressures in case of
transients; Torres et al. [6] designed a state observer through redundant relationships in order to isolate
sensor and actuator faults and unknown extractions of ﬂuid; Wang et al. [7] used a robust predictive
control algorithm to control pressures and ﬂows in the demanding nodes in a small network. In order
to validate these algorithms, it is necessary to test them experimentally in laboratory plants that can
reproduce, at scale, the behavior of real hydraulic networks. In this context, different pilot plants have
been built for experimentation with emphasis on hydraulic leaks. For example, at the laboratory of
the Engineering Institute of UNAM(Mexico), a hydraulic network was designed with a vertical coil
arrangement where leak detection and localization algorithms have been developed using model- and
R
R
and MATLAB
for ﬂow and pressure
data-based techniques using monitoring software in Labview
analysis [8,9]. In the hydraulic laboratory at CINVESTAVcampus Guadalajara (Mexico), the pilot plant
has a rectangular geometry, and it has also enabled the development of leak detection algorithms
with model-based methods [10,11]. GIPSA-lab (France) and the University of Catalonia (Spain) also
have facilities enabling the experimentation with hydraulics networks [7,12], and the list can continue.
On the other hand, when there are no pilot plants available or the physical extension of the hydraulic
network is prohibitive for a laboratory, it is necessary to use specialized software to emulate the
R
, which is a public domain,
behavior of the network. One of these software programs is EPANET
water distribution system modeling software package developed by the United States Environmental
Protection Agency; it performs extended-period simulation of hydraulic and water-quality behavior
R
within pressurized pipe networks, and it has been also used for leak detection [13]. Flow-Master
is
another software program that has been used for the representation of hydraulic networks and the
development of leakage detection and localization techniques [14].
In line with the laboratories previously mentioned, as well as their important usefulness in
the development of new leak detection and localization techniques, this paper proposes a model of
an extended hydraulic network with two lateral connections that is under construction at the Instituto
Tecnológico de Tuxtla Gutiérrez. It will allow experimenting with a hydraulic network of a few nodes
that emulate some real problems that arise in a real distribution network. Therefore, this work presents
the modeling and simulation of a 200 m hydraulic network, with a storage depot of 2500 L, a hydraulic
R
pump of 5 hp, four nodes in its two lateral sockets and valves for the simulation of leaks. SolidWorks
is used to present its geometric arrangement in order to consider the space available at the laboratory
where it will be located. The physical layout of the network consists of a base with two lateral branches
that connect to a second level. The steady-state model of the hydraulic network obtained in the
R
environment is also described. In this way, a unique prototype that simulates a real
MATLAB
hydraulic network is obtained. It will serve as an experimental basis to develop leakage diagnosis
algorithms, in addition to optimal control techniques applied to the network to reduce water waste
due to hydraulic leaks. The results are presented with the description of the parameters obtained in
leak-free and leak conditions.
2. Modeling of the Hydraulic Network
2.1. Hydraulic Concepts
A distribution network comprises a collection of interconnected pipe sections in a speciﬁc
conﬁguration, each one with a length, a diameter and a roughness according to the material. Sections
of the pipeline may contain pumps and accessories, such as elbows and valves. The end points of each
pipe section are identiﬁed as union nodes or ﬁxed grade nodes. A joint node is a point where two or
more sections of pipe join together, and it is also a point of consumption where the ﬂow can enter and
exit the system. A node of ﬁxed degree is a point where a constant piezometric height is maintained,

235

Math. Comput. Appl. 2018, 23, 70

such as a connection to a reservoir, an elevated storage tank or any other constant pressure region.
In any pipe network, the following equation is fulﬁlled [15]:
NP = NJ + NL + NF − 1,

(1)

where NP is the number of pipe sections (also called lines), NJ is the number of union nodes, NL is the
number of closed loops and NF is the number of ﬁxed degree nodes.
On the other hand, hydraulic pumps can be described in several ways. For some applications,
a constant power input is speciﬁed. For other applications, a curve is adapted to the actual operating
data of the pump. For pumps described for their useful power Pu , the energy added by the pump
between the nodes i, j is expressed in terms of the ﬂow rate by:
3
Hj − Hi = μ Pu Qij ;

(2)

where H is the pressure head (mwc), μ it is a constant that depends on the units used and Q is the
ﬂow (m3 /s). Alternatively, a pump can be described by its ﬂow values at different operating points;
these points relate the discharges (output ﬂows) with the differences in piezometric height through the
pump. A quadratic polynomial can be adjusted through these points to obtain a characteristic curve
that describes the operation of the pump in the form:
Hj − Hi = a0 η 2 + b0 ηQij + c0 Q2ij ,

(3)

where a0 , b0 y c0 are the coefﬁcients of the curve that represent the real operation when the pump
works at maximum speed. At least three data points are required to determine the coefﬁcients, where η
is the proportion of the rotational speed at any time, with respect to the rotational speed associated
with the data used to determine the coefﬁcients [16].
2.2. Energy Losses and Mass Balance in Hydraulic Networks
When there is ﬂuid transport in a hydraulic network, an advance resistance is generated due to
the roughness of the material, where the relative roughness is deﬁned by:

= k s /d,

(4)

where k s is the absolute roughness (mm) and d is the diameter of the pipeline (mm). Another important
parameter of the ﬂow in hydraulic networks is the friction factor f , which depends on the geometry of
the pipe and the Reynolds number (Re). The friction factor depends on the ﬂow turbulence, which is
considered to be laminated when Re < 2000, and it is considered turbulent when Re > 4000 [17].
In a turbulent regime, the friction factor depends not only on the Reynolds number, but also on the
relative roughness ( ). In the transition region 2000 ≤ Re ≤ 4000, to estimate the friction, a cubic
interpolation is made with the border values of both regimes. Taking into account both types of ﬂow
(laminar and turbulent), the friction factor is calculated with:
⎧
⎪
Re < 2000;
⎨64/Re,

−2
(5)
f = 
5.74
⎪
, Re > 4000.
+ 0.9
⎩ −2 log10
3.7 Re
When the system is in a steady state, it is possible to calculate the friction factor with the
Darcy–Weisbach equation using measurements obtained from the hydraulic network, to next use the
Colebrook equation to calculate the roughness coefﬁcient of the hydraulic network material. However,
in practice, an explicit approximation using the Swamee–Jain equation is used [18]:

236

Math. Comput. Appl. 2018, 23, 70



ε
5.74
f = 0.25 log10
+
3.7 Re0.9

−2

.

(6)

Therefore, considering the roughness of the material and the friction caused by the ﬂow through
the pipeline, the pressure energy losses are deﬁned by the Darcy–Weisbach equation:
Hi − Hj = hij = f LQ2ij /2gA2 d,

(7)

where L is the length (m) of the pipeline, hij is the loss of pressure (mwc) when the ﬂow passes through
the pipe, A is the area of the cross-section (m2 ) of the pipeline, d is the diameter of the pipeline (mm)
and g is the gravity (m/s2 ). It is possible to represent some parameters of the Darcy–Weisbach equation
in a single coefﬁcient of the form:


rij = f L/ 2gA2 d ,

(8)

Hi − Hj = hij = rij Q2ij ,

(9)

and Equation (7):
where rij is the coefﬁcient of resistance to ﬂow. It is important to mention that the equivalent length of
the accessories in the hydraulic network is included in the variable L of Equation (8).
For the ﬂows that are distributed in hydraulic networks, the principle of the conservation of mass
in each node of the hydraulic network is considered, and it is presented in the following equation:

∑ Qij = Dj ,

(10)

i

where the sum considers all the ﬂows arriving at the node j from any adjacent node i and D j is the
demand or consumption in the node j. On the other hand, to represent a leak at any point of the
hydraulic network, the Torricelli equation is used [19]:
Qf = λf



Hf ,

(11)

where Q f it is the ﬂow of the leak, λ is the leakage coefﬁcient and H f is the pressure at the point where
the leak occurs. The leakage coefﬁcient is calculated according to the following expression:
λ f = cd Ad

%

2g,

(12)

where cd is a discharge coefﬁcient in the leak and Ad is the area of the hole in the pipe where the leak
occurs. These equations are considered in the modeling of hydraulic networks.
In this case, the model developed is in the steady state regime in order to guarantee ﬂow in all
regions of the hydraulic network even when a leakage ﬂow is present at any point in the pipeline.
The leak, in this case, is modeled with Torricelli’s equation. However, it is important to mention that
in a real hydraulic network system, the ﬂow regime is normally turbulent, which means that a more
accurate model is needed to consider the transient effects in order to perform a pressure wave analysis
in the case of an abrupt leak.
In the design of the hydraulic network, the Schedule 80 PVC pipe is proposed for its elastic
properties and low cost compared to other materials. Other characteristics of the network, such as the
inner diameter, the length of the pipe and the coil arrangement of the system were proposed according
to the available space in the hydraulic laboratory. The diameter and length are physical parameters
that are directly considered in the model. In the case of the coil arrangement and elbows, these are
used to redirect the ﬂow, causing more turbulence and more energy losses. However, the energy losses
caused by accessories are included indirectly by considering an equivalent straight pipe with that
energy loss.

237

Math. Comput. Appl. 2018, 23, 70

2.3. Conﬁgurations of the Proposed Hydraulic Network
The proposed hydraulic network is designed to represent three geometric arrangements; this is
possible according to the opening and closing of valves distributed in the system. The ﬁrst conﬁguration
is represented in the instrumentation diagram of Figure 1, where all the valves remain open. The second
conﬁguration is achieved by closing valves G1 and G2, to get the shape of a simple pipe, as presented
in Figure 2. Finally, the third conﬁguration consist of a duct with two branches, which can be obtained
when the valves G3 and G4 are closed, leading to the arrangement shown in Figure 3. This emphasizes
that the proposed hydraulic network is reconﬁgurable, and it will allow the development of leak
detection and control algorithms in hydraulic networks with different topologies. The physical layout
of the hydraulic network (as it will be at the end of its construction) is shown in Figure 4. The ﬁrst level
of this hydraulic network is already built and instrumented [20] and the construction of the second
level is work in process that should be completed by the end of 2018.
The importance of the different conﬁgurations of the proposed network is because they represent
real cases of hydraulic distribution networks. For example, the conﬁguration of a single pipeline is
commonly used in hydrocarbon distribution networks where the ﬂuid is transported by very extensive
(kilometers of) single pipelines; the branched network is commonly used to transport ﬂuids in industry,
where there is a single source/reservoir of ﬂuid and several demand points at different ends of the
network; while the interconnected network (closed network) is used in the transport of drinkable
water, allowing, in some cases, the water supply of a complete city.

Figure 1. Complete conﬁguration of the hydraulic network.

Figure 2. Simple pipe conﬁguration.

238

Math. Comput. Appl. 2018, 23, 70

Figure 3. Sectioned hydraulic network conﬁguration.

R
Figure 4. Front view of the hydraulic network in SolidWorks
.

2.4. Modeling of the Proposed Hydraulic Network
Figure 5 shows the pressures on the nodes and the directions of the ﬂows through the hydraulic
network, as well as the nomenclature considered to develop the mathematical model of the network.
To model the hydraulic network, it is necessary to apply the energy loss equations in each line or
pipe of the system and a mass balance in each node.
On the other hand, as was previously mentioned, the lower level of the network is a section already
built and instrumented at the Instituto Tecnológico de Tuxtla Gutiérrez (ITTG) hydraulics laboratory.
The piezometric height values are known according to the water level of the deposit (where the ﬂow is
stored and recirculated to ﬂow into the network). Furthermore, the pressure provided by the pump is
known through sensors at the ﬁrst level of the network, and it is considered as the boundary parameter
that causes the ﬂow in the network. These are known values in the system of equations that models
the proposed network and that will be solved simultaneously. The known parameters include the
pressures H0 , H4 , H5 , H8 referring to the nodes of Figure 5, which conform to 1 mwc, and as for Node 1
of the hydraulic pump H1 , the values are according to the characteristic curve generated by a pressure
of 5.60 mwc and a ﬂow of 3.83 m3 /s, while the roughness value of the Schedule 80 PVC material is
= 0.0235 mm, calculated with the Swamee–Jain equation with the experimental values obtained from
the simple duct conﬁguration that was already built [20]. The proposed lengths and diameters in each
region of the network are presented in Table 1. Using Equations (3), (9) and (11), a system of nonlinear
R
equations is obtained that will be solved in MATLAB
, where it is possible to assign different values
arbitrarily to the leakage coefﬁcient λ to simulate different scenarios without leakage and with leakage
in Node 9, which represents a hole that introduces to the model a virtual node between Nodes 2 and
3. In this way, the pressure and ﬂow values distributed throughout the hydraulic network will be

239

Math. Comput. Appl. 2018, 23, 70

obtained. Therefore, from the system represented in Figure 5, the next set of equations is generated;
for pressure drops in the system, the model is presented as follows,
H0 − H1 = F ( Q pump ),

(13)

H1 − H2 = r12

(14)

H2 − H9 = r29
H3 − H4 = r34
H2 − H6 = r26
H6 − H5 = r65
H6 − H7 = r67
H7 − H8 = r65
H3 − H7 = r37
H9 − H3 = r93

Q212 ,
Q229 ,
Q234 ,
Q226 ,
Q265 ,
Q267 ,
Q265 ,
Q265 ,
Q293 ,

(15)
(16)
(17)
(18)
(19)
(20)
(21)
(22)

where the coefﬁcient rij is described in Equation (8) and F indicates that the pressure difference between
Nodes 0 and 1 of the network is a function of the ﬂow produced by the pump.

Figure 5. Nomenclature of the system variables.
Table 1. Dimensions of the pipe sections.

(*)

Section

Length (m)

Diameter (mm)

1→2
2→9
9→3
3→4
2→6
3→7
6→5
6→7
7→8

37.26
x (*)
35.76 − x
39.26
1.00
1.00
37.26
35.76
39.26

48.6
48.6
48.6
48.6
24.3
48.6
48.6
48.6
48.6

Denotes an arbitrary escape position between Nodes 2 and 3.

Considering the mass balance in the nodes of the system, the following set of equations is obtained,
Q pump − Q12 = 0,

(23)

Q12 − Q29 = Q26 ,

(24)

Q29 − Qleak = Q93 ,

(25)

Q93 − Q34 = Q37 ,

(26)

Q26 − Q65 = Q67 ,

(27)

Q37 + Q67 = Q78 ,

(28)

240

Math. Comput. Appl. 2018, 23, 70

where the leakage ﬂow is calculated with the Torricelli Equation (11):
Qleak = λ

%

H9 .

(29)

3. Numerical Experiments
R
The set of Equations (13)–(29) obtained in the previous section is solved in MATLAB
using the
nonlinear optimization method called “trust region”, whose purpose is to solve a system of equations
f ( x ) = 0 in order to ﬁnd the optimal solution through an iterative process minimizing  f ( x )2 .
The efﬁciency of this numerical method is due to its rapid convergence [21]; in fact, it only takes 3–5 s
to simulate, on a PC with a Core i5 processor, 24 h of running time.
The ﬁrst numerical experiment is performed in the closed network without leaks. The solution
of the model provided the values of ﬂow and pressure in different regions of the hydraulic network.
The results are shown in Figure 6 where the pressure values (mwc) are located at the nodes and the
ﬂows (m3 /s) in the lines of the ﬁgure. The pressure values at the ends of the hydraulic network
(Nodes 0, 4, 5, 8) are known values with a hydraulic height of 1 mwc. This height corresponds to
the water reservoir, as there will be a single deposit that will be used to supply, store and demand
water to/from the network. Therefore, all the network ends connect to this deposit, and the water is
recirculated through the system. It also should be noted here that the displayed pressure values are
gauge pressure values, i.e., zero-referenced against ambient air pressure, so they are equal to absolute
pressure minus atmospheric pressure.

Figure 6. Pressures and ﬂows in the network without leakage.

In the same way, a second numerical experiment is performed considering a leak in Node 9 at a z
distance with respect to Node 0; the obtained values are presented in Figure 7. In this case, the results
show that, when a leak occurs, the pressures decrease in each node of the network, and there are
variations in the ﬂow rates. The leak was proposed in Node 9; however, if the leak is in any other region
of the pipe, new values of ﬂows and pressures would be obtained in the network due to the mass and
energy conservation, respectively. However, the ﬂow in each section of the hydraulic network is still
turbulent considering its speed and its diameters with respect to the Reynolds number.

Figure 7. Pressures and ﬂows in the network with a leakage in Node 9.

241

Math. Comput. Appl. 2018, 23, 70

The numerical experiment whose result is shown in Figure 7 corresponds to a speciﬁc and unique
leakage conﬁguration. However, using the mathematical model of the network, it is possible to simulate
varying conditions over time, e.g., programmed consumptions in the nodes that change during the day
or leaks that increase progressively, among others. To execute these numerical experiments—called
“extended period” in the specialized literature—from the steady state equations, a sweep is made of the
values that the parameters can take over time using “for” cycles, as shown in the following pseudocode:
params = value_list;
sols = [];
for param = params
sol = simulateNetwork(param);
sols = [sols,sol];
end
With the previous consideration, the network was simulated with a progressive leak in Node 9,
and the gradual change in the leak coefﬁcient was modeled using an exponential function:
λ = 1 × 10−4 (1 − exp(−t × 3600/3))

[m5/2 s−1 ],

(30)

where t is time in hours. This function was selected considering that its evolution over time represents
an increase from zero to a value λmax = 1 × 10−4 that would correspond to a leak through a circular
hole of about a quarter of an inch in diameter. In the graphs of Figures 8 and 9, the effects of a leak
over the network are shown, i.e., the increase in the ﬂow rate and the loss of the pressure head at the
outlet of the pump. In Figure 8, it can be seen that the ﬂow of the pump Q pump represented between
Nodes 0 and 1 remains constant over time when the system does not leak; however, this ﬂow increases
exponentially when a leak is present in the system.




)ORZ OV

4 QROHDN
4 ZLWKOHDN





















7LPH KRXUV
Figure 8. Flow variation in the presence of a leak.

In relation to the pressure variation in the system due to the occurrence of a leak, in Figure 9, it is
appreciated how the pressure H1 remains constant in the absence of leaks in the system, but decreases
when the leak appears.

242

Math. Comput. Appl. 2018, 23, 70



SUHVVXUHKHDG P



+QROHDN



+ZLWKOHDN





















7LPH KRXUV
Figure 9. Pressure head loss at the pump outlet caused by a leak.

4. Conclusions
This paper presented the design of a prototype of a hydraulic network that allows the development
of leakage control and diagnosis algorithms for three different conﬁgurations: single ducts, ducts with
branches and closed networks. The proposed hydraulic network was modeled, obtaining its system
of equations for the steady state case, which was solved using nonlinear optimization algorithms.
R
showed that the proposed network structure guarantees
Numerical experiments in MATLAB
turbulent ﬂow in all its lines for the considered conﬁgurations and that its construction and use
as a scale model of pressurized networks is feasible. It is important to mention that the developed
model is part of a section already built of the hydraulic network, which is the simple pipeline section.
The known and experimentally-validated parameters of the already built section of the network were
taken into account in the extended model of the network. However, it is necessary to perform a mean
square error analysis between the experimental values of ﬂow and pressure and the values obtained
numerically to further adjust the parameters of the model. This analysis remains as future work.
Finally, the goal of the model was to ensure the description of the ﬂow in all sections of the network,
leaving the study of the transitory effects for future work. The inclusion of the transitory effects in the
model will allow the extension of the leakage diagnosis and control techniques, as well.
Author Contributions: F.-R.L.-E. and G.V.-P. conceived and designed the experiments; J.-R.B. and H.-R.H.
performed the experiments; G.B. and L.T. analyzed the data; J.-R.B. wrote the paper.
Funding: This research was funded by the National Council for Science and Technology (CONACYT) of Mexico,
Grant Number PN-2016/3595, and Tecnológico Nacional de México (TecNM) under the program Apoyo a la
Investigación Cientíﬁca y Tecnológica, Grant Number 6358.17-P.
Conﬂicts of Interest: The authors declare no conﬂict of interest.

References
1.
2.
3.
4.

Solis Luna, N.B. Determinación Remota de Fugas de Gas y Petróleo Por Medio de Cámaras Infrarrojas.
Ph.D. Thesis, Instituto Politécnico Nacional, Mexico City, Mexico, 2009.
Fuentes-Mariles, O.; Palma-Nava, A.; Rodríguez-Vázquez, K. Estimación y localización de fugas en una red
de tuberías de agua potable usando algoritmos genéticos. Ing. Investig. Techol. 2011, 12, 235–242.
Doney, K. Leak Detection in Pipelines Using the Extended Kalman Filter and the Extended Boundary
Approach. Ph.D. Thesis, University of Saskatchewan, Saskatoon, SK, Canada, 2007.
OECD. Water Governance in Cities. In OECD Studies on Water; OECD: Paris, France, 2016.

243

Math. Comput. Appl. 2018, 23, 70

5.
6.
7.
8.
9.

10.

11.
12.

13.
14.
15.
16.
17.
18.
19.
20.

21.

Van Pham, T.; Georges, D.; Besancon, G. Predictive control with guaranteed stability for water hammer
equations. IEEE Trans. Autom. Control 2014, 59, 465–470. [CrossRef]
Torres, L.; Verde, C.; Carrera, R.; Cayetano, R. Algoritmos de diagnóstico para fallas en ductos.
Techol. Cienc. Agua 2014, 5, 57–78.
Wang, Y.; Blesa, J.; Puig, V. Robust Periodic Economic Predictive Control based on Interval Arithmetic for
Water Distribution Networks. IFAC-PapersOnLine 2017, 50, 5202–5207. [CrossRef]
Verde, C. Multi-leak detection and isolation in ﬂuid pipelines. Control Eng. Pract. 2001, 9, 673–682. [CrossRef]
Torres, L.; Besancon, G.; Georges, D. A collocation model for water-hammer dynamics with application
to leak detection. In Proceedings of the 47th IEEE Conference on Decision and Control, Cancun, Mexico,
9–11 December 2008; pp. 3890–3894.
Navarro, A.; Begovich, O.; Besançon, G.; Dulhoste, J. Real-time leak isolation based on state estimation in
a plastic pipeline. In Proceedings of the IEEE International Conference on Control Applications (CCA),
Denver, CO, USA, 28–30 September 2011; pp. 953–957.
Delgado-Aguiñaga, J.; Besançon, G.; Begovich, O.; Carvajal, J. Multi-leak diagnosis in pipelines based on
Extended Kalman Filter. Control Eng. Pract. 2016, 49, 139–148. [CrossRef]
Ocampo-Martinez, C.; Barcelli, D.; Puig, V.; Bemporad, A. Hierarchical and decentralised model predictive
control of drinking water networks: Application to barcelona case study. IET Control Theory Appl. 2012,
6, 62–71. [CrossRef]
Scola, I.R.; Besançon, G.; Georges, D. Optimizing Kalman optimal observer for state afﬁne systems by input
selection. Automatica 2018, 93, 224–230.
Soldevila, A.; Fernandez-Canti, R.M.; Blesa, J.; Tornil-Sin, S.; Puig, V. Leak localization in water distribution
networks using Bayesian classiﬁers. J. Process Control 2017, 55, 1–9. [CrossRef]
Wood, D.J.; Rayes, A.G. Reliability of algorithms for pipe network analysis. J. Hydraul. Div.
1981, 107, 1145–1161.
Wylie, E.B.; Streeter, V.L. Hydraulic Transients; FEB Press: Ann Arbor, MI, USA, 1983.
Crane. Flujo de Fluidos en Válvulas, Accesorios y Tuberías; McGraw-Hill: New York, NY, USA, 1989.
Genić, S.; Arand̄elović, I.; Kolendić, P.; Jarić, M.; Budimir, N.; Genić, V. A review of explicit approximations
of Colebrook’s equation. FME Trans. 2011, 39, 67–71.
Mott, R.L. Mecánica de Fluidos Aplicada; Pearson Educación: Turin, Italy, 1996.
Bermúdez, J.R.; Santos-Ruiz, I.; López-Estrada, F.R.; Torres, L.; Puig, V. Diseño y modelado dinámico
de una planta piloto para detección de fugas hidráulicas. In Proceedings of the Congreso Nacional de
Control Automático CNCA 2017, Mexico City, Mexico, 4–6 October 2017; Asociación Mexicana de Control
Automático: Mexico City, Mexico, 2017; Volume 1, pp. 2–7.
Coleman, T.F.; Li, Y. An interior trust region approach for nonlinear minimization subject to bounds.
SIAM J. Optim. 1996, 6, 418–445. [CrossRef]

c 2018 by the authors. Licensee MDPI, Basel, Switzerland. This article is an open access

article distributed under the terms and conditions of the Creative Commons Attribution
(CC BY) license (http://creativecommons.org/licenses/by/4.0/).

244

MDPI
St. Alban-Anlage 66
4052 Basel
Switzerland
Tel. +41 61 683 77 34
Fax +41 61 302 89 18
www.mdpi.com
Mathematical and Computational Applications Editorial Ofﬁce
E-mail: mca@mdpi.com
www.mdpi.com/journal/mca

MDPI
St. Alban-Anlage 66
4052 Basel
Switzerland
Tel: +41 61 683 77 34
Fax: +41 61 302 89 18
www.mdpi.com

ISBN 978-3-03897-448-2

